/* 
	Module KBaseRegPrecise version 1.0
	
	This module provides access to a collection of curated transcriptional regulons from the RegPrecise database (http://regprecise.lbl.gov) 
	reconstructed by a comparative genomics approach. It also provides methods for on-the-fly annotation of regulatory interactions in 
	newly submitted bacterial genomes by conservative propagation of curated (reference) regulons.
	
	
	Both curated and propagated regulons are provided as RegulomeModels. RegulomeModel is a collection of all regulons for a given genome 
	reconstructed by a given approach with given parameters. More than one RegulomeModel can exist for a particular genome.
	
*/
module KBaseRegPrecise : KBaseRegPrecise
{


	/*
		The source of regulome model. The value can be one of the following:
		
			REGPRECISE_CURATED - indicates that regulome is based on the curated regulons from RegPrecise database
			REGPRECISE_PROPAGATED - indicates that regulom model was automatically built by conservation propagation of RegPrecise reference regulons 			
	*/
  	typedef string RegulomeSource;
  	
	/*
		Type of regulation. The value can be one of the following: 
		
			TF - for regulation by transcription factor
			RNA - for regulation by RNA regulatory element (e.g. riboswitch) 
	*/		
	typedef string RegulationType;

	/*
		Type of evidence. Several types of reconstructed objects (regulons, transcription factors, etc) are provided with evidences to enable 
		the further curation and improving the model that was created by automatic procedure.   
		
			OPERON_GENE_DISTANCE_EVIDENCE - evidence for the gene content of operon basing on the intergenic distances
			REGULON_COMPARATIVE_GENOMICS_EVIDENCE - evidence for predcited regulon based on the orthologous regulon from another genome
			REGULATOR_COMPARATIVE_GENOMICS_EVIDENCE - evidence for orthology of transcription factor basing on 
			SITE_COMPARATIVE_GENOMICS_EVIDENCE - evidence for TFBS based on the its conservation between several genomes (comparative genomics)		
	*/		
	typedef string EvidenceType;
	
	/*
		Helper type to represent a Date
	*/		
	typedef string Date;
	
	/*
		Helper type to represent boolean values
	*/		
	typedef string Boolean;

	/*
		Represents either transcription factor binding site, or RNA regulatory element.
		
		string sequence
		Nucletotide sequence of the site
		
		int position
		Position relative to the first start of the fisrt gene in the regulated operon
		
		float score
		Score of the site  	
		
	*/
	typedef structure {
		string sequence;
		int position;
		float score;	
	} Site;

	/*
		Represents a gene and its basic information
		
		string geneId
		Unique KBase identifier of a gene
		
		string locusTag
		Locus tag of a gene
		
		string name
		Gene name			
	*/
	typedef structure {
		string geneId;
		string locusTag;
		string name;	
	} Gene;

	/*
		Represents evidence for a regulator to be considered as an ortholog
		
		EvidenceType type
		Regulator-specific type of evidence
		
		string description
		Description of evidence
		
    	float  strength
    	Value from 0 to 1 representing a strength of evidence
		
    	float  confidence
    	Value from 0 to 1 representing a probability of evidence
			
		string srcRegulatorId
		Unique identifier of the source regulator by similarity to which the orthology assignment was made
		
		string srcRegulatorLocusTag;	
		Locus tag of the source regulator by similarity to which the orthology assignment was made		 
	*/
	typedef structure {
		EvidenceType type;
		string description;
		float strength;
		float confidence;	
	
		string srcRegulatorId;
		string srcRegulatorLocusTag;	
	} RegulatorEvidence;
	
	/*
		Represents regulator (transcription factor).
		
		string regulatorId
		Unique identifier of a regulator
		
		string locusTag
		Locus tag of a regulator
		
		list<RegulatorEvidence> evidences
		List of regulator evidences		
	*/
	typedef structure {
		string regulatorId;
		string locusTag;
		list<RegulatorEvidence> evidences;	
	} Regulator;
	
	
	/*
		Represents evidence for a predicted TFBS
		
		EvidenceType type
		Site-specific type of evidence
		
		string description
		Description of evidence
		
    	float  strength
    	Value from 0 to 1 representing a strength of evidence
		
    	float  confidence
    	Value from 0 to 1 representing a probability of evidence
		
		float siteScoreThreshold
		Threshold used to predict TFBS 
		
		string srcRegulomeId
		The identifier of a regulome model used as a source of reference regulons in comparative analysis (reference regulome).   
		
		int srcTaxonomyId
		NCBI taxonomy id of a genome of a reference regulome		
		
		string srcGenomeName
		The name of a genome of a reference regulome		
				
		list<Gene> srcGenes
		List of genes from orthologous operon in a reference regulome  
		
		list<Site> srcSites
		List of sites from orthologous operon in a reference regulome  

	*/	
	typedef structure {
		EvidenceType type;
		string description;
		float strength;
		float confidence;	
	
		float siteScoreThreshold;
		string srcRegulomeId;
		int srcTaxonomyId;
		string srcGenomeName;
		list<Gene> srcGenes;
		list<Site> srcSites;
	} SiteEvidence;	
		
	/*
		Represents evidence for a predicted operon.
		
		EvidenceType type
		Operon-specific type of evidence
		
		string description
		Description of evidence
		
    	float  strength
    	Value from 0 to 1 representing a strength of evidence
		
    	float  confidence
    	Value from 0 to 1 representing a probability of evidence
		
	 	int intergenicDistance
	 	Maximum observed distance between genes in a predicted operon
	 	
		int maxIntergenicDistance		
	 	Maximum expected distance between genes in a predicted operon
	*/		
	typedef structure {
		EvidenceType type;
		string description;
		float strength;
		float confidence;	
	
	 	int intergenicDistance;
		int maxIntergenicDistance;
	} OperonEvidence;	
	
	
	/*
		Represents a model of regulated operon predicted during the propagation procedure
		
		list<Gene> genes
		List of genes in the operon
		
		list<Site> sites
		List of sites in upstream region of the first gene in the operon
			
		list<OperonEvidence> operonEvidences
		List of operon evidences supporting the gene content of the operon
		
		list<SiteEvidence> siteEvidences
		List of site evidences supporting predicted TFBSs
	*/	
	typedef structure {
		list<Gene> genes;
		list<Site> sites;	
		list<OperonEvidence> operonEvidences;
		list<SiteEvidence> siteEvidences;
	} OperonModel;
	
	
	/*
		Represents evidence for a predicted regulon.
		
		EvidenceType type
		Regulon-specific type of evidence
		
		string description
		Description of evidence
		
    	float  strength
    	Value from 0 to 1 representing a strength of evidence
		
    	float  confidence
    	Value from 0 to 1 representing a probability of evidence

		int srcRegPreciseRegulogId	
		Identifier of the source regulog id used as a reference in the propagation procedure
	*/		
	typedef structure {
		EvidenceType type;
		string description;
		float strength;
		float confidence;
			
		int srcRegPreciseRegulogId;	
	} RegulonEvidence;	
	
	
	/*
		Represents a model of a predicted regulon.

		string regulonModelId
		Identifier of a regulon model
		
		string regulomeModelId
		Identifier of a regulome model which the regulon belongs to 
		
		string regulatorName
		The name of the regulator 		
			
		RegulationType regulationType
		The type of regulation
		
		list<Regulator> regulators
		List of regulators assigned to this regulon. More than one regulator can be assigned to a predicted regulon if there are close paralogs
		
		list<OperonModel> operons
		List of models of regulated operons
		
		list<RegulonEvidence> evidences
		List of regulon-specific evidences.  		
	*/
	typedef structure {
		string regulonModelId;
		string regulomeModelId;
		string regulatorName;	
		RegulationType regulationType;
		
		list<Regulator> regulators;
		list<OperonModel> operons;
		list<RegulonEvidence> evidences;
	} RegulonModel;

	/*
		Provides a general statistics for a given regulon model.
		
		string regulonModelId
		Identifier of a regulon model
		
		string regulomeModelId
		Identifier of a regulome model which the regulon belongs to 
		
		string regulatorName
		The name of the regulator 		
			
		RegulationType regulationType
		The type of regulation
	
		int regulatedOperonCount
		The total number of regulated operons
		
		int regulatedGeneCount
		The total number of regulated genes
		
		int sitesCount
		The total number of regulatory sites
		 
	*/
	typedef structure {
		string regulonModelId;
		string regulomeModelId;
		string regulatorName;	
		RegulationType regulationType;
	
		int regulatedOperonCount;
		int regulatedGeneCount;
		int sitesCount;
	
	} RegulonModelStat;
	
	
	/*
		Represents a model of regulome.
		
		string regulomeModelId
		Identifier of a regulome model
		
		string genomeId
		Identifier of a genome id for which the regulome model was created
		
		string genomeName
		The name of a genome for which the regulome model was created
		
		int ncbiTaxonomyId
		The NCBI taxonomy id of a genome for which the regulome model was created
		
		Date createDate
		The date when the model was created
		
		RegulomeSource regulomeSource
		The source of a regulome model
		
		string buildParams
		String representation of parameters used to build a model
		
		int tfRegulonCount
		The total number of regulons in a model controlled by trancription factors
		
		
		int rnaRegulonCount			
		The total number of regulons in a model controlled by RNA regulatory elements
	*/
	typedef structure {
		string regulomeModelId;
		string genomeId;
		string genomeName;
		int ncbiTaxonomyId;	
		Date createDate;
		RegulomeSource regulomeSource;
		string buildParams;
		
		int tfRegulonCount;
		int rnaRegulonCount;			
	} RegulomeModel;


	/*
		Represents a collection of regulome models. 
		
		string collectionId
		Identifier of a collection
		
		string name
		The name of a collection
		
		string taxonName
		The taxony name of a collection
		
		string phylum
		The phylum of a collection
		
		string description
		The description of a collection
			
		Date createDate
		The date when a colection was created
		
		RegulomeSource regulomeSource
		The source of a regulomes in a given collection 
		
		string buildParams
		The parameters used to build regulome modeles from this collection (if construction of all regulome models was submitted a single job)
			
		int regulomeModelCount
		The total number of regulom models in a collection			
	*/
	typedef structure {
		string collectionId;
		string name;
		string taxonName;
		string phylum;
		string description;	
		Date createDate;
		RegulomeSource regulomeSource;
		string buildParams;	
		int regulomeModelCount;	
	} RegulomeModelCollection;
	
	/*
		Represents parametrs for building a regulome model by conservative propagation
		
		string targetGenomeId
		Identifier of a target genome for annotation of regualtory interactions 
		
		string sourceRegulomeCollectionId
		Identifier of regulome collection id that should be used as a source (reference).		
	*/
	typedef structure {
		string targetGenomeId;
		string sourceRegulomeCollectionId;
	} BuildRegulomeModelParam;
	
	/*
		Represents the state of the annotation (building a regulome model) process.
	
		int processId
		Identifier of annotation process (job)
		
		int percentDone
		Percent of accomplished tasks
		
		string description
		Description of the current step
		
		Boolean done
		Whether the jod is finished or not
		
		string modelId
		The identifier of reconstructed regulome model

	*/
	typedef structure {
		int processId;
		int percentDone;
		string description;
		Boolean done;
		string modelId;
	} ProcessState;


	/*
		Returns a list of all  regulome model collections.
	*/
	funcdef getRegulomeModelCollections() returns(list<RegulomeModelCollection> regulomeModelCollections);
	
	/*
		Returns a regulome model collection by a given identifier.
		
		string collectionId
		Identifier of a collection of regulome models 
		
	*/	
	funcdef getRegulomeModelCollection(string collectionId) returns(RegulomeModelCollection regulomeModelCollection);

	/*
		Returns a list of regulome models for a given collection.
		
		string collectionId
		Identifier of a collection of regulome models 
	*/
	funcdef getRegulomeModelsByCollectionId(string collectionId) returns(list<RegulomeModel> regulomeModels);

	/*
		Returns a list of regulome models for a given genome.
		
		string genomeId
		Identifier of a genome
	*/
	funcdef getRegulomeModelsByGenomeId(string genomeId) returns(list<RegulomeModel> regulomeModels);

	/*
		Returns a list of regulome models for a source type.
		
		string regulomeSource
		The source type of regulome model
	*/
	funcdef getRegulomeModelsBySourceType(string regulomeSource) returns(list<RegulomeModel> regulomeModels);

	/*
		Returns a regulome model by a given identifier.
		
		string regulomeModelId
		Identifier of a regulome model
	*/
	funcdef getRegulomeModel(string regulomeModelId) returns(RegulomeModel regulomeModel);

		
	/*
		Returns a geneeral statistics for all regulons from a given regulome model.
		
		string regulomeModelId
		Identifier of a regulome model
	*/
	funcdef getRegulonModelStats(string regulomeModelId) returns(list<RegulonModelStat> regulonModelStats);
	
	/*
		Returns a regulon model by a given identifier.
		
		string regulonModelId
		Identifier of a regulon model
	*/	
	funcdef getRegulonModel(string regulonModelId) returns(RegulonModel regulonModel);
	
	/*
		Launches the procedure for building regulome model. It returns the processState objects describing the current state. 
		The process state identifier can be later used to monitor the annotation process. 
		
		BuildRegulomeModelParam param
		Parameters for building regulome model		
	*/
	funcdef buildRegulomeModel(BuildRegulomeModelParam param) returns(ProcessState processState);
			
	/*
		Returns infofrmation for a given process. 
		
		int processId
		Identifier of a process.
	*/
  	funcdef getProcessState(int processId) returns(ProcessState processState);
};
