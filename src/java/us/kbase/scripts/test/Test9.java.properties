package us.kbase.test9;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

import junit.framework.Assert;

import us.kbase.common.service.GwtTransformer;
import us.kbase.common.service.Tuple2;
import us.kbase.gwt.ComplexStructGWT;
import us.kbase.gwt.SimpleStructGWT;
import us.kbase.test9.gwttest.ComplexStruct;
import us.kbase.test9.gwttest.SimpleStruct;

public class Test9 {
	
	public Test9() throws Exception {
		SimpleStruct sval = new SimpleStruct();
		sval.setProp1(123L);
		sval.setProp2(45.6);
		sval.setProp3("789");
		ComplexStruct cval = new ComplexStruct();
		Map<String, Tuple2<SimpleStruct, SimpleStruct>> val1map = new HashMap<String, Tuple2<SimpleStruct,SimpleStruct>>();
		val1map.put("key1", new Tuple2<SimpleStruct, SimpleStruct>().withE1(sval).withE2(sval));
		List<Map<String, Tuple2<SimpleStruct, SimpleStruct>>> val1 = Arrays.asList(val1map);
		cval.setVal1(val1);
		Map<String, List<Tuple2<SimpleStruct, SimpleStruct>>> val2 = new HashMap<String, List<Tuple2<SimpleStruct, SimpleStruct>>>();
		val2.put("key2", Arrays.asList(new Tuple2<SimpleStruct, SimpleStruct>().withE1(sval).withE2(sval)));
		cval.setVal2(val2);
		Tuple2<List<SimpleStruct>, Map<String, SimpleStruct>> val3 = new Tuple2<List<SimpleStruct>, Map<String, SimpleStruct>>();
		Map<String, SimpleStruct> val3map = new TreeMap<String, SimpleStruct>();
		val3map.put("key3", sval);
		val3.withE1(Arrays.asList(sval)).setE2(val3map);
		cval.setVal3(val3);
	    ComplexStructGWT val = GwtTransformer.transform(cval, ComplexStructGWT.class);
	    checkSimpleStruct(sval, val.getVal1().get(0).get("key1").getE2());
	    checkSimpleStruct(sval, val.getVal2().get("key2").get(0).getE1());
	    checkSimpleStruct(sval, val.getVal3().getE1().get(0));
	    checkSimpleStruct(sval, val.getVal3().getE2().get("key3"));
	}
	
	private static void checkSimpleStruct(SimpleStruct expected, SimpleStructGWT actual) {
		Assert.assertEquals(expected.getProp1(), actual.getProp1());
		Assert.assertEquals(expected.getProp2(), actual.getProp2());
		Assert.assertEquals(expected.getProp3(), actual.getProp3());
	}
	
	public static void main(String[] args) throws Exception {
		new Test9();
	}
}