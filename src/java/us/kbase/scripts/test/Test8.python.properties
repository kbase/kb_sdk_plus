#BEGIN_HEADER
#
# Header comment.
#
#END_HEADER


class Storing:
    '''
    Module Name:
    Storing

    Module Description:
    
    '''

    ######## WARNING FOR GEVENT USERS #######
    # Since asynchronous IO can lead to methods - even the same method -
    # interrupting each other, you must be *very* careful when using global
    # state. A method could easily clobber the state set by another while
    # the latter method is running.
    #########################################
    #BEGIN_CLASS_HEADER
    #
    # Class header comment.
    #
    #END_CLASS_HEADER

    # config contains contents of config file in a hash or None if it couldn't
    # be found
    def __init__(self, config):
        #BEGIN_CONSTRUCTOR
        self.myValue = -1
        #END_CONSTRUCTOR
        pass

    def m1(self, ctx):
        # ctx is the context object
        #BEGIN m1
        self.myValue = 1
        #END m1

    def m2(self, ctx):
        # ctx is the context object
        #BEGIN m2
        self.myValue = 2
        #END m2

    def m1second(self, ctx):
        # ctx is the context object
        #BEGIN m1second
        self.myValue = 3
        #END m1second

    def m2second(self, ctx):
        # ctx is the context object
        #BEGIN m2second
        self.myValue = 4
        #END m2second
