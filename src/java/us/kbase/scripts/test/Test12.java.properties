package us.kbase.test12;

import java.net.URL;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import us.kbase.auth.AuthToken;
import us.kbase.common.service.Tuple2;
import us.kbase.common.service.UObject;
import us.kbase.test12.asyncmethods.AsyncMethodsClient;

import junit.framework.Assert;

public class Test12 {
	
	public Test12(AsyncMethodsClient client, Integer port) throws Exception {
        AuthToken token = new AuthToken(System.getProperty("test.token"), "<unknown>");
        client = new AsyncMethodsClient(new URL("http://localhost:" + port), token);
        client.setIsInsecureHttpConnectionAllowed(true);
        if (System.getProperty("KB_JOB_CHECK_WAIT_TIME") != null)
            client.setAsyncJobCheckTimeMs(Long.parseLong(System.getProperty("KB_JOB_CHECK_WAIT_TIME")));
		client.getNoObject();
		List<String> list1 = new ArrayList<String>();
		list1.add("123");
		List<String> ret1 = client.getOneObject(list1);
		Assert.assertEquals("[\"123\"]", UObject.transformObjectToString(ret1));
		Map<String, String> map2 = new LinkedHashMap<String, String>();
		map2.put("12", "34");
        Tuple2<List<String>, Map<String, String>> ret2 = client.getTwoObjects(list1, map2);
        Assert.assertEquals("[[\"123\"],{\"12\":\"34\"}]", UObject.transformObjectToString(ret2));
        try {
            client.throwErrorOnServerSide("Special async error");
            Assert.fail("Method shouldn't work because there is an exception on server side");
        } catch (Throwable ex) {
            Assert.assertEquals("Special async error", ex.getMessage());
        }
	}
	
	public static void main(String[] args) throws Exception {
	   if (args.length != 1) {
	       System.out.println("Usage: <program> <server_port>");
	       return;
	   }
	   new Test12(null, Integer.parseInt(args[0]));
	}
}