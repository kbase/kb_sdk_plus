{
  "Sim" : [ [ {
    "!" : "Bio::KBase::KIDL::KBT::DefineModule",
    "annotations" : {
      "unknown_annotations" : { }
    },
    "comment" : "The similarity service exposes the SEED similarity server to the KBase. The\nsimilarity server stores precomputed all-to-all BLAST similarities for a\nlarge database of proteins; this database includes all genomes curated by the\nSEED project as well as a variety of third-party protein databases (NCBI\nnr, Uniprot/Swissprot, IMG, etc).\n\nWhile the SEED similarity server does not itself have knowledge of proteins\nwith KBase identifiers, we use the MD5 signature of the protein sequence\nto perform lookups into the similarity server. Similarities returned from\nthe similarity server are also identified with the MD5 signature, and are\nmapped back to KBase identifiers using the information in the KBase Central Store.",
    "module_components" : [ {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Tuple",
        "annotations" : { },
        "comment" : "Each similarity returned is encapsulated in a sim_vec tuple. This tuple\ncontains the similar protein identifiers, as well as the columns as seen in the\nblastall -m8 output..\n\nThe columns in the tuple are defined as follows:\n\n  0   id1        query sequence id\n  1   id2        subject sequence id\n  2   iden       percentage sequence identity\n  3   ali_ln     alignment length\n  4   mismatches  number of mismatch\n  5   gaps       number of gaps\n  6   b1         query seq match start\n  7   e1         query seq match end\n  8   b2         subject seq match start\n  9   e2         subject seq match end\n 10   psc        match e-value\n 11   bsc        bit score\n 12   ln1        query sequence length\n 13   ln2        subject sequence length\n 14   tool       tool used to produce similarities\n\nAll following fields may vary by tool:\n\n 15   loc1       query seq locations string (b1-e1,b2-e2,b3-e3)\n 16   loc2       subject seq locations string (b1-e1,b2-e2,b3-e3)\n 17   dist       tree distance\n\nWe also return this column for any lookups when the kb_function2 flag\nis enabled:\n\n 18  function2   The function associated with id2 in the KBase.",
        "element_names" : [ "id1", "id2", "iden", "ali_ln", "mismatches", "gaps", "b1", "e1", "b2", "e2", "psc", "bsc", "ln1", "ln2", "tool", "def2", "ali", "function2" ],
        "element_types" : [ {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "float"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "float"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "float"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        } ],
        "name" : "sim_vec"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Each similarity returned is encapsulated in a sim_vec tuple. This tuple\ncontains the similar protein identifiers, as well as the columns as seen in the\nblastall -m8 output..\n\nThe columns in the tuple are defined as follows:\n\n  0   id1        query sequence id\n  1   id2        subject sequence id\n  2   iden       percentage sequence identity\n  3   ali_ln     alignment length\n  4   mismatches  number of mismatch\n  5   gaps       number of gaps\n  6   b1         query seq match start\n  7   e1         query seq match end\n  8   b2         subject seq match start\n  9   e2         subject seq match end\n 10   psc        match e-value\n 11   bsc        bit score\n 12   ln1        query sequence length\n 13   ln2        subject sequence length\n 14   tool       tool used to produce similarities\n\nAll following fields may vary by tool:\n\n 15   loc1       query seq locations string (b1-e1,b2-e2,b3-e3)\n 16   loc2       subject seq locations string (b1-e1,b2-e2,b3-e3)\n 17   dist       tree distance\n\nWe also return this column for any lookups when the kb_function2 flag\nis enabled:\n\n 18  function2   The function associated with id2 in the KBase.",
      "module" : "Sim",
      "name" : "sim_vec"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Option specification. The following options are available for the sims call:\n\n  kb_only        Only return KBase identifiers (not raw MD5 or other external IDs).\n  kb_function2   For KB identifiers, return the function mapped to id2.\n  evalue_cutoff  Return similarities with an e-value better than this value.\n  max_sims       Return at most this many similarities. The number of values\n                 may exceed this due to multiple identifiers mapping to the same sequence.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "int"
          },
          "name" : "kb_only",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "int"
          },
          "name" : "kb_function2",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "float"
          },
          "name" : "evalue_cutoff",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "int"
          },
          "name" : "max_sims",
          "nullable" : "0"
        } ],
        "module" : "Sim",
        "name" : "options"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Option specification. The following options are available for the sims call:\n\n  kb_only        Only return KBase identifiers (not raw MD5 or other external IDs).\n  kb_function2   For KB identifiers, return the function mapped to id2.\n  evalue_cutoff  Return similarities with an e-value better than this value.\n  max_sims       Return at most this many similarities. The number of values\n                 may exceed this due to multiple identifiers mapping to the same sequence.",
      "module" : "Sim",
      "name" : "options"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "Retrieve precomputed protein similarities given a list of identifiers.\n\nThe options parameter allows simple configuration of the call. The following\nvalues in the structure are interpreted:\n\n kb_only        Only return KBase identifiers (not raw MD5 or other external IDs).\n kb_function2   For KB identifiers, return the function mapped to id2.\n evalue_cutoff  Return similarities with an e-value better than this value.\n max_sims       Return at most this many similarities. The number of values\n                may exceed this due to multiple identifiers mapping to the same sequence.\n\nEach similarity returned is encapsulated in a sim_vec tuple. This tuple\ncontains the similar protein identifiers, as well as the columns as seen in the\nblastall -m8 output..\n\nThe return is a list of tuples representing the similarity values. The indexes in the\ntuple are defined as follows:\n\n  0   id1        query sequence id\n  1   id2        subject sequence id\n  2   iden       percentage sequence identity\n  3   ali_ln     alignment length\n  4   mismatches  number of mismatch\n  5   gaps       number of gaps\n  6   b1         query seq match start\n  7   e1         query seq match end\n  8   b2         subject seq match start\n  9   e2         subject seq match end\n 10   psc        match e-value\n 11   bsc        bit score\n 12   ln1        query sequence length\n 13   ln2        subject sequence length\n 14   tool       tool used to produce similarities\n\nAll following fields may vary by tool:\n\n 15   loc1       query seq locations string (b1-e1,b2-e2,b3-e3)\n 16   loc2       subject seq locations string (b1-e1,b2-e2,b3-e3)\n 17   dist       tree distance\n\nWe also return this column for any lookups when the kb_function2 flag\nis enabled.\n\n 18  function2   The function associated with id2 in the KBase.",
      "name" : "sims",
      "parameters" : [ {
        "name" : "ids",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          }
        }
      }, {
        "name" : "options",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Struct",
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { }
            },
            "comment" : "Option specification. The following options are available for the sims call:\n\n  kb_only        Only return KBase identifiers (not raw MD5 or other external IDs).\n  kb_function2   For KB identifiers, return the function mapped to id2.\n  evalue_cutoff  Return similarities with an e-value better than this value.\n  max_sims       Return at most this many similarities. The number of values\n                 may exceed this due to multiple identifiers mapping to the same sequence.",
            "items" : [ {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              },
              "name" : "kb_only",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              },
              "name" : "kb_function2",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "float"
              },
              "name" : "evalue_cutoff",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              },
              "name" : "max_sims",
              "nullable" : "0"
            } ],
            "module" : "Sim",
            "name" : "options"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Option specification. The following options are available for the sims call:\n\n  kb_only        Only return KBase identifiers (not raw MD5 or other external IDs).\n  kb_function2   For KB identifiers, return the function mapped to id2.\n  evalue_cutoff  Return similarities with an e-value better than this value.\n  max_sims       Return at most this many similarities. The number of values\n                 may exceed this due to multiple identifiers mapping to the same sequence.",
          "module" : "Sim",
          "name" : "options"
        }
      } ],
      "return_type" : [ {
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Tuple",
              "annotations" : { },
              "comment" : "Each similarity returned is encapsulated in a sim_vec tuple. This tuple\ncontains the similar protein identifiers, as well as the columns as seen in the\nblastall -m8 output..\n\nThe columns in the tuple are defined as follows:\n\n  0   id1        query sequence id\n  1   id2        subject sequence id\n  2   iden       percentage sequence identity\n  3   ali_ln     alignment length\n  4   mismatches  number of mismatch\n  5   gaps       number of gaps\n  6   b1         query seq match start\n  7   e1         query seq match end\n  8   b2         subject seq match start\n  9   e2         subject seq match end\n 10   psc        match e-value\n 11   bsc        bit score\n 12   ln1        query sequence length\n 13   ln2        subject sequence length\n 14   tool       tool used to produce similarities\n\nAll following fields may vary by tool:\n\n 15   loc1       query seq locations string (b1-e1,b2-e2,b3-e3)\n 16   loc2       subject seq locations string (b1-e1,b2-e2,b3-e3)\n 17   dist       tree distance\n\nWe also return this column for any lookups when the kb_function2 flag\nis enabled:\n\n 18  function2   The function associated with id2 in the KBase.",
              "element_names" : [ "id1", "id2", "iden", "ali_ln", "mismatches", "gaps", "b1", "e1", "b2", "e2", "psc", "bsc", "ln1", "ln2", "tool", "def2", "ali", "function2" ],
              "element_types" : [ {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "float"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "float"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "float"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              } ],
              "name" : "sim_vec"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Each similarity returned is encapsulated in a sim_vec tuple. This tuple\ncontains the similar protein identifiers, as well as the columns as seen in the\nblastall -m8 output..\n\nThe columns in the tuple are defined as follows:\n\n  0   id1        query sequence id\n  1   id2        subject sequence id\n  2   iden       percentage sequence identity\n  3   ali_ln     alignment length\n  4   mismatches  number of mismatch\n  5   gaps       number of gaps\n  6   b1         query seq match start\n  7   e1         query seq match end\n  8   b2         subject seq match start\n  9   e2         subject seq match end\n 10   psc        match e-value\n 11   bsc        bit score\n 12   ln1        query sequence length\n 13   ln2        subject sequence length\n 14   tool       tool used to produce similarities\n\nAll following fields may vary by tool:\n\n 15   loc1       query seq locations string (b1-e1,b2-e2,b3-e3)\n 16   loc2       subject seq locations string (b1-e1,b2-e2,b3-e3)\n 17   dist       tree distance\n\nWe also return this column for any lookups when the kb_function2 flag\nis enabled:\n\n 18  function2   The function associated with id2 in the KBase.",
            "module" : "Sim",
            "name" : "sim_vec"
          }
        }
      } ]
    } ],
    "module_name" : "Sim",
    "options" : [ ],
    "service_name" : "Sim"
  }, [ ], {
    "UnspecifiedObject" : {
      "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
      "annotations" : { }
    },
    "float" : {
      "!" : "Bio::KBase::KIDL::KBT::Scalar",
      "annotations" : { },
      "scalar_type" : "float"
    },
    "int" : {
      "!" : "Bio::KBase::KIDL::KBT::Scalar",
      "annotations" : { },
      "scalar_type" : "int"
    },
    "options" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Option specification. The following options are available for the sims call:\n\n  kb_only        Only return KBase identifiers (not raw MD5 or other external IDs).\n  kb_function2   For KB identifiers, return the function mapped to id2.\n  evalue_cutoff  Return similarities with an e-value better than this value.\n  max_sims       Return at most this many similarities. The number of values\n                 may exceed this due to multiple identifiers mapping to the same sequence.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "int"
          },
          "name" : "kb_only",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "int"
          },
          "name" : "kb_function2",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "float"
          },
          "name" : "evalue_cutoff",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "int"
          },
          "name" : "max_sims",
          "nullable" : "0"
        } ],
        "module" : "Sim",
        "name" : "options"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Option specification. The following options are available for the sims call:\n\n  kb_only        Only return KBase identifiers (not raw MD5 or other external IDs).\n  kb_function2   For KB identifiers, return the function mapped to id2.\n  evalue_cutoff  Return similarities with an e-value better than this value.\n  max_sims       Return at most this many similarities. The number of values\n                 may exceed this due to multiple identifiers mapping to the same sequence.",
      "module" : "Sim",
      "name" : "options"
    },
    "sim_vec" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Tuple",
        "annotations" : { },
        "comment" : "Each similarity returned is encapsulated in a sim_vec tuple. This tuple\ncontains the similar protein identifiers, as well as the columns as seen in the\nblastall -m8 output..\n\nThe columns in the tuple are defined as follows:\n\n  0   id1        query sequence id\n  1   id2        subject sequence id\n  2   iden       percentage sequence identity\n  3   ali_ln     alignment length\n  4   mismatches  number of mismatch\n  5   gaps       number of gaps\n  6   b1         query seq match start\n  7   e1         query seq match end\n  8   b2         subject seq match start\n  9   e2         subject seq match end\n 10   psc        match e-value\n 11   bsc        bit score\n 12   ln1        query sequence length\n 13   ln2        subject sequence length\n 14   tool       tool used to produce similarities\n\nAll following fields may vary by tool:\n\n 15   loc1       query seq locations string (b1-e1,b2-e2,b3-e3)\n 16   loc2       subject seq locations string (b1-e1,b2-e2,b3-e3)\n 17   dist       tree distance\n\nWe also return this column for any lookups when the kb_function2 flag\nis enabled:\n\n 18  function2   The function associated with id2 in the KBase.",
        "element_names" : [ "id1", "id2", "iden", "ali_ln", "mismatches", "gaps", "b1", "e1", "b2", "e2", "psc", "bsc", "ln1", "ln2", "tool", "def2", "ali", "function2" ],
        "element_types" : [ {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "float"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "float"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "float"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        } ],
        "name" : "sim_vec"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Each similarity returned is encapsulated in a sim_vec tuple. This tuple\ncontains the similar protein identifiers, as well as the columns as seen in the\nblastall -m8 output..\n\nThe columns in the tuple are defined as follows:\n\n  0   id1        query sequence id\n  1   id2        subject sequence id\n  2   iden       percentage sequence identity\n  3   ali_ln     alignment length\n  4   mismatches  number of mismatch\n  5   gaps       number of gaps\n  6   b1         query seq match start\n  7   e1         query seq match end\n  8   b2         subject seq match start\n  9   e2         subject seq match end\n 10   psc        match e-value\n 11   bsc        bit score\n 12   ln1        query sequence length\n 13   ln2        subject sequence length\n 14   tool       tool used to produce similarities\n\nAll following fields may vary by tool:\n\n 15   loc1       query seq locations string (b1-e1,b2-e2,b3-e3)\n 16   loc2       subject seq locations string (b1-e1,b2-e2,b3-e3)\n 17   dist       tree distance\n\nWe also return this column for any lookups when the kb_function2 flag\nis enabled:\n\n 18  function2   The function associated with id2 in the KBase.",
      "module" : "Sim",
      "name" : "sim_vec"
    },
    "string" : {
      "!" : "Bio::KBase::KIDL::KBT::Scalar",
      "annotations" : { },
      "scalar_type" : "string"
    }
  } ] ]
}