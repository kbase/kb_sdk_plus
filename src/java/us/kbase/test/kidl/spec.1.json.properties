{
  "Workspace" : [ [ {
    "!" : "Bio::KBase::KIDL::KBT::DefineModule",
    "annotations" : {
      "unknown_annotations" : { }
    },
    "comment" : "The workspace service at its core is a storage and retrieval system for \ntyped objects. Objects are organized by the user into one or more workspaces.\n\nFeatures:\n\nVersioning of objects\nData provenenance\nObject to object references\nWorkspace sharing\n***Add stuff here***\n\nNotes about deletion and GC\n\nBINARY DATA:\nAll binary data must be hex encoded prior to storage in a workspace. \nAttempting to send binary data via a workspace client will cause errors.",
    "module_components" : [ {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A boolean. 0 = false, other = true.",
      "module" : "Workspace",
      "name" : "boolean"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "The unique, permanent numerical ID of a workspace.",
      "module" : "Workspace",
      "name" : "ws_id"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
      "module" : "Workspace",
      "name" : "ws_name"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Represents the permissions a user or users have to a workspace:\n\n        'a' - administrator. All operations allowed.\n        'w' - read/write.\n        'r' - read.\n        'n' - no permissions.",
      "module" : "Workspace",
      "name" : "permission"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Login name of a KBase user account.",
      "module" : "Workspace",
      "name" : "username"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
      "module" : "Workspace",
      "name" : "timestamp"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
      "module" : "Workspace",
      "name" : "type_string"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Mapping",
        "annotations" : { },
        "key_type" : {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        },
        "value_type" : {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        }
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "User provided metadata about an object.\nArbitrary key-value pairs provided by the user.",
      "module" : "Workspace",
      "name" : "usermeta"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "A workspace identifier.\n\n                Select a workspace by one, and only one, of the numerical id or name,\n                        where the name can also be a KBase ID including the numerical id,\n                        e.g. kb|ws.35.\n                ws_id id - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID in KBase\n                        format, e.g. kb|ws.78.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
            "module" : "Workspace",
            "name" : "ws_name"
          },
          "name" : "workspace",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The unique, permanent numerical ID of a workspace.",
            "module" : "Workspace",
            "name" : "ws_id"
          },
          "name" : "id",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "WorkspaceIdentity"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A workspace identifier.\n\n                Select a workspace by one, and only one, of the numerical id or name,\n                        where the name can also be a KBase ID including the numerical id,\n                        e.g. kb|ws.35.\n                ws_id id - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID in KBase\n                        format, e.g. kb|ws.78.",
      "module" : "Workspace",
      "name" : "WorkspaceIdentity"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Tuple",
        "annotations" : { },
        "comment" : "Information about a workspace.\n\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace.\n        username owner - name of the user who owns (e.g. created) this workspace.\n        timestamp moddate - date when the workspace was last modified.\n        permission user_permission - permissions for the authenticated user of\n                this workspace.\n        permission globalread - whether this workspace is globally readable.",
        "element_names" : [ "id", "workspace", "owner", "moddate", "user_permission", "globalread" ],
        "element_types" : [ {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "int"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The unique, permanent numerical ID of a workspace.",
          "module" : "Workspace",
          "name" : "ws_id"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
          "module" : "Workspace",
          "name" : "ws_name"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Login name of a KBase user account.",
          "module" : "Workspace",
          "name" : "username"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
          "module" : "Workspace",
          "name" : "timestamp"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Represents the permissions a user or users have to a workspace:\n\n        'a' - administrator. All operations allowed.\n        'w' - read/write.\n        'r' - read.\n        'n' - no permissions.",
          "module" : "Workspace",
          "name" : "permission"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Represents the permissions a user or users have to a workspace:\n\n        'a' - administrator. All operations allowed.\n        'w' - read/write.\n        'r' - read.\n        'n' - no permissions.",
          "module" : "Workspace",
          "name" : "permission"
        } ],
        "name" : "workspace_info"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Information about a workspace.\n\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace.\n        username owner - name of the user who owns (e.g. created) this workspace.\n        timestamp moddate - date when the workspace was last modified.\n        permission user_permission - permissions for the authenticated user of\n                this workspace.\n        permission globalread - whether this workspace is globally readable.",
      "module" : "Workspace",
      "name" : "workspace_info"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "The unique, permanent numerical ID of an object.",
      "module" : "Workspace",
      "name" : "obj_id"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
      "module" : "Workspace",
      "name" : "obj_name"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "An object version.\nThe version of the object, starting at 1.",
      "module" : "Workspace",
      "name" : "obj_ver"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
      "module" : "Workspace",
      "name" : "obj_ref"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "An object identifier.\n\nSelect an object by either:\n        One, and only one, of the numerical id or name of the workspace,\n        where the name can also be a KBase ID including the numerical id,\n        e.g. kb|ws.35.\n                ws_id wsid - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID\n                        in KBase format, e.g. kb|ws.78.\n        AND \n        One, and only one, of the numerical id or name of the object.\n                obj_id objid- the numerical ID of the object.\n                obj_name name - name of the object.\n        OPTIONALLY\n                obj_ver ver - the version of the object.\nOR an object reference string:\n        obj_ref ref - an object reference string.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
            "module" : "Workspace",
            "name" : "ws_name"
          },
          "name" : "workspace",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The unique, permanent numerical ID of a workspace.",
            "module" : "Workspace",
            "name" : "ws_id"
          },
          "name" : "wsid",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
            "module" : "Workspace",
            "name" : "obj_name"
          },
          "name" : "name",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The unique, permanent numerical ID of an object.",
            "module" : "Workspace",
            "name" : "obj_id"
          },
          "name" : "objid",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "An object version.\nThe version of the object, starting at 1.",
            "module" : "Workspace",
            "name" : "obj_ver"
          },
          "name" : "ver",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
            "module" : "Workspace",
            "name" : "obj_ref"
          },
          "name" : "ref",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "ObjectIdentity"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "An object identifier.\n\nSelect an object by either:\n        One, and only one, of the numerical id or name of the workspace,\n        where the name can also be a KBase ID including the numerical id,\n        e.g. kb|ws.35.\n                ws_id wsid - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID\n                        in KBase format, e.g. kb|ws.78.\n        AND \n        One, and only one, of the numerical id or name of the object.\n                obj_id objid- the numerical ID of the object.\n                obj_name name - name of the object.\n        OPTIONALLY\n                obj_ver ver - the version of the object.\nOR an object reference string:\n        obj_ref ref - an object reference string.",
      "module" : "Workspace",
      "name" : "ObjectIdentity"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Tuple",
        "annotations" : { },
        "comment" : "Information about an object.\n\n        obj_id objid - the numerical id of the object.\n        obj_name name - the name of the object.\n        type_string type - the type of the object.\n        timestamp save_date - the save date of the object.\n        obj_ver ver - the version of the object.\n        username created_by - the user that created the object.\n        ws_id wsid - the workspace containing the object.\n        string chsum - the md5 checksum of the object.\n        int size - the size of the object in bytes.",
        "element_names" : [ "objid", "name", "type", "save_date", "version", "created_by", "wsid", "chsum", "size" ],
        "element_types" : [ {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "int"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The unique, permanent numerical ID of an object.",
          "module" : "Workspace",
          "name" : "obj_id"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
          "module" : "Workspace",
          "name" : "obj_name"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
          "module" : "Workspace",
          "name" : "type_string"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
          "module" : "Workspace",
          "name" : "timestamp"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Login name of a KBase user account.",
          "module" : "Workspace",
          "name" : "username"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "int"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The unique, permanent numerical ID of a workspace.",
          "module" : "Workspace",
          "name" : "ws_id"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        } ],
        "name" : "object_info"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Information about an object.\n\n        obj_id objid - the numerical id of the object.\n        obj_name name - the name of the object.\n        type_string type - the type of the object.\n        timestamp save_date - the save date of the object.\n        obj_ver ver - the version of the object.\n        username created_by - the user that created the object.\n        ws_id wsid - the workspace containing the object.\n        string chsum - the md5 checksum of the object.\n        int size - the size of the object in bytes.",
      "module" : "Workspace",
      "name" : "object_info"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Tuple",
        "annotations" : { },
        "comment" : "Information about an object, including user provided metadata.\n\n        obj_id objid - the numerical id of the object.\n        obj_name name - the name of the object.\n        type_string type - the type of the object.\n        timestamp save_date - the save date of the object.\n        obj_ver ver - the version of the object.\n        username created_by - the user that created the object.\n        ws_id wsid - the workspace containing the object.\n        string chsum - the md5 checksum of the object.\n        int size - the size of the object in bytes.\n        usermeta meta - arbitrary user-supplied metadata about\n                the object.",
        "element_names" : [ "objid", "name", "type", "save_date", "version", "created_by", "wsid", "chsum", "size", "meta" ],
        "element_types" : [ {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "int"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The unique, permanent numerical ID of an object.",
          "module" : "Workspace",
          "name" : "obj_id"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
          "module" : "Workspace",
          "name" : "obj_name"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
          "module" : "Workspace",
          "name" : "type_string"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
          "module" : "Workspace",
          "name" : "timestamp"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Login name of a KBase user account.",
          "module" : "Workspace",
          "name" : "username"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "int"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The unique, permanent numerical ID of a workspace.",
          "module" : "Workspace",
          "name" : "ws_id"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Mapping",
            "annotations" : { },
            "key_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "value_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            }
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "User provided metadata about an object.\nArbitrary key-value pairs provided by the user.",
          "module" : "Workspace",
          "name" : "usermeta"
        } ],
        "name" : "object_info_full"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Information about an object, including user provided metadata.\n\n        obj_id objid - the numerical id of the object.\n        obj_name name - the name of the object.\n        type_string type - the type of the object.\n        timestamp save_date - the save date of the object.\n        obj_ver ver - the version of the object.\n        username created_by - the user that created the object.\n        ws_id wsid - the workspace containing the object.\n        string chsum - the md5 checksum of the object.\n        int size - the size of the object in bytes.\n        usermeta meta - arbitrary user-supplied metadata about\n                the object.",
      "module" : "Workspace",
      "name" : "object_info_full"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "A provenance action.\n\n        A provenance action is an action taken while transforming one data\n        object to another. There may be several provenance actions taken in\n        series. An action is typically running a script, running an api\n        command, etc. All of the following are optional, but more information\n        provided equates to better data provenance.\n        \n        resolved_ws_objects should never be set by the user; it is set by the\n        workspace service when returning data.\n        \n        The maximum size of the entire provenance object is 1MB.\n        \n        timestamp time - the time the action was started.\n        string service - the name of the service that performed this action.\n        int service_ver - the version of the service that performed this action.\n        string method - the method of the service that performed this action.\n        list<UnspecifiedObject> method_params - the parameters of the method\n                that performed this action. If an object in the parameters is a\n                workspace object, also put the object reference in the\n                input_ws_object list.\n        string script - the name of the script that performed this action.\n        int script_ver - the version of the script that performed this action.\n        string script_command_line - the command line provided to the script\n                that performed this action. If workspace objects were provided in\n                the command line, also put the object reference in the\n                input_ws_object list.\n        list<obj_ref> input_ws_objects - the workspace objects that\n                were used as input to this action; typically these will also be\n                present as parts of the method_params or the script_command_line\n                arguments.\n        list<obj_ref> resolved_ws_objects - the workspace objects ids from \n                input_ws_objects resolved to permanent workspace object references\n                by the workspace service.\n        list<string> intermediate_incoming - if the previous action produced \n                output that 1) was not stored in a referrable way, and 2) is\n                used as input for this action, provide it with an arbitrary and\n                unique ID here, in the order of the input arguments to this action.\n                These IDs can be used in the method_params argument.\n        list<string> intermediate_outgoing - if this action produced output\n                that 1) was not stored in a referrable way, and 2) is\n                used as input for the next action, provide it with an arbitrary and\n                unique ID here, in the order of the output values from this action.\n                These IDs can be used in the intermediate_incoming argument in the\n                next action.\n        string description - a free text description of this action.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
            "module" : "Workspace",
            "name" : "timestamp"
          },
          "name" : "time",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "service",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "service_ver",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "method",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
              "annotations" : { }
            }
          },
          "name" : "method_params",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "script",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "script_ver",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "script_command_line",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
              "module" : "Workspace",
              "name" : "obj_ref"
            }
          },
          "name" : "input_ws_objects",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
              "module" : "Workspace",
              "name" : "obj_ref"
            }
          },
          "name" : "resolved_ws_objects",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            }
          },
          "name" : "intermediate_incoming",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            }
          },
          "name" : "intermediate_outgoing",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "description",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "ProvenanceAction"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A provenance action.\n\n        A provenance action is an action taken while transforming one data\n        object to another. There may be several provenance actions taken in\n        series. An action is typically running a script, running an api\n        command, etc. All of the following are optional, but more information\n        provided equates to better data provenance.\n        \n        resolved_ws_objects should never be set by the user; it is set by the\n        workspace service when returning data.\n        \n        The maximum size of the entire provenance object is 1MB.\n        \n        timestamp time - the time the action was started.\n        string service - the name of the service that performed this action.\n        int service_ver - the version of the service that performed this action.\n        string method - the method of the service that performed this action.\n        list<UnspecifiedObject> method_params - the parameters of the method\n                that performed this action. If an object in the parameters is a\n                workspace object, also put the object reference in the\n                input_ws_object list.\n        string script - the name of the script that performed this action.\n        int script_ver - the version of the script that performed this action.\n        string script_command_line - the command line provided to the script\n                that performed this action. If workspace objects were provided in\n                the command line, also put the object reference in the\n                input_ws_object list.\n        list<obj_ref> input_ws_objects - the workspace objects that\n                were used as input to this action; typically these will also be\n                present as parts of the method_params or the script_command_line\n                arguments.\n        list<obj_ref> resolved_ws_objects - the workspace objects ids from \n                input_ws_objects resolved to permanent workspace object references\n                by the workspace service.\n        list<string> intermediate_incoming - if the previous action produced \n                output that 1) was not stored in a referrable way, and 2) is\n                used as input for this action, provide it with an arbitrary and\n                unique ID here, in the order of the input arguments to this action.\n                These IDs can be used in the method_params argument.\n        list<string> intermediate_outgoing - if this action produced output\n                that 1) was not stored in a referrable way, and 2) is\n                used as input for the next action, provide it with an arbitrary and\n                unique ID here, in the order of the output values from this action.\n                These IDs can be used in the intermediate_incoming argument in the\n                next action.\n        string description - a free text description of this action.",
      "module" : "Workspace",
      "name" : "ProvenanceAction"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Input parameters for the \"create_workspace\" function.\n\n        Required arguments:\n        ws_name workspace - name of the workspace to be created.\n        \n        Optional arguments:\n        permission globalread - 'r' to set workspace globally readable,\n                default 'n'.\n        string description - A free-text description of the workspace, 1000\n                characters max. Longer strings will be mercilessly and brutally\n                truncated.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
            "module" : "Workspace",
            "name" : "ws_name"
          },
          "name" : "workspace",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Represents the permissions a user or users have to a workspace:\n\n        'a' - administrator. All operations allowed.\n        'w' - read/write.\n        'r' - read.\n        'n' - no permissions.",
            "module" : "Workspace",
            "name" : "permission"
          },
          "name" : "globalread",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "description",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "CreateWorkspaceParams"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Input parameters for the \"create_workspace\" function.\n\n        Required arguments:\n        ws_name workspace - name of the workspace to be created.\n        \n        Optional arguments:\n        permission globalread - 'r' to set workspace globally readable,\n                default 'n'.\n        string description - A free-text description of the workspace, 1000\n                characters max. Longer strings will be mercilessly and brutally\n                truncated.",
      "module" : "Workspace",
      "name" : "CreateWorkspaceParams"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "required",
      "comment" : "Creates a new workspace.",
      "name" : "create_workspace",
      "parameters" : [ {
        "name" : "params",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Struct",
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { }
            },
            "comment" : "Input parameters for the \"create_workspace\" function.\n\n        Required arguments:\n        ws_name workspace - name of the workspace to be created.\n        \n        Optional arguments:\n        permission globalread - 'r' to set workspace globally readable,\n                default 'n'.\n        string description - A free-text description of the workspace, 1000\n                characters max. Longer strings will be mercilessly and brutally\n                truncated.",
            "items" : [ {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
                "module" : "Workspace",
                "name" : "ws_name"
              },
              "name" : "workspace",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "Represents the permissions a user or users have to a workspace:\n\n        'a' - administrator. All operations allowed.\n        'w' - read/write.\n        'r' - read.\n        'n' - no permissions.",
                "module" : "Workspace",
                "name" : "permission"
              },
              "name" : "globalread",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "name" : "description",
              "nullable" : "0"
            } ],
            "module" : "Workspace",
            "name" : "CreateWorkspaceParams"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Input parameters for the \"create_workspace\" function.\n\n        Required arguments:\n        ws_name workspace - name of the workspace to be created.\n        \n        Optional arguments:\n        permission globalread - 'r' to set workspace globally readable,\n                default 'n'.\n        string description - A free-text description of the workspace, 1000\n                characters max. Longer strings will be mercilessly and brutally\n                truncated.",
          "module" : "Workspace",
          "name" : "CreateWorkspaceParams"
        }
      } ],
      "return_type" : [ {
        "name" : "info",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Tuple",
            "annotations" : { },
            "comment" : "Information about a workspace.\n\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace.\n        username owner - name of the user who owns (e.g. created) this workspace.\n        timestamp moddate - date when the workspace was last modified.\n        permission user_permission - permissions for the authenticated user of\n                this workspace.\n        permission globalread - whether this workspace is globally readable.",
            "element_names" : [ "id", "workspace", "owner", "moddate", "user_permission", "globalread" ],
            "element_types" : [ {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "The unique, permanent numerical ID of a workspace.",
              "module" : "Workspace",
              "name" : "ws_id"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
              "module" : "Workspace",
              "name" : "ws_name"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "Login name of a KBase user account.",
              "module" : "Workspace",
              "name" : "username"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
              "module" : "Workspace",
              "name" : "timestamp"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "Represents the permissions a user or users have to a workspace:\n\n        'a' - administrator. All operations allowed.\n        'w' - read/write.\n        'r' - read.\n        'n' - no permissions.",
              "module" : "Workspace",
              "name" : "permission"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "Represents the permissions a user or users have to a workspace:\n\n        'a' - administrator. All operations allowed.\n        'w' - read/write.\n        'r' - read.\n        'n' - no permissions.",
              "module" : "Workspace",
              "name" : "permission"
            } ],
            "name" : "workspace_info"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Information about a workspace.\n\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace.\n        username owner - name of the user who owns (e.g. created) this workspace.\n        timestamp moddate - date when the workspace was last modified.\n        permission user_permission - permissions for the authenticated user of\n                this workspace.\n        permission globalread - whether this workspace is globally readable.",
          "module" : "Workspace",
          "name" : "workspace_info"
        }
      } ]
    }, "auth_defaultoptional", {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "optional",
      "comment" : "Get information associated with a workspace.",
      "name" : "get_workspace_info",
      "parameters" : [ {
        "name" : "wsi",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Struct",
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { }
            },
            "comment" : "A workspace identifier.\n\n                Select a workspace by one, and only one, of the numerical id or name,\n                        where the name can also be a KBase ID including the numerical id,\n                        e.g. kb|ws.35.\n                ws_id id - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID in KBase\n                        format, e.g. kb|ws.78.",
            "items" : [ {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
                "module" : "Workspace",
                "name" : "ws_name"
              },
              "name" : "workspace",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The unique, permanent numerical ID of a workspace.",
                "module" : "Workspace",
                "name" : "ws_id"
              },
              "name" : "id",
              "nullable" : "0"
            } ],
            "module" : "Workspace",
            "name" : "WorkspaceIdentity"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A workspace identifier.\n\n                Select a workspace by one, and only one, of the numerical id or name,\n                        where the name can also be a KBase ID including the numerical id,\n                        e.g. kb|ws.35.\n                ws_id id - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID in KBase\n                        format, e.g. kb|ws.78.",
          "module" : "Workspace",
          "name" : "WorkspaceIdentity"
        }
      } ],
      "return_type" : [ {
        "name" : "info",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Tuple",
            "annotations" : { },
            "comment" : "Information about a workspace.\n\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace.\n        username owner - name of the user who owns (e.g. created) this workspace.\n        timestamp moddate - date when the workspace was last modified.\n        permission user_permission - permissions for the authenticated user of\n                this workspace.\n        permission globalread - whether this workspace is globally readable.",
            "element_names" : [ "id", "workspace", "owner", "moddate", "user_permission", "globalread" ],
            "element_types" : [ {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "The unique, permanent numerical ID of a workspace.",
              "module" : "Workspace",
              "name" : "ws_id"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
              "module" : "Workspace",
              "name" : "ws_name"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "Login name of a KBase user account.",
              "module" : "Workspace",
              "name" : "username"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
              "module" : "Workspace",
              "name" : "timestamp"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "Represents the permissions a user or users have to a workspace:\n\n        'a' - administrator. All operations allowed.\n        'w' - read/write.\n        'r' - read.\n        'n' - no permissions.",
              "module" : "Workspace",
              "name" : "permission"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "Represents the permissions a user or users have to a workspace:\n\n        'a' - administrator. All operations allowed.\n        'w' - read/write.\n        'r' - read.\n        'n' - no permissions.",
              "module" : "Workspace",
              "name" : "permission"
            } ],
            "name" : "workspace_info"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Information about a workspace.\n\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace.\n        username owner - name of the user who owns (e.g. created) this workspace.\n        timestamp moddate - date when the workspace was last modified.\n        permission user_permission - permissions for the authenticated user of\n                this workspace.\n        permission globalread - whether this workspace is globally readable.",
          "module" : "Workspace",
          "name" : "workspace_info"
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "optional",
      "comment" : "Get a workspace's description.",
      "name" : "get_workspace_description",
      "parameters" : [ {
        "name" : "wsi",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Struct",
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { }
            },
            "comment" : "A workspace identifier.\n\n                Select a workspace by one, and only one, of the numerical id or name,\n                        where the name can also be a KBase ID including the numerical id,\n                        e.g. kb|ws.35.\n                ws_id id - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID in KBase\n                        format, e.g. kb|ws.78.",
            "items" : [ {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
                "module" : "Workspace",
                "name" : "ws_name"
              },
              "name" : "workspace",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The unique, permanent numerical ID of a workspace.",
                "module" : "Workspace",
                "name" : "ws_id"
              },
              "name" : "id",
              "nullable" : "0"
            } ],
            "module" : "Workspace",
            "name" : "WorkspaceIdentity"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A workspace identifier.\n\n                Select a workspace by one, and only one, of the numerical id or name,\n                        where the name can also be a KBase ID including the numerical id,\n                        e.g. kb|ws.35.\n                ws_id id - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID in KBase\n                        format, e.g. kb|ws.78.",
          "module" : "Workspace",
          "name" : "WorkspaceIdentity"
        }
      } ],
      "return_type" : [ {
        "name" : "description",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Input parameters for the \"set_permissions\" function.\n\n        One, and only one, of the following is required:\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace or the workspace ID in KBase\n                format, e.g. kb|ws.78.\n        \n        Required arguments:\n        permission new_permission - the permission to assign to the users.\n        list<username> users - the users whose permissions will be altered.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
            "module" : "Workspace",
            "name" : "ws_name"
          },
          "name" : "workspace",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The unique, permanent numerical ID of a workspace.",
            "module" : "Workspace",
            "name" : "ws_id"
          },
          "name" : "id",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Represents the permissions a user or users have to a workspace:\n\n        'a' - administrator. All operations allowed.\n        'w' - read/write.\n        'r' - read.\n        'n' - no permissions.",
            "module" : "Workspace",
            "name" : "permission"
          },
          "name" : "new_permission",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "Login name of a KBase user account.",
              "module" : "Workspace",
              "name" : "username"
            }
          },
          "name" : "users",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "SetPermissionsParams"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Input parameters for the \"set_permissions\" function.\n\n        One, and only one, of the following is required:\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace or the workspace ID in KBase\n                format, e.g. kb|ws.78.\n        \n        Required arguments:\n        permission new_permission - the permission to assign to the users.\n        list<username> users - the users whose permissions will be altered.",
      "module" : "Workspace",
      "name" : "SetPermissionsParams"
    }, "auth_defaultrequired", {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "required",
      "comment" : "Set permissions for a workspace.",
      "name" : "set_permissions",
      "parameters" : [ {
        "name" : "params",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Struct",
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { }
            },
            "comment" : "Input parameters for the \"set_permissions\" function.\n\n        One, and only one, of the following is required:\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace or the workspace ID in KBase\n                format, e.g. kb|ws.78.\n        \n        Required arguments:\n        permission new_permission - the permission to assign to the users.\n        list<username> users - the users whose permissions will be altered.",
            "items" : [ {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
                "module" : "Workspace",
                "name" : "ws_name"
              },
              "name" : "workspace",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The unique, permanent numerical ID of a workspace.",
                "module" : "Workspace",
                "name" : "ws_id"
              },
              "name" : "id",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "Represents the permissions a user or users have to a workspace:\n\n        'a' - administrator. All operations allowed.\n        'w' - read/write.\n        'r' - read.\n        'n' - no permissions.",
                "module" : "Workspace",
                "name" : "permission"
              },
              "name" : "new_permission",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::List",
                "annotations" : { },
                "element_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "Login name of a KBase user account.",
                  "module" : "Workspace",
                  "name" : "username"
                }
              },
              "name" : "users",
              "nullable" : "0"
            } ],
            "module" : "Workspace",
            "name" : "SetPermissionsParams"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Input parameters for the \"set_permissions\" function.\n\n        One, and only one, of the following is required:\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace or the workspace ID in KBase\n                format, e.g. kb|ws.78.\n        \n        Required arguments:\n        permission new_permission - the permission to assign to the users.\n        list<username> users - the users whose permissions will be altered.",
          "module" : "Workspace",
          "name" : "SetPermissionsParams"
        }
      } ],
      "return_type" : [ ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "required",
      "comment" : "Get permissions for a workspace.",
      "name" : "get_permissions",
      "parameters" : [ {
        "name" : "wsi",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Struct",
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { }
            },
            "comment" : "A workspace identifier.\n\n                Select a workspace by one, and only one, of the numerical id or name,\n                        where the name can also be a KBase ID including the numerical id,\n                        e.g. kb|ws.35.\n                ws_id id - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID in KBase\n                        format, e.g. kb|ws.78.",
            "items" : [ {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
                "module" : "Workspace",
                "name" : "ws_name"
              },
              "name" : "workspace",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The unique, permanent numerical ID of a workspace.",
                "module" : "Workspace",
                "name" : "ws_id"
              },
              "name" : "id",
              "nullable" : "0"
            } ],
            "module" : "Workspace",
            "name" : "WorkspaceIdentity"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A workspace identifier.\n\n                Select a workspace by one, and only one, of the numerical id or name,\n                        where the name can also be a KBase ID including the numerical id,\n                        e.g. kb|ws.35.\n                ws_id id - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID in KBase\n                        format, e.g. kb|ws.78.",
          "module" : "Workspace",
          "name" : "WorkspaceIdentity"
        }
      } ],
      "return_type" : [ {
        "name" : "perms",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Mapping",
          "annotations" : { },
          "key_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Login name of a KBase user account.",
            "module" : "Workspace",
            "name" : "username"
          },
          "value_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Represents the permissions a user or users have to a workspace:\n\n        'a' - administrator. All operations allowed.\n        'w' - read/write.\n        'r' - read.\n        'n' - no permissions.",
            "module" : "Workspace",
            "name" : "permission"
          }
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "An object and associated data required for saving.\n\n        Required arguments:\n        type_string type - the type of the object. Omit the version information\n                to use the latest version.\n        UnspecifiedObject data - the object data.\n        \n        Optional arguments:\n        One of an object name or id. If no name or id is provided the name\n                will be set to 'auto' with the object id appended as a string,\n                possibly with -\\d+ appended if that object id already exists as a\n                name.\n        obj_name name - the name of the object.\n        obj_id objid - the id of the object to save over.\n        usermeta meta - arbitrary user-supplied metadata for the object,\n                not to exceed 16kb.\n        list<ProvenanceAction> provenance - provenance data for the object.\n        boolean hidden - true if this object should not be listed when listing\n                workspace objects.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
            "module" : "Workspace",
            "name" : "type_string"
          },
          "name" : "type",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
            "annotations" : { }
          },
          "name" : "data",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
            "module" : "Workspace",
            "name" : "obj_name"
          },
          "name" : "name",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The unique, permanent numerical ID of an object.",
            "module" : "Workspace",
            "name" : "obj_id"
          },
          "name" : "objid",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Mapping",
              "annotations" : { },
              "key_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "value_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              }
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "User provided metadata about an object.\nArbitrary key-value pairs provided by the user.",
            "module" : "Workspace",
            "name" : "usermeta"
          },
          "name" : "meta",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Struct",
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { }
                },
                "comment" : "A provenance action.\n\n        A provenance action is an action taken while transforming one data\n        object to another. There may be several provenance actions taken in\n        series. An action is typically running a script, running an api\n        command, etc. All of the following are optional, but more information\n        provided equates to better data provenance.\n        \n        resolved_ws_objects should never be set by the user; it is set by the\n        workspace service when returning data.\n        \n        The maximum size of the entire provenance object is 1MB.\n        \n        timestamp time - the time the action was started.\n        string service - the name of the service that performed this action.\n        int service_ver - the version of the service that performed this action.\n        string method - the method of the service that performed this action.\n        list<UnspecifiedObject> method_params - the parameters of the method\n                that performed this action. If an object in the parameters is a\n                workspace object, also put the object reference in the\n                input_ws_object list.\n        string script - the name of the script that performed this action.\n        int script_ver - the version of the script that performed this action.\n        string script_command_line - the command line provided to the script\n                that performed this action. If workspace objects were provided in\n                the command line, also put the object reference in the\n                input_ws_object list.\n        list<obj_ref> input_ws_objects - the workspace objects that\n                were used as input to this action; typically these will also be\n                present as parts of the method_params or the script_command_line\n                arguments.\n        list<obj_ref> resolved_ws_objects - the workspace objects ids from \n                input_ws_objects resolved to permanent workspace object references\n                by the workspace service.\n        list<string> intermediate_incoming - if the previous action produced \n                output that 1) was not stored in a referrable way, and 2) is\n                used as input for this action, provide it with an arbitrary and\n                unique ID here, in the order of the input arguments to this action.\n                These IDs can be used in the method_params argument.\n        list<string> intermediate_outgoing - if this action produced output\n                that 1) was not stored in a referrable way, and 2) is\n                used as input for the next action, provide it with an arbitrary and\n                unique ID here, in the order of the output values from this action.\n                These IDs can be used in the intermediate_incoming argument in the\n                next action.\n        string description - a free text description of this action.",
                "items" : [ {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Typedef",
                    "alias_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "string"
                    },
                    "annotations" : {
                      "metadata" : { },
                      "searchable_ws_subset" : { },
                      "unknown_annotations" : { }
                    },
                    "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
                    "module" : "Workspace",
                    "name" : "timestamp"
                  },
                  "name" : "time",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "service",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "service_ver",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "method",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
                      "annotations" : { }
                    }
                  },
                  "name" : "method_params",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "script",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "script_ver",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "script_command_line",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Typedef",
                      "alias_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Scalar",
                        "annotations" : { },
                        "scalar_type" : "string"
                      },
                      "annotations" : {
                        "metadata" : { },
                        "searchable_ws_subset" : { },
                        "unknown_annotations" : { }
                      },
                      "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
                      "module" : "Workspace",
                      "name" : "obj_ref"
                    }
                  },
                  "name" : "input_ws_objects",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Typedef",
                      "alias_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Scalar",
                        "annotations" : { },
                        "scalar_type" : "string"
                      },
                      "annotations" : {
                        "metadata" : { },
                        "searchable_ws_subset" : { },
                        "unknown_annotations" : { }
                      },
                      "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
                      "module" : "Workspace",
                      "name" : "obj_ref"
                    }
                  },
                  "name" : "resolved_ws_objects",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "string"
                    }
                  },
                  "name" : "intermediate_incoming",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "string"
                    }
                  },
                  "name" : "intermediate_outgoing",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "description",
                  "nullable" : "0"
                } ],
                "module" : "Workspace",
                "name" : "ProvenanceAction"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A provenance action.\n\n        A provenance action is an action taken while transforming one data\n        object to another. There may be several provenance actions taken in\n        series. An action is typically running a script, running an api\n        command, etc. All of the following are optional, but more information\n        provided equates to better data provenance.\n        \n        resolved_ws_objects should never be set by the user; it is set by the\n        workspace service when returning data.\n        \n        The maximum size of the entire provenance object is 1MB.\n        \n        timestamp time - the time the action was started.\n        string service - the name of the service that performed this action.\n        int service_ver - the version of the service that performed this action.\n        string method - the method of the service that performed this action.\n        list<UnspecifiedObject> method_params - the parameters of the method\n                that performed this action. If an object in the parameters is a\n                workspace object, also put the object reference in the\n                input_ws_object list.\n        string script - the name of the script that performed this action.\n        int script_ver - the version of the script that performed this action.\n        string script_command_line - the command line provided to the script\n                that performed this action. If workspace objects were provided in\n                the command line, also put the object reference in the\n                input_ws_object list.\n        list<obj_ref> input_ws_objects - the workspace objects that\n                were used as input to this action; typically these will also be\n                present as parts of the method_params or the script_command_line\n                arguments.\n        list<obj_ref> resolved_ws_objects - the workspace objects ids from \n                input_ws_objects resolved to permanent workspace object references\n                by the workspace service.\n        list<string> intermediate_incoming - if the previous action produced \n                output that 1) was not stored in a referrable way, and 2) is\n                used as input for this action, provide it with an arbitrary and\n                unique ID here, in the order of the input arguments to this action.\n                These IDs can be used in the method_params argument.\n        list<string> intermediate_outgoing - if this action produced output\n                that 1) was not stored in a referrable way, and 2) is\n                used as input for the next action, provide it with an arbitrary and\n                unique ID here, in the order of the output values from this action.\n                These IDs can be used in the intermediate_incoming argument in the\n                next action.\n        string description - a free text description of this action.",
              "module" : "Workspace",
              "name" : "ProvenanceAction"
            }
          },
          "name" : "provenance",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A boolean. 0 = false, other = true.",
            "module" : "Workspace",
            "name" : "boolean"
          },
          "name" : "hidden",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "ObjectSaveData"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "An object and associated data required for saving.\n\n        Required arguments:\n        type_string type - the type of the object. Omit the version information\n                to use the latest version.\n        UnspecifiedObject data - the object data.\n        \n        Optional arguments:\n        One of an object name or id. If no name or id is provided the name\n                will be set to 'auto' with the object id appended as a string,\n                possibly with -\\d+ appended if that object id already exists as a\n                name.\n        obj_name name - the name of the object.\n        obj_id objid - the id of the object to save over.\n        usermeta meta - arbitrary user-supplied metadata for the object,\n                not to exceed 16kb.\n        list<ProvenanceAction> provenance - provenance data for the object.\n        boolean hidden - true if this object should not be listed when listing\n                workspace objects.",
      "module" : "Workspace",
      "name" : "ObjectSaveData"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Input parameters for the \"save_objects\" function.\n\n        One, and only one, of the following is required:\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace or the workspace ID in KBase\n                format, e.g. kb|ws.78.\n        \n        Required arguments:\n        list<ObjectSaveData> objects - the objects to save.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
            "module" : "Workspace",
            "name" : "ws_name"
          },
          "name" : "workspace",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The unique, permanent numerical ID of a workspace.",
            "module" : "Workspace",
            "name" : "ws_id"
          },
          "name" : "id",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Struct",
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { }
                },
                "comment" : "An object and associated data required for saving.\n\n        Required arguments:\n        type_string type - the type of the object. Omit the version information\n                to use the latest version.\n        UnspecifiedObject data - the object data.\n        \n        Optional arguments:\n        One of an object name or id. If no name or id is provided the name\n                will be set to 'auto' with the object id appended as a string,\n                possibly with -\\d+ appended if that object id already exists as a\n                name.\n        obj_name name - the name of the object.\n        obj_id objid - the id of the object to save over.\n        usermeta meta - arbitrary user-supplied metadata for the object,\n                not to exceed 16kb.\n        list<ProvenanceAction> provenance - provenance data for the object.\n        boolean hidden - true if this object should not be listed when listing\n                workspace objects.",
                "items" : [ {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Typedef",
                    "alias_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "string"
                    },
                    "annotations" : {
                      "metadata" : { },
                      "searchable_ws_subset" : { },
                      "unknown_annotations" : { }
                    },
                    "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
                    "module" : "Workspace",
                    "name" : "type_string"
                  },
                  "name" : "type",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
                    "annotations" : { }
                  },
                  "name" : "data",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Typedef",
                    "alias_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "string"
                    },
                    "annotations" : {
                      "metadata" : { },
                      "searchable_ws_subset" : { },
                      "unknown_annotations" : { }
                    },
                    "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
                    "module" : "Workspace",
                    "name" : "obj_name"
                  },
                  "name" : "name",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Typedef",
                    "alias_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "int"
                    },
                    "annotations" : {
                      "metadata" : { },
                      "searchable_ws_subset" : { },
                      "unknown_annotations" : { }
                    },
                    "comment" : "The unique, permanent numerical ID of an object.",
                    "module" : "Workspace",
                    "name" : "obj_id"
                  },
                  "name" : "objid",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Typedef",
                    "alias_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Mapping",
                      "annotations" : { },
                      "key_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Scalar",
                        "annotations" : { },
                        "scalar_type" : "string"
                      },
                      "value_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Scalar",
                        "annotations" : { },
                        "scalar_type" : "string"
                      }
                    },
                    "annotations" : {
                      "metadata" : { },
                      "searchable_ws_subset" : { },
                      "unknown_annotations" : { }
                    },
                    "comment" : "User provided metadata about an object.\nArbitrary key-value pairs provided by the user.",
                    "module" : "Workspace",
                    "name" : "usermeta"
                  },
                  "name" : "meta",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Typedef",
                      "alias_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Struct",
                        "annotations" : {
                          "metadata" : { },
                          "searchable_ws_subset" : { }
                        },
                        "comment" : "A provenance action.\n\n        A provenance action is an action taken while transforming one data\n        object to another. There may be several provenance actions taken in\n        series. An action is typically running a script, running an api\n        command, etc. All of the following are optional, but more information\n        provided equates to better data provenance.\n        \n        resolved_ws_objects should never be set by the user; it is set by the\n        workspace service when returning data.\n        \n        The maximum size of the entire provenance object is 1MB.\n        \n        timestamp time - the time the action was started.\n        string service - the name of the service that performed this action.\n        int service_ver - the version of the service that performed this action.\n        string method - the method of the service that performed this action.\n        list<UnspecifiedObject> method_params - the parameters of the method\n                that performed this action. If an object in the parameters is a\n                workspace object, also put the object reference in the\n                input_ws_object list.\n        string script - the name of the script that performed this action.\n        int script_ver - the version of the script that performed this action.\n        string script_command_line - the command line provided to the script\n                that performed this action. If workspace objects were provided in\n                the command line, also put the object reference in the\n                input_ws_object list.\n        list<obj_ref> input_ws_objects - the workspace objects that\n                were used as input to this action; typically these will also be\n                present as parts of the method_params or the script_command_line\n                arguments.\n        list<obj_ref> resolved_ws_objects - the workspace objects ids from \n                input_ws_objects resolved to permanent workspace object references\n                by the workspace service.\n        list<string> intermediate_incoming - if the previous action produced \n                output that 1) was not stored in a referrable way, and 2) is\n                used as input for this action, provide it with an arbitrary and\n                unique ID here, in the order of the input arguments to this action.\n                These IDs can be used in the method_params argument.\n        list<string> intermediate_outgoing - if this action produced output\n                that 1) was not stored in a referrable way, and 2) is\n                used as input for the next action, provide it with an arbitrary and\n                unique ID here, in the order of the output values from this action.\n                These IDs can be used in the intermediate_incoming argument in the\n                next action.\n        string description - a free text description of this action.",
                        "items" : [ {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Typedef",
                            "alias_type" : {
                              "!" : "Bio::KBase::KIDL::KBT::Scalar",
                              "annotations" : { },
                              "scalar_type" : "string"
                            },
                            "annotations" : {
                              "metadata" : { },
                              "searchable_ws_subset" : { },
                              "unknown_annotations" : { }
                            },
                            "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
                            "module" : "Workspace",
                            "name" : "timestamp"
                          },
                          "name" : "time",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "string"
                          },
                          "name" : "service",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "string"
                          },
                          "name" : "service_ver",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "string"
                          },
                          "name" : "method",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::List",
                            "annotations" : { },
                            "element_type" : {
                              "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
                              "annotations" : { }
                            }
                          },
                          "name" : "method_params",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "string"
                          },
                          "name" : "script",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "string"
                          },
                          "name" : "script_ver",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "string"
                          },
                          "name" : "script_command_line",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::List",
                            "annotations" : { },
                            "element_type" : {
                              "!" : "Bio::KBase::KIDL::KBT::Typedef",
                              "alias_type" : {
                                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                                "annotations" : { },
                                "scalar_type" : "string"
                              },
                              "annotations" : {
                                "metadata" : { },
                                "searchable_ws_subset" : { },
                                "unknown_annotations" : { }
                              },
                              "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
                              "module" : "Workspace",
                              "name" : "obj_ref"
                            }
                          },
                          "name" : "input_ws_objects",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::List",
                            "annotations" : { },
                            "element_type" : {
                              "!" : "Bio::KBase::KIDL::KBT::Typedef",
                              "alias_type" : {
                                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                                "annotations" : { },
                                "scalar_type" : "string"
                              },
                              "annotations" : {
                                "metadata" : { },
                                "searchable_ws_subset" : { },
                                "unknown_annotations" : { }
                              },
                              "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
                              "module" : "Workspace",
                              "name" : "obj_ref"
                            }
                          },
                          "name" : "resolved_ws_objects",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::List",
                            "annotations" : { },
                            "element_type" : {
                              "!" : "Bio::KBase::KIDL::KBT::Scalar",
                              "annotations" : { },
                              "scalar_type" : "string"
                            }
                          },
                          "name" : "intermediate_incoming",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::List",
                            "annotations" : { },
                            "element_type" : {
                              "!" : "Bio::KBase::KIDL::KBT::Scalar",
                              "annotations" : { },
                              "scalar_type" : "string"
                            }
                          },
                          "name" : "intermediate_outgoing",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "string"
                          },
                          "name" : "description",
                          "nullable" : "0"
                        } ],
                        "module" : "Workspace",
                        "name" : "ProvenanceAction"
                      },
                      "annotations" : {
                        "metadata" : { },
                        "searchable_ws_subset" : { },
                        "unknown_annotations" : { }
                      },
                      "comment" : "A provenance action.\n\n        A provenance action is an action taken while transforming one data\n        object to another. There may be several provenance actions taken in\n        series. An action is typically running a script, running an api\n        command, etc. All of the following are optional, but more information\n        provided equates to better data provenance.\n        \n        resolved_ws_objects should never be set by the user; it is set by the\n        workspace service when returning data.\n        \n        The maximum size of the entire provenance object is 1MB.\n        \n        timestamp time - the time the action was started.\n        string service - the name of the service that performed this action.\n        int service_ver - the version of the service that performed this action.\n        string method - the method of the service that performed this action.\n        list<UnspecifiedObject> method_params - the parameters of the method\n                that performed this action. If an object in the parameters is a\n                workspace object, also put the object reference in the\n                input_ws_object list.\n        string script - the name of the script that performed this action.\n        int script_ver - the version of the script that performed this action.\n        string script_command_line - the command line provided to the script\n                that performed this action. If workspace objects were provided in\n                the command line, also put the object reference in the\n                input_ws_object list.\n        list<obj_ref> input_ws_objects - the workspace objects that\n                were used as input to this action; typically these will also be\n                present as parts of the method_params or the script_command_line\n                arguments.\n        list<obj_ref> resolved_ws_objects - the workspace objects ids from \n                input_ws_objects resolved to permanent workspace object references\n                by the workspace service.\n        list<string> intermediate_incoming - if the previous action produced \n                output that 1) was not stored in a referrable way, and 2) is\n                used as input for this action, provide it with an arbitrary and\n                unique ID here, in the order of the input arguments to this action.\n                These IDs can be used in the method_params argument.\n        list<string> intermediate_outgoing - if this action produced output\n                that 1) was not stored in a referrable way, and 2) is\n                used as input for the next action, provide it with an arbitrary and\n                unique ID here, in the order of the output values from this action.\n                These IDs can be used in the intermediate_incoming argument in the\n                next action.\n        string description - a free text description of this action.",
                      "module" : "Workspace",
                      "name" : "ProvenanceAction"
                    }
                  },
                  "name" : "provenance",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Typedef",
                    "alias_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "int"
                    },
                    "annotations" : {
                      "metadata" : { },
                      "searchable_ws_subset" : { },
                      "unknown_annotations" : { }
                    },
                    "comment" : "A boolean. 0 = false, other = true.",
                    "module" : "Workspace",
                    "name" : "boolean"
                  },
                  "name" : "hidden",
                  "nullable" : "0"
                } ],
                "module" : "Workspace",
                "name" : "ObjectSaveData"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "An object and associated data required for saving.\n\n        Required arguments:\n        type_string type - the type of the object. Omit the version information\n                to use the latest version.\n        UnspecifiedObject data - the object data.\n        \n        Optional arguments:\n        One of an object name or id. If no name or id is provided the name\n                will be set to 'auto' with the object id appended as a string,\n                possibly with -\\d+ appended if that object id already exists as a\n                name.\n        obj_name name - the name of the object.\n        obj_id objid - the id of the object to save over.\n        usermeta meta - arbitrary user-supplied metadata for the object,\n                not to exceed 16kb.\n        list<ProvenanceAction> provenance - provenance data for the object.\n        boolean hidden - true if this object should not be listed when listing\n                workspace objects.",
              "module" : "Workspace",
              "name" : "ObjectSaveData"
            }
          },
          "name" : "objects",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "SaveObjectsParams"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Input parameters for the \"save_objects\" function.\n\n        One, and only one, of the following is required:\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace or the workspace ID in KBase\n                format, e.g. kb|ws.78.\n        \n        Required arguments:\n        list<ObjectSaveData> objects - the objects to save.",
      "module" : "Workspace",
      "name" : "SaveObjectsParams"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "required",
      "comment" : "Save objects to the workspace. Saving over a deleted object undeletes\nit.",
      "name" : "save_objects",
      "parameters" : [ {
        "name" : "params",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Struct",
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { }
            },
            "comment" : "Input parameters for the \"save_objects\" function.\n\n        One, and only one, of the following is required:\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace or the workspace ID in KBase\n                format, e.g. kb|ws.78.\n        \n        Required arguments:\n        list<ObjectSaveData> objects - the objects to save.",
            "items" : [ {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
                "module" : "Workspace",
                "name" : "ws_name"
              },
              "name" : "workspace",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The unique, permanent numerical ID of a workspace.",
                "module" : "Workspace",
                "name" : "ws_id"
              },
              "name" : "id",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::List",
                "annotations" : { },
                "element_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Struct",
                    "annotations" : {
                      "metadata" : { },
                      "searchable_ws_subset" : { }
                    },
                    "comment" : "An object and associated data required for saving.\n\n        Required arguments:\n        type_string type - the type of the object. Omit the version information\n                to use the latest version.\n        UnspecifiedObject data - the object data.\n        \n        Optional arguments:\n        One of an object name or id. If no name or id is provided the name\n                will be set to 'auto' with the object id appended as a string,\n                possibly with -\\d+ appended if that object id already exists as a\n                name.\n        obj_name name - the name of the object.\n        obj_id objid - the id of the object to save over.\n        usermeta meta - arbitrary user-supplied metadata for the object,\n                not to exceed 16kb.\n        list<ProvenanceAction> provenance - provenance data for the object.\n        boolean hidden - true if this object should not be listed when listing\n                workspace objects.",
                    "items" : [ {
                      "!" : "Bio::KBase::KIDL::KBT::StructItem",
                      "item_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Typedef",
                        "alias_type" : {
                          "!" : "Bio::KBase::KIDL::KBT::Scalar",
                          "annotations" : { },
                          "scalar_type" : "string"
                        },
                        "annotations" : {
                          "metadata" : { },
                          "searchable_ws_subset" : { },
                          "unknown_annotations" : { }
                        },
                        "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
                        "module" : "Workspace",
                        "name" : "type_string"
                      },
                      "name" : "type",
                      "nullable" : "0"
                    }, {
                      "!" : "Bio::KBase::KIDL::KBT::StructItem",
                      "item_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
                        "annotations" : { }
                      },
                      "name" : "data",
                      "nullable" : "0"
                    }, {
                      "!" : "Bio::KBase::KIDL::KBT::StructItem",
                      "item_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Typedef",
                        "alias_type" : {
                          "!" : "Bio::KBase::KIDL::KBT::Scalar",
                          "annotations" : { },
                          "scalar_type" : "string"
                        },
                        "annotations" : {
                          "metadata" : { },
                          "searchable_ws_subset" : { },
                          "unknown_annotations" : { }
                        },
                        "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
                        "module" : "Workspace",
                        "name" : "obj_name"
                      },
                      "name" : "name",
                      "nullable" : "0"
                    }, {
                      "!" : "Bio::KBase::KIDL::KBT::StructItem",
                      "item_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Typedef",
                        "alias_type" : {
                          "!" : "Bio::KBase::KIDL::KBT::Scalar",
                          "annotations" : { },
                          "scalar_type" : "int"
                        },
                        "annotations" : {
                          "metadata" : { },
                          "searchable_ws_subset" : { },
                          "unknown_annotations" : { }
                        },
                        "comment" : "The unique, permanent numerical ID of an object.",
                        "module" : "Workspace",
                        "name" : "obj_id"
                      },
                      "name" : "objid",
                      "nullable" : "0"
                    }, {
                      "!" : "Bio::KBase::KIDL::KBT::StructItem",
                      "item_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Typedef",
                        "alias_type" : {
                          "!" : "Bio::KBase::KIDL::KBT::Mapping",
                          "annotations" : { },
                          "key_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "string"
                          },
                          "value_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "string"
                          }
                        },
                        "annotations" : {
                          "metadata" : { },
                          "searchable_ws_subset" : { },
                          "unknown_annotations" : { }
                        },
                        "comment" : "User provided metadata about an object.\nArbitrary key-value pairs provided by the user.",
                        "module" : "Workspace",
                        "name" : "usermeta"
                      },
                      "name" : "meta",
                      "nullable" : "0"
                    }, {
                      "!" : "Bio::KBase::KIDL::KBT::StructItem",
                      "item_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::List",
                        "annotations" : { },
                        "element_type" : {
                          "!" : "Bio::KBase::KIDL::KBT::Typedef",
                          "alias_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Struct",
                            "annotations" : {
                              "metadata" : { },
                              "searchable_ws_subset" : { }
                            },
                            "comment" : "A provenance action.\n\n        A provenance action is an action taken while transforming one data\n        object to another. There may be several provenance actions taken in\n        series. An action is typically running a script, running an api\n        command, etc. All of the following are optional, but more information\n        provided equates to better data provenance.\n        \n        resolved_ws_objects should never be set by the user; it is set by the\n        workspace service when returning data.\n        \n        The maximum size of the entire provenance object is 1MB.\n        \n        timestamp time - the time the action was started.\n        string service - the name of the service that performed this action.\n        int service_ver - the version of the service that performed this action.\n        string method - the method of the service that performed this action.\n        list<UnspecifiedObject> method_params - the parameters of the method\n                that performed this action. If an object in the parameters is a\n                workspace object, also put the object reference in the\n                input_ws_object list.\n        string script - the name of the script that performed this action.\n        int script_ver - the version of the script that performed this action.\n        string script_command_line - the command line provided to the script\n                that performed this action. If workspace objects were provided in\n                the command line, also put the object reference in the\n                input_ws_object list.\n        list<obj_ref> input_ws_objects - the workspace objects that\n                were used as input to this action; typically these will also be\n                present as parts of the method_params or the script_command_line\n                arguments.\n        list<obj_ref> resolved_ws_objects - the workspace objects ids from \n                input_ws_objects resolved to permanent workspace object references\n                by the workspace service.\n        list<string> intermediate_incoming - if the previous action produced \n                output that 1) was not stored in a referrable way, and 2) is\n                used as input for this action, provide it with an arbitrary and\n                unique ID here, in the order of the input arguments to this action.\n                These IDs can be used in the method_params argument.\n        list<string> intermediate_outgoing - if this action produced output\n                that 1) was not stored in a referrable way, and 2) is\n                used as input for the next action, provide it with an arbitrary and\n                unique ID here, in the order of the output values from this action.\n                These IDs can be used in the intermediate_incoming argument in the\n                next action.\n        string description - a free text description of this action.",
                            "items" : [ {
                              "!" : "Bio::KBase::KIDL::KBT::StructItem",
                              "item_type" : {
                                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                                "alias_type" : {
                                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                                  "annotations" : { },
                                  "scalar_type" : "string"
                                },
                                "annotations" : {
                                  "metadata" : { },
                                  "searchable_ws_subset" : { },
                                  "unknown_annotations" : { }
                                },
                                "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
                                "module" : "Workspace",
                                "name" : "timestamp"
                              },
                              "name" : "time",
                              "nullable" : "0"
                            }, {
                              "!" : "Bio::KBase::KIDL::KBT::StructItem",
                              "item_type" : {
                                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                                "annotations" : { },
                                "scalar_type" : "string"
                              },
                              "name" : "service",
                              "nullable" : "0"
                            }, {
                              "!" : "Bio::KBase::KIDL::KBT::StructItem",
                              "item_type" : {
                                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                                "annotations" : { },
                                "scalar_type" : "string"
                              },
                              "name" : "service_ver",
                              "nullable" : "0"
                            }, {
                              "!" : "Bio::KBase::KIDL::KBT::StructItem",
                              "item_type" : {
                                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                                "annotations" : { },
                                "scalar_type" : "string"
                              },
                              "name" : "method",
                              "nullable" : "0"
                            }, {
                              "!" : "Bio::KBase::KIDL::KBT::StructItem",
                              "item_type" : {
                                "!" : "Bio::KBase::KIDL::KBT::List",
                                "annotations" : { },
                                "element_type" : {
                                  "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
                                  "annotations" : { }
                                }
                              },
                              "name" : "method_params",
                              "nullable" : "0"
                            }, {
                              "!" : "Bio::KBase::KIDL::KBT::StructItem",
                              "item_type" : {
                                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                                "annotations" : { },
                                "scalar_type" : "string"
                              },
                              "name" : "script",
                              "nullable" : "0"
                            }, {
                              "!" : "Bio::KBase::KIDL::KBT::StructItem",
                              "item_type" : {
                                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                                "annotations" : { },
                                "scalar_type" : "string"
                              },
                              "name" : "script_ver",
                              "nullable" : "0"
                            }, {
                              "!" : "Bio::KBase::KIDL::KBT::StructItem",
                              "item_type" : {
                                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                                "annotations" : { },
                                "scalar_type" : "string"
                              },
                              "name" : "script_command_line",
                              "nullable" : "0"
                            }, {
                              "!" : "Bio::KBase::KIDL::KBT::StructItem",
                              "item_type" : {
                                "!" : "Bio::KBase::KIDL::KBT::List",
                                "annotations" : { },
                                "element_type" : {
                                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                                  "alias_type" : {
                                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                                    "annotations" : { },
                                    "scalar_type" : "string"
                                  },
                                  "annotations" : {
                                    "metadata" : { },
                                    "searchable_ws_subset" : { },
                                    "unknown_annotations" : { }
                                  },
                                  "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
                                  "module" : "Workspace",
                                  "name" : "obj_ref"
                                }
                              },
                              "name" : "input_ws_objects",
                              "nullable" : "0"
                            }, {
                              "!" : "Bio::KBase::KIDL::KBT::StructItem",
                              "item_type" : {
                                "!" : "Bio::KBase::KIDL::KBT::List",
                                "annotations" : { },
                                "element_type" : {
                                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                                  "alias_type" : {
                                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                                    "annotations" : { },
                                    "scalar_type" : "string"
                                  },
                                  "annotations" : {
                                    "metadata" : { },
                                    "searchable_ws_subset" : { },
                                    "unknown_annotations" : { }
                                  },
                                  "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
                                  "module" : "Workspace",
                                  "name" : "obj_ref"
                                }
                              },
                              "name" : "resolved_ws_objects",
                              "nullable" : "0"
                            }, {
                              "!" : "Bio::KBase::KIDL::KBT::StructItem",
                              "item_type" : {
                                "!" : "Bio::KBase::KIDL::KBT::List",
                                "annotations" : { },
                                "element_type" : {
                                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                                  "annotations" : { },
                                  "scalar_type" : "string"
                                }
                              },
                              "name" : "intermediate_incoming",
                              "nullable" : "0"
                            }, {
                              "!" : "Bio::KBase::KIDL::KBT::StructItem",
                              "item_type" : {
                                "!" : "Bio::KBase::KIDL::KBT::List",
                                "annotations" : { },
                                "element_type" : {
                                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                                  "annotations" : { },
                                  "scalar_type" : "string"
                                }
                              },
                              "name" : "intermediate_outgoing",
                              "nullable" : "0"
                            }, {
                              "!" : "Bio::KBase::KIDL::KBT::StructItem",
                              "item_type" : {
                                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                                "annotations" : { },
                                "scalar_type" : "string"
                              },
                              "name" : "description",
                              "nullable" : "0"
                            } ],
                            "module" : "Workspace",
                            "name" : "ProvenanceAction"
                          },
                          "annotations" : {
                            "metadata" : { },
                            "searchable_ws_subset" : { },
                            "unknown_annotations" : { }
                          },
                          "comment" : "A provenance action.\n\n        A provenance action is an action taken while transforming one data\n        object to another. There may be several provenance actions taken in\n        series. An action is typically running a script, running an api\n        command, etc. All of the following are optional, but more information\n        provided equates to better data provenance.\n        \n        resolved_ws_objects should never be set by the user; it is set by the\n        workspace service when returning data.\n        \n        The maximum size of the entire provenance object is 1MB.\n        \n        timestamp time - the time the action was started.\n        string service - the name of the service that performed this action.\n        int service_ver - the version of the service that performed this action.\n        string method - the method of the service that performed this action.\n        list<UnspecifiedObject> method_params - the parameters of the method\n                that performed this action. If an object in the parameters is a\n                workspace object, also put the object reference in the\n                input_ws_object list.\n        string script - the name of the script that performed this action.\n        int script_ver - the version of the script that performed this action.\n        string script_command_line - the command line provided to the script\n                that performed this action. If workspace objects were provided in\n                the command line, also put the object reference in the\n                input_ws_object list.\n        list<obj_ref> input_ws_objects - the workspace objects that\n                were used as input to this action; typically these will also be\n                present as parts of the method_params or the script_command_line\n                arguments.\n        list<obj_ref> resolved_ws_objects - the workspace objects ids from \n                input_ws_objects resolved to permanent workspace object references\n                by the workspace service.\n        list<string> intermediate_incoming - if the previous action produced \n                output that 1) was not stored in a referrable way, and 2) is\n                used as input for this action, provide it with an arbitrary and\n                unique ID here, in the order of the input arguments to this action.\n                These IDs can be used in the method_params argument.\n        list<string> intermediate_outgoing - if this action produced output\n                that 1) was not stored in a referrable way, and 2) is\n                used as input for the next action, provide it with an arbitrary and\n                unique ID here, in the order of the output values from this action.\n                These IDs can be used in the intermediate_incoming argument in the\n                next action.\n        string description - a free text description of this action.",
                          "module" : "Workspace",
                          "name" : "ProvenanceAction"
                        }
                      },
                      "name" : "provenance",
                      "nullable" : "0"
                    }, {
                      "!" : "Bio::KBase::KIDL::KBT::StructItem",
                      "item_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Typedef",
                        "alias_type" : {
                          "!" : "Bio::KBase::KIDL::KBT::Scalar",
                          "annotations" : { },
                          "scalar_type" : "int"
                        },
                        "annotations" : {
                          "metadata" : { },
                          "searchable_ws_subset" : { },
                          "unknown_annotations" : { }
                        },
                        "comment" : "A boolean. 0 = false, other = true.",
                        "module" : "Workspace",
                        "name" : "boolean"
                      },
                      "name" : "hidden",
                      "nullable" : "0"
                    } ],
                    "module" : "Workspace",
                    "name" : "ObjectSaveData"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "An object and associated data required for saving.\n\n        Required arguments:\n        type_string type - the type of the object. Omit the version information\n                to use the latest version.\n        UnspecifiedObject data - the object data.\n        \n        Optional arguments:\n        One of an object name or id. If no name or id is provided the name\n                will be set to 'auto' with the object id appended as a string,\n                possibly with -\\d+ appended if that object id already exists as a\n                name.\n        obj_name name - the name of the object.\n        obj_id objid - the id of the object to save over.\n        usermeta meta - arbitrary user-supplied metadata for the object,\n                not to exceed 16kb.\n        list<ProvenanceAction> provenance - provenance data for the object.\n        boolean hidden - true if this object should not be listed when listing\n                workspace objects.",
                  "module" : "Workspace",
                  "name" : "ObjectSaveData"
                }
              },
              "name" : "objects",
              "nullable" : "0"
            } ],
            "module" : "Workspace",
            "name" : "SaveObjectsParams"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Input parameters for the \"save_objects\" function.\n\n        One, and only one, of the following is required:\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace or the workspace ID in KBase\n                format, e.g. kb|ws.78.\n        \n        Required arguments:\n        list<ObjectSaveData> objects - the objects to save.",
          "module" : "Workspace",
          "name" : "SaveObjectsParams"
        }
      } ],
      "return_type" : [ {
        "name" : "info",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Tuple",
              "annotations" : { },
              "comment" : "Information about an object.\n\n        obj_id objid - the numerical id of the object.\n        obj_name name - the name of the object.\n        type_string type - the type of the object.\n        timestamp save_date - the save date of the object.\n        obj_ver ver - the version of the object.\n        username created_by - the user that created the object.\n        ws_id wsid - the workspace containing the object.\n        string chsum - the md5 checksum of the object.\n        int size - the size of the object in bytes.",
              "element_names" : [ "objid", "name", "type", "save_date", "version", "created_by", "wsid", "chsum", "size" ],
              "element_types" : [ {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The unique, permanent numerical ID of an object.",
                "module" : "Workspace",
                "name" : "obj_id"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
                "module" : "Workspace",
                "name" : "obj_name"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
                "module" : "Workspace",
                "name" : "type_string"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
                "module" : "Workspace",
                "name" : "timestamp"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "Login name of a KBase user account.",
                "module" : "Workspace",
                "name" : "username"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The unique, permanent numerical ID of a workspace.",
                "module" : "Workspace",
                "name" : "ws_id"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              } ],
              "name" : "object_info"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Information about an object.\n\n        obj_id objid - the numerical id of the object.\n        obj_name name - the name of the object.\n        type_string type - the type of the object.\n        timestamp save_date - the save date of the object.\n        obj_ver ver - the version of the object.\n        username created_by - the user that created the object.\n        ws_id wsid - the workspace containing the object.\n        string chsum - the md5 checksum of the object.\n        int size - the size of the object in bytes.",
            "module" : "Workspace",
            "name" : "object_info"
          }
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "The data and supplemental info for an object.\n\n        UnspecifiedObject data - the object's data.\n        object_info_full info - information about the object.\n        list<ProvenanceAction> provenance - the object's provenance.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
            "annotations" : { }
          },
          "name" : "data",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Tuple",
              "annotations" : { },
              "comment" : "Information about an object, including user provided metadata.\n\n        obj_id objid - the numerical id of the object.\n        obj_name name - the name of the object.\n        type_string type - the type of the object.\n        timestamp save_date - the save date of the object.\n        obj_ver ver - the version of the object.\n        username created_by - the user that created the object.\n        ws_id wsid - the workspace containing the object.\n        string chsum - the md5 checksum of the object.\n        int size - the size of the object in bytes.\n        usermeta meta - arbitrary user-supplied metadata about\n                the object.",
              "element_names" : [ "objid", "name", "type", "save_date", "version", "created_by", "wsid", "chsum", "size", "meta" ],
              "element_types" : [ {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The unique, permanent numerical ID of an object.",
                "module" : "Workspace",
                "name" : "obj_id"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
                "module" : "Workspace",
                "name" : "obj_name"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
                "module" : "Workspace",
                "name" : "type_string"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
                "module" : "Workspace",
                "name" : "timestamp"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "Login name of a KBase user account.",
                "module" : "Workspace",
                "name" : "username"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The unique, permanent numerical ID of a workspace.",
                "module" : "Workspace",
                "name" : "ws_id"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Mapping",
                  "annotations" : { },
                  "key_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "value_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  }
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "User provided metadata about an object.\nArbitrary key-value pairs provided by the user.",
                "module" : "Workspace",
                "name" : "usermeta"
              } ],
              "name" : "object_info_full"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Information about an object, including user provided metadata.\n\n        obj_id objid - the numerical id of the object.\n        obj_name name - the name of the object.\n        type_string type - the type of the object.\n        timestamp save_date - the save date of the object.\n        obj_ver ver - the version of the object.\n        username created_by - the user that created the object.\n        ws_id wsid - the workspace containing the object.\n        string chsum - the md5 checksum of the object.\n        int size - the size of the object in bytes.\n        usermeta meta - arbitrary user-supplied metadata about\n                the object.",
            "module" : "Workspace",
            "name" : "object_info_full"
          },
          "name" : "info",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Struct",
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { }
                },
                "comment" : "A provenance action.\n\n        A provenance action is an action taken while transforming one data\n        object to another. There may be several provenance actions taken in\n        series. An action is typically running a script, running an api\n        command, etc. All of the following are optional, but more information\n        provided equates to better data provenance.\n        \n        resolved_ws_objects should never be set by the user; it is set by the\n        workspace service when returning data.\n        \n        The maximum size of the entire provenance object is 1MB.\n        \n        timestamp time - the time the action was started.\n        string service - the name of the service that performed this action.\n        int service_ver - the version of the service that performed this action.\n        string method - the method of the service that performed this action.\n        list<UnspecifiedObject> method_params - the parameters of the method\n                that performed this action. If an object in the parameters is a\n                workspace object, also put the object reference in the\n                input_ws_object list.\n        string script - the name of the script that performed this action.\n        int script_ver - the version of the script that performed this action.\n        string script_command_line - the command line provided to the script\n                that performed this action. If workspace objects were provided in\n                the command line, also put the object reference in the\n                input_ws_object list.\n        list<obj_ref> input_ws_objects - the workspace objects that\n                were used as input to this action; typically these will also be\n                present as parts of the method_params or the script_command_line\n                arguments.\n        list<obj_ref> resolved_ws_objects - the workspace objects ids from \n                input_ws_objects resolved to permanent workspace object references\n                by the workspace service.\n        list<string> intermediate_incoming - if the previous action produced \n                output that 1) was not stored in a referrable way, and 2) is\n                used as input for this action, provide it with an arbitrary and\n                unique ID here, in the order of the input arguments to this action.\n                These IDs can be used in the method_params argument.\n        list<string> intermediate_outgoing - if this action produced output\n                that 1) was not stored in a referrable way, and 2) is\n                used as input for the next action, provide it with an arbitrary and\n                unique ID here, in the order of the output values from this action.\n                These IDs can be used in the intermediate_incoming argument in the\n                next action.\n        string description - a free text description of this action.",
                "items" : [ {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Typedef",
                    "alias_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "string"
                    },
                    "annotations" : {
                      "metadata" : { },
                      "searchable_ws_subset" : { },
                      "unknown_annotations" : { }
                    },
                    "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
                    "module" : "Workspace",
                    "name" : "timestamp"
                  },
                  "name" : "time",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "service",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "service_ver",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "method",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
                      "annotations" : { }
                    }
                  },
                  "name" : "method_params",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "script",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "script_ver",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "script_command_line",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Typedef",
                      "alias_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Scalar",
                        "annotations" : { },
                        "scalar_type" : "string"
                      },
                      "annotations" : {
                        "metadata" : { },
                        "searchable_ws_subset" : { },
                        "unknown_annotations" : { }
                      },
                      "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
                      "module" : "Workspace",
                      "name" : "obj_ref"
                    }
                  },
                  "name" : "input_ws_objects",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Typedef",
                      "alias_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Scalar",
                        "annotations" : { },
                        "scalar_type" : "string"
                      },
                      "annotations" : {
                        "metadata" : { },
                        "searchable_ws_subset" : { },
                        "unknown_annotations" : { }
                      },
                      "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
                      "module" : "Workspace",
                      "name" : "obj_ref"
                    }
                  },
                  "name" : "resolved_ws_objects",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "string"
                    }
                  },
                  "name" : "intermediate_incoming",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "string"
                    }
                  },
                  "name" : "intermediate_outgoing",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "description",
                  "nullable" : "0"
                } ],
                "module" : "Workspace",
                "name" : "ProvenanceAction"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A provenance action.\n\n        A provenance action is an action taken while transforming one data\n        object to another. There may be several provenance actions taken in\n        series. An action is typically running a script, running an api\n        command, etc. All of the following are optional, but more information\n        provided equates to better data provenance.\n        \n        resolved_ws_objects should never be set by the user; it is set by the\n        workspace service when returning data.\n        \n        The maximum size of the entire provenance object is 1MB.\n        \n        timestamp time - the time the action was started.\n        string service - the name of the service that performed this action.\n        int service_ver - the version of the service that performed this action.\n        string method - the method of the service that performed this action.\n        list<UnspecifiedObject> method_params - the parameters of the method\n                that performed this action. If an object in the parameters is a\n                workspace object, also put the object reference in the\n                input_ws_object list.\n        string script - the name of the script that performed this action.\n        int script_ver - the version of the script that performed this action.\n        string script_command_line - the command line provided to the script\n                that performed this action. If workspace objects were provided in\n                the command line, also put the object reference in the\n                input_ws_object list.\n        list<obj_ref> input_ws_objects - the workspace objects that\n                were used as input to this action; typically these will also be\n                present as parts of the method_params or the script_command_line\n                arguments.\n        list<obj_ref> resolved_ws_objects - the workspace objects ids from \n                input_ws_objects resolved to permanent workspace object references\n                by the workspace service.\n        list<string> intermediate_incoming - if the previous action produced \n                output that 1) was not stored in a referrable way, and 2) is\n                used as input for this action, provide it with an arbitrary and\n                unique ID here, in the order of the input arguments to this action.\n                These IDs can be used in the method_params argument.\n        list<string> intermediate_outgoing - if this action produced output\n                that 1) was not stored in a referrable way, and 2) is\n                used as input for the next action, provide it with an arbitrary and\n                unique ID here, in the order of the output values from this action.\n                These IDs can be used in the intermediate_incoming argument in the\n                next action.\n        string description - a free text description of this action.",
              "module" : "Workspace",
              "name" : "ProvenanceAction"
            }
          },
          "name" : "provenance",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "ObjectData"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "The data and supplemental info for an object.\n\n        UnspecifiedObject data - the object's data.\n        object_info_full info - information about the object.\n        list<ProvenanceAction> provenance - the object's provenance.",
      "module" : "Workspace",
      "name" : "ObjectData"
    }, "auth_defaultoptional", {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "optional",
      "comment" : "pre alpha version of list_workspaces so there's something to use.\nUntested.",
      "name" : "prealpha_list_workspaces",
      "parameters" : [ ],
      "return_type" : [ {
        "name" : "wsinfo",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Tuple",
              "annotations" : { },
              "comment" : "Information about a workspace.\n\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace.\n        username owner - name of the user who owns (e.g. created) this workspace.\n        timestamp moddate - date when the workspace was last modified.\n        permission user_permission - permissions for the authenticated user of\n                this workspace.\n        permission globalread - whether this workspace is globally readable.",
              "element_names" : [ "id", "workspace", "owner", "moddate", "user_permission", "globalread" ],
              "element_types" : [ {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The unique, permanent numerical ID of a workspace.",
                "module" : "Workspace",
                "name" : "ws_id"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
                "module" : "Workspace",
                "name" : "ws_name"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "Login name of a KBase user account.",
                "module" : "Workspace",
                "name" : "username"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
                "module" : "Workspace",
                "name" : "timestamp"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "Represents the permissions a user or users have to a workspace:\n\n        'a' - administrator. All operations allowed.\n        'w' - read/write.\n        'r' - read.\n        'n' - no permissions.",
                "module" : "Workspace",
                "name" : "permission"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "Represents the permissions a user or users have to a workspace:\n\n        'a' - administrator. All operations allowed.\n        'w' - read/write.\n        'r' - read.\n        'n' - no permissions.",
                "module" : "Workspace",
                "name" : "permission"
              } ],
              "name" : "workspace_info"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Information about a workspace.\n\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace.\n        username owner - name of the user who owns (e.g. created) this workspace.\n        timestamp moddate - date when the workspace was last modified.\n        permission user_permission - permissions for the authenticated user of\n                this workspace.\n        permission globalread - whether this workspace is globally readable.",
            "module" : "Workspace",
            "name" : "workspace_info"
          }
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "optional",
      "comment" : "pre alpha version of list_objects so there's something to use.\nUntested.",
      "name" : "prealpha_list_objects",
      "parameters" : [ {
        "name" : "wsi",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Struct",
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { }
            },
            "comment" : "A workspace identifier.\n\n                Select a workspace by one, and only one, of the numerical id or name,\n                        where the name can also be a KBase ID including the numerical id,\n                        e.g. kb|ws.35.\n                ws_id id - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID in KBase\n                        format, e.g. kb|ws.78.",
            "items" : [ {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
                "module" : "Workspace",
                "name" : "ws_name"
              },
              "name" : "workspace",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The unique, permanent numerical ID of a workspace.",
                "module" : "Workspace",
                "name" : "ws_id"
              },
              "name" : "id",
              "nullable" : "0"
            } ],
            "module" : "Workspace",
            "name" : "WorkspaceIdentity"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A workspace identifier.\n\n                Select a workspace by one, and only one, of the numerical id or name,\n                        where the name can also be a KBase ID including the numerical id,\n                        e.g. kb|ws.35.\n                ws_id id - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID in KBase\n                        format, e.g. kb|ws.78.",
          "module" : "Workspace",
          "name" : "WorkspaceIdentity"
        }
      } ],
      "return_type" : [ {
        "name" : "objinfo",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Tuple",
              "annotations" : { },
              "comment" : "Information about an object.\n\n        obj_id objid - the numerical id of the object.\n        obj_name name - the name of the object.\n        type_string type - the type of the object.\n        timestamp save_date - the save date of the object.\n        obj_ver ver - the version of the object.\n        username created_by - the user that created the object.\n        ws_id wsid - the workspace containing the object.\n        string chsum - the md5 checksum of the object.\n        int size - the size of the object in bytes.",
              "element_names" : [ "objid", "name", "type", "save_date", "version", "created_by", "wsid", "chsum", "size" ],
              "element_types" : [ {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The unique, permanent numerical ID of an object.",
                "module" : "Workspace",
                "name" : "obj_id"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
                "module" : "Workspace",
                "name" : "obj_name"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
                "module" : "Workspace",
                "name" : "type_string"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
                "module" : "Workspace",
                "name" : "timestamp"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "Login name of a KBase user account.",
                "module" : "Workspace",
                "name" : "username"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The unique, permanent numerical ID of a workspace.",
                "module" : "Workspace",
                "name" : "ws_id"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              } ],
              "name" : "object_info"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Information about an object.\n\n        obj_id objid - the numerical id of the object.\n        obj_name name - the name of the object.\n        type_string type - the type of the object.\n        timestamp save_date - the save date of the object.\n        obj_ver ver - the version of the object.\n        username created_by - the user that created the object.\n        ws_id wsid - the workspace containing the object.\n        string chsum - the md5 checksum of the object.\n        int size - the size of the object in bytes.",
            "module" : "Workspace",
            "name" : "object_info"
          }
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "optional",
      "comment" : "Get objects from the workspace.",
      "name" : "get_objects",
      "parameters" : [ {
        "name" : "object_ids",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Struct",
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { }
              },
              "comment" : "An object identifier.\n\nSelect an object by either:\n        One, and only one, of the numerical id or name of the workspace,\n        where the name can also be a KBase ID including the numerical id,\n        e.g. kb|ws.35.\n                ws_id wsid - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID\n                        in KBase format, e.g. kb|ws.78.\n        AND \n        One, and only one, of the numerical id or name of the object.\n                obj_id objid- the numerical ID of the object.\n                obj_name name - name of the object.\n        OPTIONALLY\n                obj_ver ver - the version of the object.\nOR an object reference string:\n        obj_ref ref - an object reference string.",
              "items" : [ {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
                  "module" : "Workspace",
                  "name" : "ws_name"
                },
                "name" : "workspace",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "int"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "The unique, permanent numerical ID of a workspace.",
                  "module" : "Workspace",
                  "name" : "ws_id"
                },
                "name" : "wsid",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
                  "module" : "Workspace",
                  "name" : "obj_name"
                },
                "name" : "name",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "int"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "The unique, permanent numerical ID of an object.",
                  "module" : "Workspace",
                  "name" : "obj_id"
                },
                "name" : "objid",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "int"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "An object version.\nThe version of the object, starting at 1.",
                  "module" : "Workspace",
                  "name" : "obj_ver"
                },
                "name" : "ver",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
                  "module" : "Workspace",
                  "name" : "obj_ref"
                },
                "name" : "ref",
                "nullable" : "0"
              } ],
              "module" : "Workspace",
              "name" : "ObjectIdentity"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "An object identifier.\n\nSelect an object by either:\n        One, and only one, of the numerical id or name of the workspace,\n        where the name can also be a KBase ID including the numerical id,\n        e.g. kb|ws.35.\n                ws_id wsid - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID\n                        in KBase format, e.g. kb|ws.78.\n        AND \n        One, and only one, of the numerical id or name of the object.\n                obj_id objid- the numerical ID of the object.\n                obj_name name - name of the object.\n        OPTIONALLY\n                obj_ver ver - the version of the object.\nOR an object reference string:\n        obj_ref ref - an object reference string.",
            "module" : "Workspace",
            "name" : "ObjectIdentity"
          }
        }
      } ],
      "return_type" : [ {
        "name" : "data",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Struct",
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { }
              },
              "comment" : "The data and supplemental info for an object.\n\n        UnspecifiedObject data - the object's data.\n        object_info_full info - information about the object.\n        list<ProvenanceAction> provenance - the object's provenance.",
              "items" : [ {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
                  "annotations" : { }
                },
                "name" : "data",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Tuple",
                    "annotations" : { },
                    "comment" : "Information about an object, including user provided metadata.\n\n        obj_id objid - the numerical id of the object.\n        obj_name name - the name of the object.\n        type_string type - the type of the object.\n        timestamp save_date - the save date of the object.\n        obj_ver ver - the version of the object.\n        username created_by - the user that created the object.\n        ws_id wsid - the workspace containing the object.\n        string chsum - the md5 checksum of the object.\n        int size - the size of the object in bytes.\n        usermeta meta - arbitrary user-supplied metadata about\n                the object.",
                    "element_names" : [ "objid", "name", "type", "save_date", "version", "created_by", "wsid", "chsum", "size", "meta" ],
                    "element_types" : [ {
                      "!" : "Bio::KBase::KIDL::KBT::Typedef",
                      "alias_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Scalar",
                        "annotations" : { },
                        "scalar_type" : "int"
                      },
                      "annotations" : {
                        "metadata" : { },
                        "searchable_ws_subset" : { },
                        "unknown_annotations" : { }
                      },
                      "comment" : "The unique, permanent numerical ID of an object.",
                      "module" : "Workspace",
                      "name" : "obj_id"
                    }, {
                      "!" : "Bio::KBase::KIDL::KBT::Typedef",
                      "alias_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Scalar",
                        "annotations" : { },
                        "scalar_type" : "string"
                      },
                      "annotations" : {
                        "metadata" : { },
                        "searchable_ws_subset" : { },
                        "unknown_annotations" : { }
                      },
                      "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
                      "module" : "Workspace",
                      "name" : "obj_name"
                    }, {
                      "!" : "Bio::KBase::KIDL::KBT::Typedef",
                      "alias_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Scalar",
                        "annotations" : { },
                        "scalar_type" : "string"
                      },
                      "annotations" : {
                        "metadata" : { },
                        "searchable_ws_subset" : { },
                        "unknown_annotations" : { }
                      },
                      "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
                      "module" : "Workspace",
                      "name" : "type_string"
                    }, {
                      "!" : "Bio::KBase::KIDL::KBT::Typedef",
                      "alias_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Scalar",
                        "annotations" : { },
                        "scalar_type" : "string"
                      },
                      "annotations" : {
                        "metadata" : { },
                        "searchable_ws_subset" : { },
                        "unknown_annotations" : { }
                      },
                      "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
                      "module" : "Workspace",
                      "name" : "timestamp"
                    }, {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "int"
                    }, {
                      "!" : "Bio::KBase::KIDL::KBT::Typedef",
                      "alias_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Scalar",
                        "annotations" : { },
                        "scalar_type" : "string"
                      },
                      "annotations" : {
                        "metadata" : { },
                        "searchable_ws_subset" : { },
                        "unknown_annotations" : { }
                      },
                      "comment" : "Login name of a KBase user account.",
                      "module" : "Workspace",
                      "name" : "username"
                    }, {
                      "!" : "Bio::KBase::KIDL::KBT::Typedef",
                      "alias_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Scalar",
                        "annotations" : { },
                        "scalar_type" : "int"
                      },
                      "annotations" : {
                        "metadata" : { },
                        "searchable_ws_subset" : { },
                        "unknown_annotations" : { }
                      },
                      "comment" : "The unique, permanent numerical ID of a workspace.",
                      "module" : "Workspace",
                      "name" : "ws_id"
                    }, {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "string"
                    }, {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "int"
                    }, {
                      "!" : "Bio::KBase::KIDL::KBT::Typedef",
                      "alias_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Mapping",
                        "annotations" : { },
                        "key_type" : {
                          "!" : "Bio::KBase::KIDL::KBT::Scalar",
                          "annotations" : { },
                          "scalar_type" : "string"
                        },
                        "value_type" : {
                          "!" : "Bio::KBase::KIDL::KBT::Scalar",
                          "annotations" : { },
                          "scalar_type" : "string"
                        }
                      },
                      "annotations" : {
                        "metadata" : { },
                        "searchable_ws_subset" : { },
                        "unknown_annotations" : { }
                      },
                      "comment" : "User provided metadata about an object.\nArbitrary key-value pairs provided by the user.",
                      "module" : "Workspace",
                      "name" : "usermeta"
                    } ],
                    "name" : "object_info_full"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "Information about an object, including user provided metadata.\n\n        obj_id objid - the numerical id of the object.\n        obj_name name - the name of the object.\n        type_string type - the type of the object.\n        timestamp save_date - the save date of the object.\n        obj_ver ver - the version of the object.\n        username created_by - the user that created the object.\n        ws_id wsid - the workspace containing the object.\n        string chsum - the md5 checksum of the object.\n        int size - the size of the object in bytes.\n        usermeta meta - arbitrary user-supplied metadata about\n                the object.",
                  "module" : "Workspace",
                  "name" : "object_info_full"
                },
                "name" : "info",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::List",
                  "annotations" : { },
                  "element_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Typedef",
                    "alias_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Struct",
                      "annotations" : {
                        "metadata" : { },
                        "searchable_ws_subset" : { }
                      },
                      "comment" : "A provenance action.\n\n        A provenance action is an action taken while transforming one data\n        object to another. There may be several provenance actions taken in\n        series. An action is typically running a script, running an api\n        command, etc. All of the following are optional, but more information\n        provided equates to better data provenance.\n        \n        resolved_ws_objects should never be set by the user; it is set by the\n        workspace service when returning data.\n        \n        The maximum size of the entire provenance object is 1MB.\n        \n        timestamp time - the time the action was started.\n        string service - the name of the service that performed this action.\n        int service_ver - the version of the service that performed this action.\n        string method - the method of the service that performed this action.\n        list<UnspecifiedObject> method_params - the parameters of the method\n                that performed this action. If an object in the parameters is a\n                workspace object, also put the object reference in the\n                input_ws_object list.\n        string script - the name of the script that performed this action.\n        int script_ver - the version of the script that performed this action.\n        string script_command_line - the command line provided to the script\n                that performed this action. If workspace objects were provided in\n                the command line, also put the object reference in the\n                input_ws_object list.\n        list<obj_ref> input_ws_objects - the workspace objects that\n                were used as input to this action; typically these will also be\n                present as parts of the method_params or the script_command_line\n                arguments.\n        list<obj_ref> resolved_ws_objects - the workspace objects ids from \n                input_ws_objects resolved to permanent workspace object references\n                by the workspace service.\n        list<string> intermediate_incoming - if the previous action produced \n                output that 1) was not stored in a referrable way, and 2) is\n                used as input for this action, provide it with an arbitrary and\n                unique ID here, in the order of the input arguments to this action.\n                These IDs can be used in the method_params argument.\n        list<string> intermediate_outgoing - if this action produced output\n                that 1) was not stored in a referrable way, and 2) is\n                used as input for the next action, provide it with an arbitrary and\n                unique ID here, in the order of the output values from this action.\n                These IDs can be used in the intermediate_incoming argument in the\n                next action.\n        string description - a free text description of this action.",
                      "items" : [ {
                        "!" : "Bio::KBase::KIDL::KBT::StructItem",
                        "item_type" : {
                          "!" : "Bio::KBase::KIDL::KBT::Typedef",
                          "alias_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "string"
                          },
                          "annotations" : {
                            "metadata" : { },
                            "searchable_ws_subset" : { },
                            "unknown_annotations" : { }
                          },
                          "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
                          "module" : "Workspace",
                          "name" : "timestamp"
                        },
                        "name" : "time",
                        "nullable" : "0"
                      }, {
                        "!" : "Bio::KBase::KIDL::KBT::StructItem",
                        "item_type" : {
                          "!" : "Bio::KBase::KIDL::KBT::Scalar",
                          "annotations" : { },
                          "scalar_type" : "string"
                        },
                        "name" : "service",
                        "nullable" : "0"
                      }, {
                        "!" : "Bio::KBase::KIDL::KBT::StructItem",
                        "item_type" : {
                          "!" : "Bio::KBase::KIDL::KBT::Scalar",
                          "annotations" : { },
                          "scalar_type" : "string"
                        },
                        "name" : "service_ver",
                        "nullable" : "0"
                      }, {
                        "!" : "Bio::KBase::KIDL::KBT::StructItem",
                        "item_type" : {
                          "!" : "Bio::KBase::KIDL::KBT::Scalar",
                          "annotations" : { },
                          "scalar_type" : "string"
                        },
                        "name" : "method",
                        "nullable" : "0"
                      }, {
                        "!" : "Bio::KBase::KIDL::KBT::StructItem",
                        "item_type" : {
                          "!" : "Bio::KBase::KIDL::KBT::List",
                          "annotations" : { },
                          "element_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
                            "annotations" : { }
                          }
                        },
                        "name" : "method_params",
                        "nullable" : "0"
                      }, {
                        "!" : "Bio::KBase::KIDL::KBT::StructItem",
                        "item_type" : {
                          "!" : "Bio::KBase::KIDL::KBT::Scalar",
                          "annotations" : { },
                          "scalar_type" : "string"
                        },
                        "name" : "script",
                        "nullable" : "0"
                      }, {
                        "!" : "Bio::KBase::KIDL::KBT::StructItem",
                        "item_type" : {
                          "!" : "Bio::KBase::KIDL::KBT::Scalar",
                          "annotations" : { },
                          "scalar_type" : "string"
                        },
                        "name" : "script_ver",
                        "nullable" : "0"
                      }, {
                        "!" : "Bio::KBase::KIDL::KBT::StructItem",
                        "item_type" : {
                          "!" : "Bio::KBase::KIDL::KBT::Scalar",
                          "annotations" : { },
                          "scalar_type" : "string"
                        },
                        "name" : "script_command_line",
                        "nullable" : "0"
                      }, {
                        "!" : "Bio::KBase::KIDL::KBT::StructItem",
                        "item_type" : {
                          "!" : "Bio::KBase::KIDL::KBT::List",
                          "annotations" : { },
                          "element_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Typedef",
                            "alias_type" : {
                              "!" : "Bio::KBase::KIDL::KBT::Scalar",
                              "annotations" : { },
                              "scalar_type" : "string"
                            },
                            "annotations" : {
                              "metadata" : { },
                              "searchable_ws_subset" : { },
                              "unknown_annotations" : { }
                            },
                            "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
                            "module" : "Workspace",
                            "name" : "obj_ref"
                          }
                        },
                        "name" : "input_ws_objects",
                        "nullable" : "0"
                      }, {
                        "!" : "Bio::KBase::KIDL::KBT::StructItem",
                        "item_type" : {
                          "!" : "Bio::KBase::KIDL::KBT::List",
                          "annotations" : { },
                          "element_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Typedef",
                            "alias_type" : {
                              "!" : "Bio::KBase::KIDL::KBT::Scalar",
                              "annotations" : { },
                              "scalar_type" : "string"
                            },
                            "annotations" : {
                              "metadata" : { },
                              "searchable_ws_subset" : { },
                              "unknown_annotations" : { }
                            },
                            "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
                            "module" : "Workspace",
                            "name" : "obj_ref"
                          }
                        },
                        "name" : "resolved_ws_objects",
                        "nullable" : "0"
                      }, {
                        "!" : "Bio::KBase::KIDL::KBT::StructItem",
                        "item_type" : {
                          "!" : "Bio::KBase::KIDL::KBT::List",
                          "annotations" : { },
                          "element_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "string"
                          }
                        },
                        "name" : "intermediate_incoming",
                        "nullable" : "0"
                      }, {
                        "!" : "Bio::KBase::KIDL::KBT::StructItem",
                        "item_type" : {
                          "!" : "Bio::KBase::KIDL::KBT::List",
                          "annotations" : { },
                          "element_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "string"
                          }
                        },
                        "name" : "intermediate_outgoing",
                        "nullable" : "0"
                      }, {
                        "!" : "Bio::KBase::KIDL::KBT::StructItem",
                        "item_type" : {
                          "!" : "Bio::KBase::KIDL::KBT::Scalar",
                          "annotations" : { },
                          "scalar_type" : "string"
                        },
                        "name" : "description",
                        "nullable" : "0"
                      } ],
                      "module" : "Workspace",
                      "name" : "ProvenanceAction"
                    },
                    "annotations" : {
                      "metadata" : { },
                      "searchable_ws_subset" : { },
                      "unknown_annotations" : { }
                    },
                    "comment" : "A provenance action.\n\n        A provenance action is an action taken while transforming one data\n        object to another. There may be several provenance actions taken in\n        series. An action is typically running a script, running an api\n        command, etc. All of the following are optional, but more information\n        provided equates to better data provenance.\n        \n        resolved_ws_objects should never be set by the user; it is set by the\n        workspace service when returning data.\n        \n        The maximum size of the entire provenance object is 1MB.\n        \n        timestamp time - the time the action was started.\n        string service - the name of the service that performed this action.\n        int service_ver - the version of the service that performed this action.\n        string method - the method of the service that performed this action.\n        list<UnspecifiedObject> method_params - the parameters of the method\n                that performed this action. If an object in the parameters is a\n                workspace object, also put the object reference in the\n                input_ws_object list.\n        string script - the name of the script that performed this action.\n        int script_ver - the version of the script that performed this action.\n        string script_command_line - the command line provided to the script\n                that performed this action. If workspace objects were provided in\n                the command line, also put the object reference in the\n                input_ws_object list.\n        list<obj_ref> input_ws_objects - the workspace objects that\n                were used as input to this action; typically these will also be\n                present as parts of the method_params or the script_command_line\n                arguments.\n        list<obj_ref> resolved_ws_objects - the workspace objects ids from \n                input_ws_objects resolved to permanent workspace object references\n                by the workspace service.\n        list<string> intermediate_incoming - if the previous action produced \n                output that 1) was not stored in a referrable way, and 2) is\n                used as input for this action, provide it with an arbitrary and\n                unique ID here, in the order of the input arguments to this action.\n                These IDs can be used in the method_params argument.\n        list<string> intermediate_outgoing - if this action produced output\n                that 1) was not stored in a referrable way, and 2) is\n                used as input for the next action, provide it with an arbitrary and\n                unique ID here, in the order of the output values from this action.\n                These IDs can be used in the intermediate_incoming argument in the\n                next action.\n        string description - a free text description of this action.",
                    "module" : "Workspace",
                    "name" : "ProvenanceAction"
                  }
                },
                "name" : "provenance",
                "nullable" : "0"
              } ],
              "module" : "Workspace",
              "name" : "ObjectData"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The data and supplemental info for an object.\n\n        UnspecifiedObject data - the object's data.\n        object_info_full info - information about the object.\n        list<ProvenanceAction> provenance - the object's provenance.",
            "module" : "Workspace",
            "name" : "ObjectData"
          }
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "optional",
      "comment" : "Get information about an object from the workspace.",
      "name" : "get_object_info",
      "parameters" : [ {
        "name" : "object_ids",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Struct",
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { }
              },
              "comment" : "An object identifier.\n\nSelect an object by either:\n        One, and only one, of the numerical id or name of the workspace,\n        where the name can also be a KBase ID including the numerical id,\n        e.g. kb|ws.35.\n                ws_id wsid - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID\n                        in KBase format, e.g. kb|ws.78.\n        AND \n        One, and only one, of the numerical id or name of the object.\n                obj_id objid- the numerical ID of the object.\n                obj_name name - name of the object.\n        OPTIONALLY\n                obj_ver ver - the version of the object.\nOR an object reference string:\n        obj_ref ref - an object reference string.",
              "items" : [ {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
                  "module" : "Workspace",
                  "name" : "ws_name"
                },
                "name" : "workspace",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "int"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "The unique, permanent numerical ID of a workspace.",
                  "module" : "Workspace",
                  "name" : "ws_id"
                },
                "name" : "wsid",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
                  "module" : "Workspace",
                  "name" : "obj_name"
                },
                "name" : "name",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "int"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "The unique, permanent numerical ID of an object.",
                  "module" : "Workspace",
                  "name" : "obj_id"
                },
                "name" : "objid",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "int"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "An object version.\nThe version of the object, starting at 1.",
                  "module" : "Workspace",
                  "name" : "obj_ver"
                },
                "name" : "ver",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
                  "module" : "Workspace",
                  "name" : "obj_ref"
                },
                "name" : "ref",
                "nullable" : "0"
              } ],
              "module" : "Workspace",
              "name" : "ObjectIdentity"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "An object identifier.\n\nSelect an object by either:\n        One, and only one, of the numerical id or name of the workspace,\n        where the name can also be a KBase ID including the numerical id,\n        e.g. kb|ws.35.\n                ws_id wsid - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID\n                        in KBase format, e.g. kb|ws.78.\n        AND \n        One, and only one, of the numerical id or name of the object.\n                obj_id objid- the numerical ID of the object.\n                obj_name name - name of the object.\n        OPTIONALLY\n                obj_ver ver - the version of the object.\nOR an object reference string:\n        obj_ref ref - an object reference string.",
            "module" : "Workspace",
            "name" : "ObjectIdentity"
          }
        }
      } ],
      "return_type" : [ {
        "name" : "info",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Tuple",
              "annotations" : { },
              "comment" : "Information about an object, including user provided metadata.\n\n        obj_id objid - the numerical id of the object.\n        obj_name name - the name of the object.\n        type_string type - the type of the object.\n        timestamp save_date - the save date of the object.\n        obj_ver ver - the version of the object.\n        username created_by - the user that created the object.\n        ws_id wsid - the workspace containing the object.\n        string chsum - the md5 checksum of the object.\n        int size - the size of the object in bytes.\n        usermeta meta - arbitrary user-supplied metadata about\n                the object.",
              "element_names" : [ "objid", "name", "type", "save_date", "version", "created_by", "wsid", "chsum", "size", "meta" ],
              "element_types" : [ {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The unique, permanent numerical ID of an object.",
                "module" : "Workspace",
                "name" : "obj_id"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
                "module" : "Workspace",
                "name" : "obj_name"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
                "module" : "Workspace",
                "name" : "type_string"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
                "module" : "Workspace",
                "name" : "timestamp"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "Login name of a KBase user account.",
                "module" : "Workspace",
                "name" : "username"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The unique, permanent numerical ID of a workspace.",
                "module" : "Workspace",
                "name" : "ws_id"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Mapping",
                  "annotations" : { },
                  "key_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "value_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  }
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "User provided metadata about an object.\nArbitrary key-value pairs provided by the user.",
                "module" : "Workspace",
                "name" : "usermeta"
              } ],
              "name" : "object_info_full"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Information about an object, including user provided metadata.\n\n        obj_id objid - the numerical id of the object.\n        obj_name name - the name of the object.\n        type_string type - the type of the object.\n        timestamp save_date - the save date of the object.\n        obj_ver ver - the version of the object.\n        username created_by - the user that created the object.\n        ws_id wsid - the workspace containing the object.\n        string chsum - the md5 checksum of the object.\n        int size - the size of the object in bytes.\n        usermeta meta - arbitrary user-supplied metadata about\n                the object.",
            "module" : "Workspace",
            "name" : "object_info_full"
          }
        }
      } ]
    }, "auth_defaultrequired", {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "required",
      "comment" : "Delete objects. All versions of an object are deleted, regardless of\nthe version specified in the ObjectIdentity.",
      "name" : "delete_objects",
      "parameters" : [ {
        "name" : "object_ids",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Struct",
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { }
              },
              "comment" : "An object identifier.\n\nSelect an object by either:\n        One, and only one, of the numerical id or name of the workspace,\n        where the name can also be a KBase ID including the numerical id,\n        e.g. kb|ws.35.\n                ws_id wsid - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID\n                        in KBase format, e.g. kb|ws.78.\n        AND \n        One, and only one, of the numerical id or name of the object.\n                obj_id objid- the numerical ID of the object.\n                obj_name name - name of the object.\n        OPTIONALLY\n                obj_ver ver - the version of the object.\nOR an object reference string:\n        obj_ref ref - an object reference string.",
              "items" : [ {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
                  "module" : "Workspace",
                  "name" : "ws_name"
                },
                "name" : "workspace",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "int"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "The unique, permanent numerical ID of a workspace.",
                  "module" : "Workspace",
                  "name" : "ws_id"
                },
                "name" : "wsid",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
                  "module" : "Workspace",
                  "name" : "obj_name"
                },
                "name" : "name",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "int"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "The unique, permanent numerical ID of an object.",
                  "module" : "Workspace",
                  "name" : "obj_id"
                },
                "name" : "objid",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "int"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "An object version.\nThe version of the object, starting at 1.",
                  "module" : "Workspace",
                  "name" : "obj_ver"
                },
                "name" : "ver",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
                  "module" : "Workspace",
                  "name" : "obj_ref"
                },
                "name" : "ref",
                "nullable" : "0"
              } ],
              "module" : "Workspace",
              "name" : "ObjectIdentity"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "An object identifier.\n\nSelect an object by either:\n        One, and only one, of the numerical id or name of the workspace,\n        where the name can also be a KBase ID including the numerical id,\n        e.g. kb|ws.35.\n                ws_id wsid - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID\n                        in KBase format, e.g. kb|ws.78.\n        AND \n        One, and only one, of the numerical id or name of the object.\n                obj_id objid- the numerical ID of the object.\n                obj_name name - name of the object.\n        OPTIONALLY\n                obj_ver ver - the version of the object.\nOR an object reference string:\n        obj_ref ref - an object reference string.",
            "module" : "Workspace",
            "name" : "ObjectIdentity"
          }
        }
      } ],
      "return_type" : [ ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "required",
      "comment" : "Undelete objects. All versions of an object are undeleted, regardless\nof the version specified in the ObjectIdentity. If an object is not\ndeleted, no error is thrown.",
      "name" : "undelete_objects",
      "parameters" : [ {
        "name" : "object_ids",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Struct",
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { }
              },
              "comment" : "An object identifier.\n\nSelect an object by either:\n        One, and only one, of the numerical id or name of the workspace,\n        where the name can also be a KBase ID including the numerical id,\n        e.g. kb|ws.35.\n                ws_id wsid - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID\n                        in KBase format, e.g. kb|ws.78.\n        AND \n        One, and only one, of the numerical id or name of the object.\n                obj_id objid- the numerical ID of the object.\n                obj_name name - name of the object.\n        OPTIONALLY\n                obj_ver ver - the version of the object.\nOR an object reference string:\n        obj_ref ref - an object reference string.",
              "items" : [ {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
                  "module" : "Workspace",
                  "name" : "ws_name"
                },
                "name" : "workspace",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "int"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "The unique, permanent numerical ID of a workspace.",
                  "module" : "Workspace",
                  "name" : "ws_id"
                },
                "name" : "wsid",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
                  "module" : "Workspace",
                  "name" : "obj_name"
                },
                "name" : "name",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "int"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "The unique, permanent numerical ID of an object.",
                  "module" : "Workspace",
                  "name" : "obj_id"
                },
                "name" : "objid",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "int"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "An object version.\nThe version of the object, starting at 1.",
                  "module" : "Workspace",
                  "name" : "obj_ver"
                },
                "name" : "ver",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
                  "module" : "Workspace",
                  "name" : "obj_ref"
                },
                "name" : "ref",
                "nullable" : "0"
              } ],
              "module" : "Workspace",
              "name" : "ObjectIdentity"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "An object identifier.\n\nSelect an object by either:\n        One, and only one, of the numerical id or name of the workspace,\n        where the name can also be a KBase ID including the numerical id,\n        e.g. kb|ws.35.\n                ws_id wsid - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID\n                        in KBase format, e.g. kb|ws.78.\n        AND \n        One, and only one, of the numerical id or name of the object.\n                obj_id objid- the numerical ID of the object.\n                obj_name name - name of the object.\n        OPTIONALLY\n                obj_ver ver - the version of the object.\nOR an object reference string:\n        obj_ref ref - an object reference string.",
            "module" : "Workspace",
            "name" : "ObjectIdentity"
          }
        }
      } ],
      "return_type" : [ ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "required",
      "comment" : "Delete a workspace. All objects contained in the workspace are deleted.",
      "name" : "delete_workspace",
      "parameters" : [ {
        "name" : "wsi",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Struct",
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { }
            },
            "comment" : "A workspace identifier.\n\n                Select a workspace by one, and only one, of the numerical id or name,\n                        where the name can also be a KBase ID including the numerical id,\n                        e.g. kb|ws.35.\n                ws_id id - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID in KBase\n                        format, e.g. kb|ws.78.",
            "items" : [ {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
                "module" : "Workspace",
                "name" : "ws_name"
              },
              "name" : "workspace",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The unique, permanent numerical ID of a workspace.",
                "module" : "Workspace",
                "name" : "ws_id"
              },
              "name" : "id",
              "nullable" : "0"
            } ],
            "module" : "Workspace",
            "name" : "WorkspaceIdentity"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A workspace identifier.\n\n                Select a workspace by one, and only one, of the numerical id or name,\n                        where the name can also be a KBase ID including the numerical id,\n                        e.g. kb|ws.35.\n                ws_id id - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID in KBase\n                        format, e.g. kb|ws.78.",
          "module" : "Workspace",
          "name" : "WorkspaceIdentity"
        }
      } ],
      "return_type" : [ ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "required",
      "comment" : "Undelete a workspace. All objects contained in the workspace are\nundeleted, regardless of their state at the time the workspace was\ndeleted.",
      "name" : "undelete_workspace",
      "parameters" : [ {
        "name" : "wsi",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Struct",
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { }
            },
            "comment" : "A workspace identifier.\n\n                Select a workspace by one, and only one, of the numerical id or name,\n                        where the name can also be a KBase ID including the numerical id,\n                        e.g. kb|ws.35.\n                ws_id id - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID in KBase\n                        format, e.g. kb|ws.78.",
            "items" : [ {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
                "module" : "Workspace",
                "name" : "ws_name"
              },
              "name" : "workspace",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The unique, permanent numerical ID of a workspace.",
                "module" : "Workspace",
                "name" : "ws_id"
              },
              "name" : "id",
              "nullable" : "0"
            } ],
            "module" : "Workspace",
            "name" : "WorkspaceIdentity"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A workspace identifier.\n\n                Select a workspace by one, and only one, of the numerical id or name,\n                        where the name can also be a KBase ID including the numerical id,\n                        e.g. kb|ws.35.\n                ws_id id - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID in KBase\n                        format, e.g. kb|ws.78.",
          "module" : "Workspace",
          "name" : "WorkspaceIdentity"
        }
      } ],
      "return_type" : [ ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A KBase Interface Definition Language (KIDL) typespec.",
      "module" : "Workspace",
      "name" : "typespec"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "The module name of a KIDL typespec.",
      "module" : "Workspace",
      "name" : "modulename"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "The name of a type in a KIDL typespec module.",
      "module" : "Workspace",
      "name" : "typename"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "The version of a typespec.",
      "module" : "Workspace",
      "name" : "spec_version"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "The JSON Schema for a type.",
      "module" : "Workspace",
      "name" : "jsonschema"
    }, "auth_defaultrequired", {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "required",
      "comment" : "Request ownership of a module name.",
      "name" : "request_module_ownership",
      "parameters" : [ {
        "name" : "mod",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The module name of a KIDL typespec.",
          "module" : "Workspace",
          "name" : "modulename"
        }
      } ],
      "return_type" : [ ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Parameters for the compile_typespec function.\n\n        Required arguments:\n        One of:\n        typespec spec - the new typespec to compile.\n        modulename mod - the module to recompile.\n        \n        Optional arguments:\n        boolean dryrun - Return, but do not save, the results of compiling the \n                spec. Default true. Set to false for making permanent changes.\n        list<typename> new_types - types in the spec to make available in the\n                workspace service. When compiling a spec for the first time, if\n                this argument is empty no types will be made available. Previously\n                available types remain so upon recompilation of a spec or\n                compilation of a new spec.\n        list<typename> remove_types - no longer make these types available in\n                the workspace service for the new version of the spec. This does\n                not remove versions of types previously compiled.\n        mapping<modulename, spec_version> dependencies - By default, the\n                latest released versions of spec dependencies will be included when\n                compiling a spec. Specific versions can be specified here.\n        spec_version prev_ver - the id of the previous version of the typespec.\n                An error will be thrown if this is set and prev_ver is not the\n                most recent version of the typespec. This prevents overwriting of\n                changes made since retrieving a spec and compiling an edited spec.\n                This argument is ignored if a modulename is passed.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A KBase Interface Definition Language (KIDL) typespec.",
            "module" : "Workspace",
            "name" : "typespec"
          },
          "name" : "spec",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The module name of a KIDL typespec.",
            "module" : "Workspace",
            "name" : "modulename"
          },
          "name" : "mod",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "The name of a type in a KIDL typespec module.",
              "module" : "Workspace",
              "name" : "typename"
            }
          },
          "name" : "new_types",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "The name of a type in a KIDL typespec module.",
              "module" : "Workspace",
              "name" : "typename"
            }
          },
          "name" : "remove_types",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Mapping",
            "annotations" : { },
            "key_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "The module name of a KIDL typespec.",
              "module" : "Workspace",
              "name" : "modulename"
            },
            "value_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "The version of a typespec.",
              "module" : "Workspace",
              "name" : "spec_version"
            }
          },
          "name" : "dependencies",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A boolean. 0 = false, other = true.",
            "module" : "Workspace",
            "name" : "boolean"
          },
          "name" : "dryrun",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The version of a typespec.",
            "module" : "Workspace",
            "name" : "spec_version"
          },
          "name" : "prev_ver",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "CompileTypespecParams"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Parameters for the compile_typespec function.\n\n        Required arguments:\n        One of:\n        typespec spec - the new typespec to compile.\n        modulename mod - the module to recompile.\n        \n        Optional arguments:\n        boolean dryrun - Return, but do not save, the results of compiling the \n                spec. Default true. Set to false for making permanent changes.\n        list<typename> new_types - types in the spec to make available in the\n                workspace service. When compiling a spec for the first time, if\n                this argument is empty no types will be made available. Previously\n                available types remain so upon recompilation of a spec or\n                compilation of a new spec.\n        list<typename> remove_types - no longer make these types available in\n                the workspace service for the new version of the spec. This does\n                not remove versions of types previously compiled.\n        mapping<modulename, spec_version> dependencies - By default, the\n                latest released versions of spec dependencies will be included when\n                compiling a spec. Specific versions can be specified here.\n        spec_version prev_ver - the id of the previous version of the typespec.\n                An error will be thrown if this is set and prev_ver is not the\n                most recent version of the typespec. This prevents overwriting of\n                changes made since retrieving a spec and compiling an edited spec.\n                This argument is ignored if a modulename is passed.",
      "module" : "Workspace",
      "name" : "CompileTypespecParams"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "required",
      "comment" : "Compile a new typespec or recompile an existing typespec. \nAlso see the release_types function.",
      "name" : "compile_typespec",
      "parameters" : [ {
        "name" : "params",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Struct",
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { }
            },
            "comment" : "Parameters for the compile_typespec function.\n\n        Required arguments:\n        One of:\n        typespec spec - the new typespec to compile.\n        modulename mod - the module to recompile.\n        \n        Optional arguments:\n        boolean dryrun - Return, but do not save, the results of compiling the \n                spec. Default true. Set to false for making permanent changes.\n        list<typename> new_types - types in the spec to make available in the\n                workspace service. When compiling a spec for the first time, if\n                this argument is empty no types will be made available. Previously\n                available types remain so upon recompilation of a spec or\n                compilation of a new spec.\n        list<typename> remove_types - no longer make these types available in\n                the workspace service for the new version of the spec. This does\n                not remove versions of types previously compiled.\n        mapping<modulename, spec_version> dependencies - By default, the\n                latest released versions of spec dependencies will be included when\n                compiling a spec. Specific versions can be specified here.\n        spec_version prev_ver - the id of the previous version of the typespec.\n                An error will be thrown if this is set and prev_ver is not the\n                most recent version of the typespec. This prevents overwriting of\n                changes made since retrieving a spec and compiling an edited spec.\n                This argument is ignored if a modulename is passed.",
            "items" : [ {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A KBase Interface Definition Language (KIDL) typespec.",
                "module" : "Workspace",
                "name" : "typespec"
              },
              "name" : "spec",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The module name of a KIDL typespec.",
                "module" : "Workspace",
                "name" : "modulename"
              },
              "name" : "mod",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::List",
                "annotations" : { },
                "element_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "The name of a type in a KIDL typespec module.",
                  "module" : "Workspace",
                  "name" : "typename"
                }
              },
              "name" : "new_types",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::List",
                "annotations" : { },
                "element_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "The name of a type in a KIDL typespec module.",
                  "module" : "Workspace",
                  "name" : "typename"
                }
              },
              "name" : "remove_types",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Mapping",
                "annotations" : { },
                "key_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "The module name of a KIDL typespec.",
                  "module" : "Workspace",
                  "name" : "modulename"
                },
                "value_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "int"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "The version of a typespec.",
                  "module" : "Workspace",
                  "name" : "spec_version"
                }
              },
              "name" : "dependencies",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A boolean. 0 = false, other = true.",
                "module" : "Workspace",
                "name" : "boolean"
              },
              "name" : "dryrun",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The version of a typespec.",
                "module" : "Workspace",
                "name" : "spec_version"
              },
              "name" : "prev_ver",
              "nullable" : "0"
            } ],
            "module" : "Workspace",
            "name" : "CompileTypespecParams"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Parameters for the compile_typespec function.\n\n        Required arguments:\n        One of:\n        typespec spec - the new typespec to compile.\n        modulename mod - the module to recompile.\n        \n        Optional arguments:\n        boolean dryrun - Return, but do not save, the results of compiling the \n                spec. Default true. Set to false for making permanent changes.\n        list<typename> new_types - types in the spec to make available in the\n                workspace service. When compiling a spec for the first time, if\n                this argument is empty no types will be made available. Previously\n                available types remain so upon recompilation of a spec or\n                compilation of a new spec.\n        list<typename> remove_types - no longer make these types available in\n                the workspace service for the new version of the spec. This does\n                not remove versions of types previously compiled.\n        mapping<modulename, spec_version> dependencies - By default, the\n                latest released versions of spec dependencies will be included when\n                compiling a spec. Specific versions can be specified here.\n        spec_version prev_ver - the id of the previous version of the typespec.\n                An error will be thrown if this is set and prev_ver is not the\n                most recent version of the typespec. This prevents overwriting of\n                changes made since retrieving a spec and compiling an edited spec.\n                This argument is ignored if a modulename is passed.",
          "module" : "Workspace",
          "name" : "CompileTypespecParams"
        }
      } ],
      "return_type" : [ {
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Mapping",
          "annotations" : { },
          "key_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
            "module" : "Workspace",
            "name" : "type_string"
          },
          "value_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The JSON Schema for a type.",
            "module" : "Workspace",
            "name" : "jsonschema"
          }
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "required",
      "comment" : "Compile a copy of new typespec or recompile an existing typespec which is loaded \nfrom another workspace for synchronization. Method returns new version of module \nin current workspace. Also see the release_types function.",
      "name" : "compile_typespec_copy",
      "parameters" : [ {
        "name" : "external_workspace_url",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        }
      }, {
        "name" : "mod",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The module name of a KIDL typespec.",
          "module" : "Workspace",
          "name" : "modulename"
        }
      }, {
        "name" : "version_in_external_workspace",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "int"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The version of a typespec.",
          "module" : "Workspace",
          "name" : "spec_version"
        }
      } ],
      "return_type" : [ {
        "name" : "new_local_version",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "int"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The version of a typespec.",
          "module" : "Workspace",
          "name" : "spec_version"
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "required",
      "comment" : "Release a module for general use of its types.\n\nReleases the most recent version of a module. Releasing a module does\ntwo things to the module's types:\n1) If a type's major version is 0, it is changed to 1. A major\n        version of 0 implies that the type is in development and may have\n        backwards incompatible changes from minor version to minor version.\n        Once a type is released, backwards incompatible changes always\n        cause a major version increment.\n2) This version of the type becomes the default version, and if a \n        specific version is not supplied in a function call, this version\n        will be used. This means that newer, unreleased versions of the\n        type may be skipped.",
      "name" : "release_module",
      "parameters" : [ {
        "name" : "mod",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The module name of a KIDL typespec.",
          "module" : "Workspace",
          "name" : "modulename"
        }
      } ],
      "return_type" : [ {
        "name" : "types",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
            "module" : "Workspace",
            "name" : "type_string"
          }
        }
      } ]
    }, "auth_defaultnone", {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Parameters for the list_modules() function.\n\n        Optional arguments:\n        username owner - only list modules owned by this user.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Login name of a KBase user account.",
            "module" : "Workspace",
            "name" : "username"
          },
          "name" : "owner",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "ListModulesParams"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Parameters for the list_modules() function.\n\n        Optional arguments:\n        username owner - only list modules owned by this user.",
      "module" : "Workspace",
      "name" : "ListModulesParams"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "List typespec modules.",
      "name" : "list_modules",
      "parameters" : [ {
        "name" : "params",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Struct",
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { }
            },
            "comment" : "Parameters for the list_modules() function.\n\n        Optional arguments:\n        username owner - only list modules owned by this user.",
            "items" : [ {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "Login name of a KBase user account.",
                "module" : "Workspace",
                "name" : "username"
              },
              "name" : "owner",
              "nullable" : "0"
            } ],
            "module" : "Workspace",
            "name" : "ListModulesParams"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Parameters for the list_modules() function.\n\n        Optional arguments:\n        username owner - only list modules owned by this user.",
          "module" : "Workspace",
          "name" : "ListModulesParams"
        }
      } ],
      "return_type" : [ {
        "name" : "modules",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The module name of a KIDL typespec.",
            "module" : "Workspace",
            "name" : "modulename"
          }
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Parameters for the list_module_versions function.\n\n        Required arguments:\n        One of:\n        modulename mod - returns all versions of the module.\n        type_string type - returns all versions of the module associated with\n                the type.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The module name of a KIDL typespec.",
            "module" : "Workspace",
            "name" : "modulename"
          },
          "name" : "mod",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
            "module" : "Workspace",
            "name" : "type_string"
          },
          "name" : "type",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "ListModuleVersionsParams"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Parameters for the list_module_versions function.\n\n        Required arguments:\n        One of:\n        modulename mod - returns all versions of the module.\n        type_string type - returns all versions of the module associated with\n                the type.",
      "module" : "Workspace",
      "name" : "ListModuleVersionsParams"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "A set of versions from a module.\n\n        modulename mod - the name of the module.\n        list<spec_version> - a set or subset of versions associated with the\n                module.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The module name of a KIDL typespec.",
            "module" : "Workspace",
            "name" : "modulename"
          },
          "name" : "mod",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "The version of a typespec.",
              "module" : "Workspace",
              "name" : "spec_version"
            }
          },
          "name" : "vers",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "ModuleVersions"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A set of versions from a module.\n\n        modulename mod - the name of the module.\n        list<spec_version> - a set or subset of versions associated with the\n                module.",
      "module" : "Workspace",
      "name" : "ModuleVersions"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "List typespec module versions.",
      "name" : "list_module_versions",
      "parameters" : [ {
        "name" : "params",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Struct",
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { }
            },
            "comment" : "Parameters for the list_module_versions function.\n\n        Required arguments:\n        One of:\n        modulename mod - returns all versions of the module.\n        type_string type - returns all versions of the module associated with\n                the type.",
            "items" : [ {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The module name of a KIDL typespec.",
                "module" : "Workspace",
                "name" : "modulename"
              },
              "name" : "mod",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
                "module" : "Workspace",
                "name" : "type_string"
              },
              "name" : "type",
              "nullable" : "0"
            } ],
            "module" : "Workspace",
            "name" : "ListModuleVersionsParams"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Parameters for the list_module_versions function.\n\n        Required arguments:\n        One of:\n        modulename mod - returns all versions of the module.\n        type_string type - returns all versions of the module associated with\n                the type.",
          "module" : "Workspace",
          "name" : "ListModuleVersionsParams"
        }
      } ],
      "return_type" : [ {
        "name" : "vers",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Struct",
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { }
            },
            "comment" : "A set of versions from a module.\n\n        modulename mod - the name of the module.\n        list<spec_version> - a set or subset of versions associated with the\n                module.",
            "items" : [ {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The module name of a KIDL typespec.",
                "module" : "Workspace",
                "name" : "modulename"
              },
              "name" : "mod",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::List",
                "annotations" : { },
                "element_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "int"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "The version of a typespec.",
                  "module" : "Workspace",
                  "name" : "spec_version"
                }
              },
              "name" : "vers",
              "nullable" : "0"
            } ],
            "module" : "Workspace",
            "name" : "ModuleVersions"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A set of versions from a module.\n\n        modulename mod - the name of the module.\n        list<spec_version> - a set or subset of versions associated with the\n                module.",
          "module" : "Workspace",
          "name" : "ModuleVersions"
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Parameters for the get_module_info function.\n\n        Required arguments:\n        modulename mod - the name of the module to retrieve.\n        \n        Optional arguments:\n        spec_version ver - the version of the module to retrieve. Defaults to\n                the latest version.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The module name of a KIDL typespec.",
            "module" : "Workspace",
            "name" : "modulename"
          },
          "name" : "mod",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The version of a typespec.",
            "module" : "Workspace",
            "name" : "spec_version"
          },
          "name" : "ver",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "GetModuleInfoParams"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Parameters for the get_module_info function.\n\n        Required arguments:\n        modulename mod - the name of the module to retrieve.\n        \n        Optional arguments:\n        spec_version ver - the version of the module to retrieve. Defaults to\n                the latest version.",
      "module" : "Workspace",
      "name" : "GetModuleInfoParams"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Information about a module.\n\n        list<username> owners - the owners of the module.\n        spec_version ver - the version of the module.\n        typespec spec - the typespec.\n        string description - the description of the module from the typespec.\n        mapping<type_string, jsonschema> types - the types associated with this\n                module and their JSON schema.\n        mapping<modulename, spec_version> included_spec_version - names of \n                included modules associated with their versions.\n        string chsum - the md5 checksum of the object.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "Login name of a KBase user account.",
              "module" : "Workspace",
              "name" : "username"
            }
          },
          "name" : "owners",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The version of a typespec.",
            "module" : "Workspace",
            "name" : "spec_version"
          },
          "name" : "ver",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A KBase Interface Definition Language (KIDL) typespec.",
            "module" : "Workspace",
            "name" : "typespec"
          },
          "name" : "spec",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "description",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Mapping",
            "annotations" : { },
            "key_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
              "module" : "Workspace",
              "name" : "type_string"
            },
            "value_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "The JSON Schema for a type.",
              "module" : "Workspace",
              "name" : "jsonschema"
            }
          },
          "name" : "types",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Mapping",
            "annotations" : { },
            "key_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "The module name of a KIDL typespec.",
              "module" : "Workspace",
              "name" : "modulename"
            },
            "value_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "The version of a typespec.",
              "module" : "Workspace",
              "name" : "spec_version"
            }
          },
          "name" : "included_spec_version",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "chsum",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "ModuleInfo"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Information about a module.\n\n        list<username> owners - the owners of the module.\n        spec_version ver - the version of the module.\n        typespec spec - the typespec.\n        string description - the description of the module from the typespec.\n        mapping<type_string, jsonschema> types - the types associated with this\n                module and their JSON schema.\n        mapping<modulename, spec_version> included_spec_version - names of \n                included modules associated with their versions.\n        string chsum - the md5 checksum of the object.",
      "module" : "Workspace",
      "name" : "ModuleInfo"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "",
      "name" : "get_module_info",
      "parameters" : [ {
        "name" : "params",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Struct",
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { }
            },
            "comment" : "Parameters for the get_module_info function.\n\n        Required arguments:\n        modulename mod - the name of the module to retrieve.\n        \n        Optional arguments:\n        spec_version ver - the version of the module to retrieve. Defaults to\n                the latest version.",
            "items" : [ {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The module name of a KIDL typespec.",
                "module" : "Workspace",
                "name" : "modulename"
              },
              "name" : "mod",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The version of a typespec.",
                "module" : "Workspace",
                "name" : "spec_version"
              },
              "name" : "ver",
              "nullable" : "0"
            } ],
            "module" : "Workspace",
            "name" : "GetModuleInfoParams"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Parameters for the get_module_info function.\n\n        Required arguments:\n        modulename mod - the name of the module to retrieve.\n        \n        Optional arguments:\n        spec_version ver - the version of the module to retrieve. Defaults to\n                the latest version.",
          "module" : "Workspace",
          "name" : "GetModuleInfoParams"
        }
      } ],
      "return_type" : [ {
        "name" : "info",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Struct",
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { }
            },
            "comment" : "Information about a module.\n\n        list<username> owners - the owners of the module.\n        spec_version ver - the version of the module.\n        typespec spec - the typespec.\n        string description - the description of the module from the typespec.\n        mapping<type_string, jsonschema> types - the types associated with this\n                module and their JSON schema.\n        mapping<modulename, spec_version> included_spec_version - names of \n                included modules associated with their versions.\n        string chsum - the md5 checksum of the object.",
            "items" : [ {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::List",
                "annotations" : { },
                "element_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "Login name of a KBase user account.",
                  "module" : "Workspace",
                  "name" : "username"
                }
              },
              "name" : "owners",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The version of a typespec.",
                "module" : "Workspace",
                "name" : "spec_version"
              },
              "name" : "ver",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A KBase Interface Definition Language (KIDL) typespec.",
                "module" : "Workspace",
                "name" : "typespec"
              },
              "name" : "spec",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "name" : "description",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Mapping",
                "annotations" : { },
                "key_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
                  "module" : "Workspace",
                  "name" : "type_string"
                },
                "value_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "The JSON Schema for a type.",
                  "module" : "Workspace",
                  "name" : "jsonschema"
                }
              },
              "name" : "types",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Mapping",
                "annotations" : { },
                "key_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "The module name of a KIDL typespec.",
                  "module" : "Workspace",
                  "name" : "modulename"
                },
                "value_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "int"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "The version of a typespec.",
                  "module" : "Workspace",
                  "name" : "spec_version"
                }
              },
              "name" : "included_spec_version",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "name" : "chsum",
              "nullable" : "0"
            } ],
            "module" : "Workspace",
            "name" : "ModuleInfo"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Information about a module.\n\n        list<username> owners - the owners of the module.\n        spec_version ver - the version of the module.\n        typespec spec - the typespec.\n        string description - the description of the module from the typespec.\n        mapping<type_string, jsonschema> types - the types associated with this\n                module and their JSON schema.\n        mapping<modulename, spec_version> included_spec_version - names of \n                included modules associated with their versions.\n        string chsum - the md5 checksum of the object.",
          "module" : "Workspace",
          "name" : "ModuleInfo"
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "Get JSON schema for a type.",
      "name" : "get_jsonschema",
      "parameters" : [ {
        "name" : "type",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
          "module" : "Workspace",
          "name" : "type_string"
        }
      } ],
      "return_type" : [ {
        "name" : "schema",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The JSON Schema for a type.",
          "module" : "Workspace",
          "name" : "jsonschema"
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "Translation from types qualified with MD5 to their semantic versions",
      "name" : "translate_from_MD5_types",
      "parameters" : [ {
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
            "module" : "Workspace",
            "name" : "type_string"
          }
        }
      } ],
      "return_type" : [ {
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Mapping",
          "annotations" : { },
          "key_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
            "module" : "Workspace",
            "name" : "type_string"
          },
          "value_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
              "module" : "Workspace",
              "name" : "type_string"
            }
          }
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "Translation from types qualified with semantic versions to their MD5'ed versions",
      "name" : "translate_to_MD5_types",
      "parameters" : [ {
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
            "module" : "Workspace",
            "name" : "type_string"
          }
        }
      } ],
      "return_type" : [ {
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Mapping",
          "annotations" : { },
          "key_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
            "module" : "Workspace",
            "name" : "type_string"
          },
          "value_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
            "module" : "Workspace",
            "name" : "type_string"
          }
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "required",
      "comment" : "The administration interface.",
      "name" : "administer",
      "parameters" : [ {
        "name" : "command",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
          "annotations" : { }
        }
      } ],
      "return_type" : [ {
        "name" : "response",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
          "annotations" : { }
        }
      } ]
    } ],
    "module_name" : "Workspace",
    "options" : [ ],
    "service_name" : "Workspace"
  }, [ ], {
    "CompileTypespecParams" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Parameters for the compile_typespec function.\n\n        Required arguments:\n        One of:\n        typespec spec - the new typespec to compile.\n        modulename mod - the module to recompile.\n        \n        Optional arguments:\n        boolean dryrun - Return, but do not save, the results of compiling the \n                spec. Default true. Set to false for making permanent changes.\n        list<typename> new_types - types in the spec to make available in the\n                workspace service. When compiling a spec for the first time, if\n                this argument is empty no types will be made available. Previously\n                available types remain so upon recompilation of a spec or\n                compilation of a new spec.\n        list<typename> remove_types - no longer make these types available in\n                the workspace service for the new version of the spec. This does\n                not remove versions of types previously compiled.\n        mapping<modulename, spec_version> dependencies - By default, the\n                latest released versions of spec dependencies will be included when\n                compiling a spec. Specific versions can be specified here.\n        spec_version prev_ver - the id of the previous version of the typespec.\n                An error will be thrown if this is set and prev_ver is not the\n                most recent version of the typespec. This prevents overwriting of\n                changes made since retrieving a spec and compiling an edited spec.\n                This argument is ignored if a modulename is passed.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A KBase Interface Definition Language (KIDL) typespec.",
            "module" : "Workspace",
            "name" : "typespec"
          },
          "name" : "spec",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The module name of a KIDL typespec.",
            "module" : "Workspace",
            "name" : "modulename"
          },
          "name" : "mod",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "The name of a type in a KIDL typespec module.",
              "module" : "Workspace",
              "name" : "typename"
            }
          },
          "name" : "new_types",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "The name of a type in a KIDL typespec module.",
              "module" : "Workspace",
              "name" : "typename"
            }
          },
          "name" : "remove_types",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Mapping",
            "annotations" : { },
            "key_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "The module name of a KIDL typespec.",
              "module" : "Workspace",
              "name" : "modulename"
            },
            "value_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "The version of a typespec.",
              "module" : "Workspace",
              "name" : "spec_version"
            }
          },
          "name" : "dependencies",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A boolean. 0 = false, other = true.",
            "module" : "Workspace",
            "name" : "boolean"
          },
          "name" : "dryrun",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The version of a typespec.",
            "module" : "Workspace",
            "name" : "spec_version"
          },
          "name" : "prev_ver",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "CompileTypespecParams"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Parameters for the compile_typespec function.\n\n        Required arguments:\n        One of:\n        typespec spec - the new typespec to compile.\n        modulename mod - the module to recompile.\n        \n        Optional arguments:\n        boolean dryrun - Return, but do not save, the results of compiling the \n                spec. Default true. Set to false for making permanent changes.\n        list<typename> new_types - types in the spec to make available in the\n                workspace service. When compiling a spec for the first time, if\n                this argument is empty no types will be made available. Previously\n                available types remain so upon recompilation of a spec or\n                compilation of a new spec.\n        list<typename> remove_types - no longer make these types available in\n                the workspace service for the new version of the spec. This does\n                not remove versions of types previously compiled.\n        mapping<modulename, spec_version> dependencies - By default, the\n                latest released versions of spec dependencies will be included when\n                compiling a spec. Specific versions can be specified here.\n        spec_version prev_ver - the id of the previous version of the typespec.\n                An error will be thrown if this is set and prev_ver is not the\n                most recent version of the typespec. This prevents overwriting of\n                changes made since retrieving a spec and compiling an edited spec.\n                This argument is ignored if a modulename is passed.",
      "module" : "Workspace",
      "name" : "CompileTypespecParams"
    },
    "CreateWorkspaceParams" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Input parameters for the \"create_workspace\" function.\n\n        Required arguments:\n        ws_name workspace - name of the workspace to be created.\n        \n        Optional arguments:\n        permission globalread - 'r' to set workspace globally readable,\n                default 'n'.\n        string description - A free-text description of the workspace, 1000\n                characters max. Longer strings will be mercilessly and brutally\n                truncated.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
            "module" : "Workspace",
            "name" : "ws_name"
          },
          "name" : "workspace",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Represents the permissions a user or users have to a workspace:\n\n        'a' - administrator. All operations allowed.\n        'w' - read/write.\n        'r' - read.\n        'n' - no permissions.",
            "module" : "Workspace",
            "name" : "permission"
          },
          "name" : "globalread",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "description",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "CreateWorkspaceParams"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Input parameters for the \"create_workspace\" function.\n\n        Required arguments:\n        ws_name workspace - name of the workspace to be created.\n        \n        Optional arguments:\n        permission globalread - 'r' to set workspace globally readable,\n                default 'n'.\n        string description - A free-text description of the workspace, 1000\n                characters max. Longer strings will be mercilessly and brutally\n                truncated.",
      "module" : "Workspace",
      "name" : "CreateWorkspaceParams"
    },
    "GetModuleInfoParams" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Parameters for the get_module_info function.\n\n        Required arguments:\n        modulename mod - the name of the module to retrieve.\n        \n        Optional arguments:\n        spec_version ver - the version of the module to retrieve. Defaults to\n                the latest version.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The module name of a KIDL typespec.",
            "module" : "Workspace",
            "name" : "modulename"
          },
          "name" : "mod",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The version of a typespec.",
            "module" : "Workspace",
            "name" : "spec_version"
          },
          "name" : "ver",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "GetModuleInfoParams"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Parameters for the get_module_info function.\n\n        Required arguments:\n        modulename mod - the name of the module to retrieve.\n        \n        Optional arguments:\n        spec_version ver - the version of the module to retrieve. Defaults to\n                the latest version.",
      "module" : "Workspace",
      "name" : "GetModuleInfoParams"
    },
    "ListModuleVersionsParams" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Parameters for the list_module_versions function.\n\n        Required arguments:\n        One of:\n        modulename mod - returns all versions of the module.\n        type_string type - returns all versions of the module associated with\n                the type.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The module name of a KIDL typespec.",
            "module" : "Workspace",
            "name" : "modulename"
          },
          "name" : "mod",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
            "module" : "Workspace",
            "name" : "type_string"
          },
          "name" : "type",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "ListModuleVersionsParams"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Parameters for the list_module_versions function.\n\n        Required arguments:\n        One of:\n        modulename mod - returns all versions of the module.\n        type_string type - returns all versions of the module associated with\n                the type.",
      "module" : "Workspace",
      "name" : "ListModuleVersionsParams"
    },
    "ListModulesParams" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Parameters for the list_modules() function.\n\n        Optional arguments:\n        username owner - only list modules owned by this user.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Login name of a KBase user account.",
            "module" : "Workspace",
            "name" : "username"
          },
          "name" : "owner",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "ListModulesParams"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Parameters for the list_modules() function.\n\n        Optional arguments:\n        username owner - only list modules owned by this user.",
      "module" : "Workspace",
      "name" : "ListModulesParams"
    },
    "ModuleInfo" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Information about a module.\n\n        list<username> owners - the owners of the module.\n        spec_version ver - the version of the module.\n        typespec spec - the typespec.\n        string description - the description of the module from the typespec.\n        mapping<type_string, jsonschema> types - the types associated with this\n                module and their JSON schema.\n        mapping<modulename, spec_version> included_spec_version - names of \n                included modules associated with their versions.\n        string chsum - the md5 checksum of the object.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "Login name of a KBase user account.",
              "module" : "Workspace",
              "name" : "username"
            }
          },
          "name" : "owners",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The version of a typespec.",
            "module" : "Workspace",
            "name" : "spec_version"
          },
          "name" : "ver",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A KBase Interface Definition Language (KIDL) typespec.",
            "module" : "Workspace",
            "name" : "typespec"
          },
          "name" : "spec",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "description",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Mapping",
            "annotations" : { },
            "key_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
              "module" : "Workspace",
              "name" : "type_string"
            },
            "value_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "The JSON Schema for a type.",
              "module" : "Workspace",
              "name" : "jsonschema"
            }
          },
          "name" : "types",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Mapping",
            "annotations" : { },
            "key_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "The module name of a KIDL typespec.",
              "module" : "Workspace",
              "name" : "modulename"
            },
            "value_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "The version of a typespec.",
              "module" : "Workspace",
              "name" : "spec_version"
            }
          },
          "name" : "included_spec_version",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "chsum",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "ModuleInfo"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Information about a module.\n\n        list<username> owners - the owners of the module.\n        spec_version ver - the version of the module.\n        typespec spec - the typespec.\n        string description - the description of the module from the typespec.\n        mapping<type_string, jsonschema> types - the types associated with this\n                module and their JSON schema.\n        mapping<modulename, spec_version> included_spec_version - names of \n                included modules associated with their versions.\n        string chsum - the md5 checksum of the object.",
      "module" : "Workspace",
      "name" : "ModuleInfo"
    },
    "ModuleVersions" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "A set of versions from a module.\n\n        modulename mod - the name of the module.\n        list<spec_version> - a set or subset of versions associated with the\n                module.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The module name of a KIDL typespec.",
            "module" : "Workspace",
            "name" : "modulename"
          },
          "name" : "mod",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "The version of a typespec.",
              "module" : "Workspace",
              "name" : "spec_version"
            }
          },
          "name" : "vers",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "ModuleVersions"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A set of versions from a module.\n\n        modulename mod - the name of the module.\n        list<spec_version> - a set or subset of versions associated with the\n                module.",
      "module" : "Workspace",
      "name" : "ModuleVersions"
    },
    "ObjectData" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "The data and supplemental info for an object.\n\n        UnspecifiedObject data - the object's data.\n        object_info_full info - information about the object.\n        list<ProvenanceAction> provenance - the object's provenance.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
            "annotations" : { }
          },
          "name" : "data",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Tuple",
              "annotations" : { },
              "comment" : "Information about an object, including user provided metadata.\n\n        obj_id objid - the numerical id of the object.\n        obj_name name - the name of the object.\n        type_string type - the type of the object.\n        timestamp save_date - the save date of the object.\n        obj_ver ver - the version of the object.\n        username created_by - the user that created the object.\n        ws_id wsid - the workspace containing the object.\n        string chsum - the md5 checksum of the object.\n        int size - the size of the object in bytes.\n        usermeta meta - arbitrary user-supplied metadata about\n                the object.",
              "element_names" : [ "objid", "name", "type", "save_date", "version", "created_by", "wsid", "chsum", "size", "meta" ],
              "element_types" : [ {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The unique, permanent numerical ID of an object.",
                "module" : "Workspace",
                "name" : "obj_id"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
                "module" : "Workspace",
                "name" : "obj_name"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
                "module" : "Workspace",
                "name" : "type_string"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
                "module" : "Workspace",
                "name" : "timestamp"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "Login name of a KBase user account.",
                "module" : "Workspace",
                "name" : "username"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "int"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The unique, permanent numerical ID of a workspace.",
                "module" : "Workspace",
                "name" : "ws_id"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Mapping",
                  "annotations" : { },
                  "key_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "value_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  }
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "User provided metadata about an object.\nArbitrary key-value pairs provided by the user.",
                "module" : "Workspace",
                "name" : "usermeta"
              } ],
              "name" : "object_info_full"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Information about an object, including user provided metadata.\n\n        obj_id objid - the numerical id of the object.\n        obj_name name - the name of the object.\n        type_string type - the type of the object.\n        timestamp save_date - the save date of the object.\n        obj_ver ver - the version of the object.\n        username created_by - the user that created the object.\n        ws_id wsid - the workspace containing the object.\n        string chsum - the md5 checksum of the object.\n        int size - the size of the object in bytes.\n        usermeta meta - arbitrary user-supplied metadata about\n                the object.",
            "module" : "Workspace",
            "name" : "object_info_full"
          },
          "name" : "info",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Struct",
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { }
                },
                "comment" : "A provenance action.\n\n        A provenance action is an action taken while transforming one data\n        object to another. There may be several provenance actions taken in\n        series. An action is typically running a script, running an api\n        command, etc. All of the following are optional, but more information\n        provided equates to better data provenance.\n        \n        resolved_ws_objects should never be set by the user; it is set by the\n        workspace service when returning data.\n        \n        The maximum size of the entire provenance object is 1MB.\n        \n        timestamp time - the time the action was started.\n        string service - the name of the service that performed this action.\n        int service_ver - the version of the service that performed this action.\n        string method - the method of the service that performed this action.\n        list<UnspecifiedObject> method_params - the parameters of the method\n                that performed this action. If an object in the parameters is a\n                workspace object, also put the object reference in the\n                input_ws_object list.\n        string script - the name of the script that performed this action.\n        int script_ver - the version of the script that performed this action.\n        string script_command_line - the command line provided to the script\n                that performed this action. If workspace objects were provided in\n                the command line, also put the object reference in the\n                input_ws_object list.\n        list<obj_ref> input_ws_objects - the workspace objects that\n                were used as input to this action; typically these will also be\n                present as parts of the method_params or the script_command_line\n                arguments.\n        list<obj_ref> resolved_ws_objects - the workspace objects ids from \n                input_ws_objects resolved to permanent workspace object references\n                by the workspace service.\n        list<string> intermediate_incoming - if the previous action produced \n                output that 1) was not stored in a referrable way, and 2) is\n                used as input for this action, provide it with an arbitrary and\n                unique ID here, in the order of the input arguments to this action.\n                These IDs can be used in the method_params argument.\n        list<string> intermediate_outgoing - if this action produced output\n                that 1) was not stored in a referrable way, and 2) is\n                used as input for the next action, provide it with an arbitrary and\n                unique ID here, in the order of the output values from this action.\n                These IDs can be used in the intermediate_incoming argument in the\n                next action.\n        string description - a free text description of this action.",
                "items" : [ {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Typedef",
                    "alias_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "string"
                    },
                    "annotations" : {
                      "metadata" : { },
                      "searchable_ws_subset" : { },
                      "unknown_annotations" : { }
                    },
                    "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
                    "module" : "Workspace",
                    "name" : "timestamp"
                  },
                  "name" : "time",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "service",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "service_ver",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "method",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
                      "annotations" : { }
                    }
                  },
                  "name" : "method_params",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "script",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "script_ver",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "script_command_line",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Typedef",
                      "alias_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Scalar",
                        "annotations" : { },
                        "scalar_type" : "string"
                      },
                      "annotations" : {
                        "metadata" : { },
                        "searchable_ws_subset" : { },
                        "unknown_annotations" : { }
                      },
                      "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
                      "module" : "Workspace",
                      "name" : "obj_ref"
                    }
                  },
                  "name" : "input_ws_objects",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Typedef",
                      "alias_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Scalar",
                        "annotations" : { },
                        "scalar_type" : "string"
                      },
                      "annotations" : {
                        "metadata" : { },
                        "searchable_ws_subset" : { },
                        "unknown_annotations" : { }
                      },
                      "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
                      "module" : "Workspace",
                      "name" : "obj_ref"
                    }
                  },
                  "name" : "resolved_ws_objects",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "string"
                    }
                  },
                  "name" : "intermediate_incoming",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "string"
                    }
                  },
                  "name" : "intermediate_outgoing",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "description",
                  "nullable" : "0"
                } ],
                "module" : "Workspace",
                "name" : "ProvenanceAction"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A provenance action.\n\n        A provenance action is an action taken while transforming one data\n        object to another. There may be several provenance actions taken in\n        series. An action is typically running a script, running an api\n        command, etc. All of the following are optional, but more information\n        provided equates to better data provenance.\n        \n        resolved_ws_objects should never be set by the user; it is set by the\n        workspace service when returning data.\n        \n        The maximum size of the entire provenance object is 1MB.\n        \n        timestamp time - the time the action was started.\n        string service - the name of the service that performed this action.\n        int service_ver - the version of the service that performed this action.\n        string method - the method of the service that performed this action.\n        list<UnspecifiedObject> method_params - the parameters of the method\n                that performed this action. If an object in the parameters is a\n                workspace object, also put the object reference in the\n                input_ws_object list.\n        string script - the name of the script that performed this action.\n        int script_ver - the version of the script that performed this action.\n        string script_command_line - the command line provided to the script\n                that performed this action. If workspace objects were provided in\n                the command line, also put the object reference in the\n                input_ws_object list.\n        list<obj_ref> input_ws_objects - the workspace objects that\n                were used as input to this action; typically these will also be\n                present as parts of the method_params or the script_command_line\n                arguments.\n        list<obj_ref> resolved_ws_objects - the workspace objects ids from \n                input_ws_objects resolved to permanent workspace object references\n                by the workspace service.\n        list<string> intermediate_incoming - if the previous action produced \n                output that 1) was not stored in a referrable way, and 2) is\n                used as input for this action, provide it with an arbitrary and\n                unique ID here, in the order of the input arguments to this action.\n                These IDs can be used in the method_params argument.\n        list<string> intermediate_outgoing - if this action produced output\n                that 1) was not stored in a referrable way, and 2) is\n                used as input for the next action, provide it with an arbitrary and\n                unique ID here, in the order of the output values from this action.\n                These IDs can be used in the intermediate_incoming argument in the\n                next action.\n        string description - a free text description of this action.",
              "module" : "Workspace",
              "name" : "ProvenanceAction"
            }
          },
          "name" : "provenance",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "ObjectData"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "The data and supplemental info for an object.\n\n        UnspecifiedObject data - the object's data.\n        object_info_full info - information about the object.\n        list<ProvenanceAction> provenance - the object's provenance.",
      "module" : "Workspace",
      "name" : "ObjectData"
    },
    "ObjectIdentity" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "An object identifier.\n\nSelect an object by either:\n        One, and only one, of the numerical id or name of the workspace,\n        where the name can also be a KBase ID including the numerical id,\n        e.g. kb|ws.35.\n                ws_id wsid - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID\n                        in KBase format, e.g. kb|ws.78.\n        AND \n        One, and only one, of the numerical id or name of the object.\n                obj_id objid- the numerical ID of the object.\n                obj_name name - name of the object.\n        OPTIONALLY\n                obj_ver ver - the version of the object.\nOR an object reference string:\n        obj_ref ref - an object reference string.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
            "module" : "Workspace",
            "name" : "ws_name"
          },
          "name" : "workspace",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The unique, permanent numerical ID of a workspace.",
            "module" : "Workspace",
            "name" : "ws_id"
          },
          "name" : "wsid",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
            "module" : "Workspace",
            "name" : "obj_name"
          },
          "name" : "name",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The unique, permanent numerical ID of an object.",
            "module" : "Workspace",
            "name" : "obj_id"
          },
          "name" : "objid",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "An object version.\nThe version of the object, starting at 1.",
            "module" : "Workspace",
            "name" : "obj_ver"
          },
          "name" : "ver",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
            "module" : "Workspace",
            "name" : "obj_ref"
          },
          "name" : "ref",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "ObjectIdentity"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "An object identifier.\n\nSelect an object by either:\n        One, and only one, of the numerical id or name of the workspace,\n        where the name can also be a KBase ID including the numerical id,\n        e.g. kb|ws.35.\n                ws_id wsid - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID\n                        in KBase format, e.g. kb|ws.78.\n        AND \n        One, and only one, of the numerical id or name of the object.\n                obj_id objid- the numerical ID of the object.\n                obj_name name - name of the object.\n        OPTIONALLY\n                obj_ver ver - the version of the object.\nOR an object reference string:\n        obj_ref ref - an object reference string.",
      "module" : "Workspace",
      "name" : "ObjectIdentity"
    },
    "ObjectSaveData" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "An object and associated data required for saving.\n\n        Required arguments:\n        type_string type - the type of the object. Omit the version information\n                to use the latest version.\n        UnspecifiedObject data - the object data.\n        \n        Optional arguments:\n        One of an object name or id. If no name or id is provided the name\n                will be set to 'auto' with the object id appended as a string,\n                possibly with -\\d+ appended if that object id already exists as a\n                name.\n        obj_name name - the name of the object.\n        obj_id objid - the id of the object to save over.\n        usermeta meta - arbitrary user-supplied metadata for the object,\n                not to exceed 16kb.\n        list<ProvenanceAction> provenance - provenance data for the object.\n        boolean hidden - true if this object should not be listed when listing\n                workspace objects.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
            "module" : "Workspace",
            "name" : "type_string"
          },
          "name" : "type",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
            "annotations" : { }
          },
          "name" : "data",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
            "module" : "Workspace",
            "name" : "obj_name"
          },
          "name" : "name",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The unique, permanent numerical ID of an object.",
            "module" : "Workspace",
            "name" : "obj_id"
          },
          "name" : "objid",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Mapping",
              "annotations" : { },
              "key_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "value_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              }
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "User provided metadata about an object.\nArbitrary key-value pairs provided by the user.",
            "module" : "Workspace",
            "name" : "usermeta"
          },
          "name" : "meta",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Struct",
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { }
                },
                "comment" : "A provenance action.\n\n        A provenance action is an action taken while transforming one data\n        object to another. There may be several provenance actions taken in\n        series. An action is typically running a script, running an api\n        command, etc. All of the following are optional, but more information\n        provided equates to better data provenance.\n        \n        resolved_ws_objects should never be set by the user; it is set by the\n        workspace service when returning data.\n        \n        The maximum size of the entire provenance object is 1MB.\n        \n        timestamp time - the time the action was started.\n        string service - the name of the service that performed this action.\n        int service_ver - the version of the service that performed this action.\n        string method - the method of the service that performed this action.\n        list<UnspecifiedObject> method_params - the parameters of the method\n                that performed this action. If an object in the parameters is a\n                workspace object, also put the object reference in the\n                input_ws_object list.\n        string script - the name of the script that performed this action.\n        int script_ver - the version of the script that performed this action.\n        string script_command_line - the command line provided to the script\n                that performed this action. If workspace objects were provided in\n                the command line, also put the object reference in the\n                input_ws_object list.\n        list<obj_ref> input_ws_objects - the workspace objects that\n                were used as input to this action; typically these will also be\n                present as parts of the method_params or the script_command_line\n                arguments.\n        list<obj_ref> resolved_ws_objects - the workspace objects ids from \n                input_ws_objects resolved to permanent workspace object references\n                by the workspace service.\n        list<string> intermediate_incoming - if the previous action produced \n                output that 1) was not stored in a referrable way, and 2) is\n                used as input for this action, provide it with an arbitrary and\n                unique ID here, in the order of the input arguments to this action.\n                These IDs can be used in the method_params argument.\n        list<string> intermediate_outgoing - if this action produced output\n                that 1) was not stored in a referrable way, and 2) is\n                used as input for the next action, provide it with an arbitrary and\n                unique ID here, in the order of the output values from this action.\n                These IDs can be used in the intermediate_incoming argument in the\n                next action.\n        string description - a free text description of this action.",
                "items" : [ {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Typedef",
                    "alias_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "string"
                    },
                    "annotations" : {
                      "metadata" : { },
                      "searchable_ws_subset" : { },
                      "unknown_annotations" : { }
                    },
                    "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
                    "module" : "Workspace",
                    "name" : "timestamp"
                  },
                  "name" : "time",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "service",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "service_ver",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "method",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
                      "annotations" : { }
                    }
                  },
                  "name" : "method_params",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "script",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "script_ver",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "script_command_line",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Typedef",
                      "alias_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Scalar",
                        "annotations" : { },
                        "scalar_type" : "string"
                      },
                      "annotations" : {
                        "metadata" : { },
                        "searchable_ws_subset" : { },
                        "unknown_annotations" : { }
                      },
                      "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
                      "module" : "Workspace",
                      "name" : "obj_ref"
                    }
                  },
                  "name" : "input_ws_objects",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Typedef",
                      "alias_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Scalar",
                        "annotations" : { },
                        "scalar_type" : "string"
                      },
                      "annotations" : {
                        "metadata" : { },
                        "searchable_ws_subset" : { },
                        "unknown_annotations" : { }
                      },
                      "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
                      "module" : "Workspace",
                      "name" : "obj_ref"
                    }
                  },
                  "name" : "resolved_ws_objects",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "string"
                    }
                  },
                  "name" : "intermediate_incoming",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "string"
                    }
                  },
                  "name" : "intermediate_outgoing",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "description",
                  "nullable" : "0"
                } ],
                "module" : "Workspace",
                "name" : "ProvenanceAction"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A provenance action.\n\n        A provenance action is an action taken while transforming one data\n        object to another. There may be several provenance actions taken in\n        series. An action is typically running a script, running an api\n        command, etc. All of the following are optional, but more information\n        provided equates to better data provenance.\n        \n        resolved_ws_objects should never be set by the user; it is set by the\n        workspace service when returning data.\n        \n        The maximum size of the entire provenance object is 1MB.\n        \n        timestamp time - the time the action was started.\n        string service - the name of the service that performed this action.\n        int service_ver - the version of the service that performed this action.\n        string method - the method of the service that performed this action.\n        list<UnspecifiedObject> method_params - the parameters of the method\n                that performed this action. If an object in the parameters is a\n                workspace object, also put the object reference in the\n                input_ws_object list.\n        string script - the name of the script that performed this action.\n        int script_ver - the version of the script that performed this action.\n        string script_command_line - the command line provided to the script\n                that performed this action. If workspace objects were provided in\n                the command line, also put the object reference in the\n                input_ws_object list.\n        list<obj_ref> input_ws_objects - the workspace objects that\n                were used as input to this action; typically these will also be\n                present as parts of the method_params or the script_command_line\n                arguments.\n        list<obj_ref> resolved_ws_objects - the workspace objects ids from \n                input_ws_objects resolved to permanent workspace object references\n                by the workspace service.\n        list<string> intermediate_incoming - if the previous action produced \n                output that 1) was not stored in a referrable way, and 2) is\n                used as input for this action, provide it with an arbitrary and\n                unique ID here, in the order of the input arguments to this action.\n                These IDs can be used in the method_params argument.\n        list<string> intermediate_outgoing - if this action produced output\n                that 1) was not stored in a referrable way, and 2) is\n                used as input for the next action, provide it with an arbitrary and\n                unique ID here, in the order of the output values from this action.\n                These IDs can be used in the intermediate_incoming argument in the\n                next action.\n        string description - a free text description of this action.",
              "module" : "Workspace",
              "name" : "ProvenanceAction"
            }
          },
          "name" : "provenance",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A boolean. 0 = false, other = true.",
            "module" : "Workspace",
            "name" : "boolean"
          },
          "name" : "hidden",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "ObjectSaveData"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "An object and associated data required for saving.\n\n        Required arguments:\n        type_string type - the type of the object. Omit the version information\n                to use the latest version.\n        UnspecifiedObject data - the object data.\n        \n        Optional arguments:\n        One of an object name or id. If no name or id is provided the name\n                will be set to 'auto' with the object id appended as a string,\n                possibly with -\\d+ appended if that object id already exists as a\n                name.\n        obj_name name - the name of the object.\n        obj_id objid - the id of the object to save over.\n        usermeta meta - arbitrary user-supplied metadata for the object,\n                not to exceed 16kb.\n        list<ProvenanceAction> provenance - provenance data for the object.\n        boolean hidden - true if this object should not be listed when listing\n                workspace objects.",
      "module" : "Workspace",
      "name" : "ObjectSaveData"
    },
    "ProvenanceAction" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "A provenance action.\n\n        A provenance action is an action taken while transforming one data\n        object to another. There may be several provenance actions taken in\n        series. An action is typically running a script, running an api\n        command, etc. All of the following are optional, but more information\n        provided equates to better data provenance.\n        \n        resolved_ws_objects should never be set by the user; it is set by the\n        workspace service when returning data.\n        \n        The maximum size of the entire provenance object is 1MB.\n        \n        timestamp time - the time the action was started.\n        string service - the name of the service that performed this action.\n        int service_ver - the version of the service that performed this action.\n        string method - the method of the service that performed this action.\n        list<UnspecifiedObject> method_params - the parameters of the method\n                that performed this action. If an object in the parameters is a\n                workspace object, also put the object reference in the\n                input_ws_object list.\n        string script - the name of the script that performed this action.\n        int script_ver - the version of the script that performed this action.\n        string script_command_line - the command line provided to the script\n                that performed this action. If workspace objects were provided in\n                the command line, also put the object reference in the\n                input_ws_object list.\n        list<obj_ref> input_ws_objects - the workspace objects that\n                were used as input to this action; typically these will also be\n                present as parts of the method_params or the script_command_line\n                arguments.\n        list<obj_ref> resolved_ws_objects - the workspace objects ids from \n                input_ws_objects resolved to permanent workspace object references\n                by the workspace service.\n        list<string> intermediate_incoming - if the previous action produced \n                output that 1) was not stored in a referrable way, and 2) is\n                used as input for this action, provide it with an arbitrary and\n                unique ID here, in the order of the input arguments to this action.\n                These IDs can be used in the method_params argument.\n        list<string> intermediate_outgoing - if this action produced output\n                that 1) was not stored in a referrable way, and 2) is\n                used as input for the next action, provide it with an arbitrary and\n                unique ID here, in the order of the output values from this action.\n                These IDs can be used in the intermediate_incoming argument in the\n                next action.\n        string description - a free text description of this action.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
            "module" : "Workspace",
            "name" : "timestamp"
          },
          "name" : "time",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "service",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "service_ver",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "method",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
              "annotations" : { }
            }
          },
          "name" : "method_params",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "script",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "script_ver",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "script_command_line",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
              "module" : "Workspace",
              "name" : "obj_ref"
            }
          },
          "name" : "input_ws_objects",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
              "module" : "Workspace",
              "name" : "obj_ref"
            }
          },
          "name" : "resolved_ws_objects",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            }
          },
          "name" : "intermediate_incoming",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            }
          },
          "name" : "intermediate_outgoing",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "description",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "ProvenanceAction"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A provenance action.\n\n        A provenance action is an action taken while transforming one data\n        object to another. There may be several provenance actions taken in\n        series. An action is typically running a script, running an api\n        command, etc. All of the following are optional, but more information\n        provided equates to better data provenance.\n        \n        resolved_ws_objects should never be set by the user; it is set by the\n        workspace service when returning data.\n        \n        The maximum size of the entire provenance object is 1MB.\n        \n        timestamp time - the time the action was started.\n        string service - the name of the service that performed this action.\n        int service_ver - the version of the service that performed this action.\n        string method - the method of the service that performed this action.\n        list<UnspecifiedObject> method_params - the parameters of the method\n                that performed this action. If an object in the parameters is a\n                workspace object, also put the object reference in the\n                input_ws_object list.\n        string script - the name of the script that performed this action.\n        int script_ver - the version of the script that performed this action.\n        string script_command_line - the command line provided to the script\n                that performed this action. If workspace objects were provided in\n                the command line, also put the object reference in the\n                input_ws_object list.\n        list<obj_ref> input_ws_objects - the workspace objects that\n                were used as input to this action; typically these will also be\n                present as parts of the method_params or the script_command_line\n                arguments.\n        list<obj_ref> resolved_ws_objects - the workspace objects ids from \n                input_ws_objects resolved to permanent workspace object references\n                by the workspace service.\n        list<string> intermediate_incoming - if the previous action produced \n                output that 1) was not stored in a referrable way, and 2) is\n                used as input for this action, provide it with an arbitrary and\n                unique ID here, in the order of the input arguments to this action.\n                These IDs can be used in the method_params argument.\n        list<string> intermediate_outgoing - if this action produced output\n                that 1) was not stored in a referrable way, and 2) is\n                used as input for the next action, provide it with an arbitrary and\n                unique ID here, in the order of the output values from this action.\n                These IDs can be used in the intermediate_incoming argument in the\n                next action.\n        string description - a free text description of this action.",
      "module" : "Workspace",
      "name" : "ProvenanceAction"
    },
    "SaveObjectsParams" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Input parameters for the \"save_objects\" function.\n\n        One, and only one, of the following is required:\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace or the workspace ID in KBase\n                format, e.g. kb|ws.78.\n        \n        Required arguments:\n        list<ObjectSaveData> objects - the objects to save.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
            "module" : "Workspace",
            "name" : "ws_name"
          },
          "name" : "workspace",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The unique, permanent numerical ID of a workspace.",
            "module" : "Workspace",
            "name" : "ws_id"
          },
          "name" : "id",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Struct",
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { }
                },
                "comment" : "An object and associated data required for saving.\n\n        Required arguments:\n        type_string type - the type of the object. Omit the version information\n                to use the latest version.\n        UnspecifiedObject data - the object data.\n        \n        Optional arguments:\n        One of an object name or id. If no name or id is provided the name\n                will be set to 'auto' with the object id appended as a string,\n                possibly with -\\d+ appended if that object id already exists as a\n                name.\n        obj_name name - the name of the object.\n        obj_id objid - the id of the object to save over.\n        usermeta meta - arbitrary user-supplied metadata for the object,\n                not to exceed 16kb.\n        list<ProvenanceAction> provenance - provenance data for the object.\n        boolean hidden - true if this object should not be listed when listing\n                workspace objects.",
                "items" : [ {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Typedef",
                    "alias_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "string"
                    },
                    "annotations" : {
                      "metadata" : { },
                      "searchable_ws_subset" : { },
                      "unknown_annotations" : { }
                    },
                    "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
                    "module" : "Workspace",
                    "name" : "type_string"
                  },
                  "name" : "type",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
                    "annotations" : { }
                  },
                  "name" : "data",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Typedef",
                    "alias_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "string"
                    },
                    "annotations" : {
                      "metadata" : { },
                      "searchable_ws_subset" : { },
                      "unknown_annotations" : { }
                    },
                    "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
                    "module" : "Workspace",
                    "name" : "obj_name"
                  },
                  "name" : "name",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Typedef",
                    "alias_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "int"
                    },
                    "annotations" : {
                      "metadata" : { },
                      "searchable_ws_subset" : { },
                      "unknown_annotations" : { }
                    },
                    "comment" : "The unique, permanent numerical ID of an object.",
                    "module" : "Workspace",
                    "name" : "obj_id"
                  },
                  "name" : "objid",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Typedef",
                    "alias_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Mapping",
                      "annotations" : { },
                      "key_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Scalar",
                        "annotations" : { },
                        "scalar_type" : "string"
                      },
                      "value_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Scalar",
                        "annotations" : { },
                        "scalar_type" : "string"
                      }
                    },
                    "annotations" : {
                      "metadata" : { },
                      "searchable_ws_subset" : { },
                      "unknown_annotations" : { }
                    },
                    "comment" : "User provided metadata about an object.\nArbitrary key-value pairs provided by the user.",
                    "module" : "Workspace",
                    "name" : "usermeta"
                  },
                  "name" : "meta",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Typedef",
                      "alias_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Struct",
                        "annotations" : {
                          "metadata" : { },
                          "searchable_ws_subset" : { }
                        },
                        "comment" : "A provenance action.\n\n        A provenance action is an action taken while transforming one data\n        object to another. There may be several provenance actions taken in\n        series. An action is typically running a script, running an api\n        command, etc. All of the following are optional, but more information\n        provided equates to better data provenance.\n        \n        resolved_ws_objects should never be set by the user; it is set by the\n        workspace service when returning data.\n        \n        The maximum size of the entire provenance object is 1MB.\n        \n        timestamp time - the time the action was started.\n        string service - the name of the service that performed this action.\n        int service_ver - the version of the service that performed this action.\n        string method - the method of the service that performed this action.\n        list<UnspecifiedObject> method_params - the parameters of the method\n                that performed this action. If an object in the parameters is a\n                workspace object, also put the object reference in the\n                input_ws_object list.\n        string script - the name of the script that performed this action.\n        int script_ver - the version of the script that performed this action.\n        string script_command_line - the command line provided to the script\n                that performed this action. If workspace objects were provided in\n                the command line, also put the object reference in the\n                input_ws_object list.\n        list<obj_ref> input_ws_objects - the workspace objects that\n                were used as input to this action; typically these will also be\n                present as parts of the method_params or the script_command_line\n                arguments.\n        list<obj_ref> resolved_ws_objects - the workspace objects ids from \n                input_ws_objects resolved to permanent workspace object references\n                by the workspace service.\n        list<string> intermediate_incoming - if the previous action produced \n                output that 1) was not stored in a referrable way, and 2) is\n                used as input for this action, provide it with an arbitrary and\n                unique ID here, in the order of the input arguments to this action.\n                These IDs can be used in the method_params argument.\n        list<string> intermediate_outgoing - if this action produced output\n                that 1) was not stored in a referrable way, and 2) is\n                used as input for the next action, provide it with an arbitrary and\n                unique ID here, in the order of the output values from this action.\n                These IDs can be used in the intermediate_incoming argument in the\n                next action.\n        string description - a free text description of this action.",
                        "items" : [ {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Typedef",
                            "alias_type" : {
                              "!" : "Bio::KBase::KIDL::KBT::Scalar",
                              "annotations" : { },
                              "scalar_type" : "string"
                            },
                            "annotations" : {
                              "metadata" : { },
                              "searchable_ws_subset" : { },
                              "unknown_annotations" : { }
                            },
                            "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
                            "module" : "Workspace",
                            "name" : "timestamp"
                          },
                          "name" : "time",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "string"
                          },
                          "name" : "service",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "string"
                          },
                          "name" : "service_ver",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "string"
                          },
                          "name" : "method",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::List",
                            "annotations" : { },
                            "element_type" : {
                              "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
                              "annotations" : { }
                            }
                          },
                          "name" : "method_params",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "string"
                          },
                          "name" : "script",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "string"
                          },
                          "name" : "script_ver",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "string"
                          },
                          "name" : "script_command_line",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::List",
                            "annotations" : { },
                            "element_type" : {
                              "!" : "Bio::KBase::KIDL::KBT::Typedef",
                              "alias_type" : {
                                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                                "annotations" : { },
                                "scalar_type" : "string"
                              },
                              "annotations" : {
                                "metadata" : { },
                                "searchable_ws_subset" : { },
                                "unknown_annotations" : { }
                              },
                              "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
                              "module" : "Workspace",
                              "name" : "obj_ref"
                            }
                          },
                          "name" : "input_ws_objects",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::List",
                            "annotations" : { },
                            "element_type" : {
                              "!" : "Bio::KBase::KIDL::KBT::Typedef",
                              "alias_type" : {
                                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                                "annotations" : { },
                                "scalar_type" : "string"
                              },
                              "annotations" : {
                                "metadata" : { },
                                "searchable_ws_subset" : { },
                                "unknown_annotations" : { }
                              },
                              "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
                              "module" : "Workspace",
                              "name" : "obj_ref"
                            }
                          },
                          "name" : "resolved_ws_objects",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::List",
                            "annotations" : { },
                            "element_type" : {
                              "!" : "Bio::KBase::KIDL::KBT::Scalar",
                              "annotations" : { },
                              "scalar_type" : "string"
                            }
                          },
                          "name" : "intermediate_incoming",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::List",
                            "annotations" : { },
                            "element_type" : {
                              "!" : "Bio::KBase::KIDL::KBT::Scalar",
                              "annotations" : { },
                              "scalar_type" : "string"
                            }
                          },
                          "name" : "intermediate_outgoing",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "string"
                          },
                          "name" : "description",
                          "nullable" : "0"
                        } ],
                        "module" : "Workspace",
                        "name" : "ProvenanceAction"
                      },
                      "annotations" : {
                        "metadata" : { },
                        "searchable_ws_subset" : { },
                        "unknown_annotations" : { }
                      },
                      "comment" : "A provenance action.\n\n        A provenance action is an action taken while transforming one data\n        object to another. There may be several provenance actions taken in\n        series. An action is typically running a script, running an api\n        command, etc. All of the following are optional, but more information\n        provided equates to better data provenance.\n        \n        resolved_ws_objects should never be set by the user; it is set by the\n        workspace service when returning data.\n        \n        The maximum size of the entire provenance object is 1MB.\n        \n        timestamp time - the time the action was started.\n        string service - the name of the service that performed this action.\n        int service_ver - the version of the service that performed this action.\n        string method - the method of the service that performed this action.\n        list<UnspecifiedObject> method_params - the parameters of the method\n                that performed this action. If an object in the parameters is a\n                workspace object, also put the object reference in the\n                input_ws_object list.\n        string script - the name of the script that performed this action.\n        int script_ver - the version of the script that performed this action.\n        string script_command_line - the command line provided to the script\n                that performed this action. If workspace objects were provided in\n                the command line, also put the object reference in the\n                input_ws_object list.\n        list<obj_ref> input_ws_objects - the workspace objects that\n                were used as input to this action; typically these will also be\n                present as parts of the method_params or the script_command_line\n                arguments.\n        list<obj_ref> resolved_ws_objects - the workspace objects ids from \n                input_ws_objects resolved to permanent workspace object references\n                by the workspace service.\n        list<string> intermediate_incoming - if the previous action produced \n                output that 1) was not stored in a referrable way, and 2) is\n                used as input for this action, provide it with an arbitrary and\n                unique ID here, in the order of the input arguments to this action.\n                These IDs can be used in the method_params argument.\n        list<string> intermediate_outgoing - if this action produced output\n                that 1) was not stored in a referrable way, and 2) is\n                used as input for the next action, provide it with an arbitrary and\n                unique ID here, in the order of the output values from this action.\n                These IDs can be used in the intermediate_incoming argument in the\n                next action.\n        string description - a free text description of this action.",
                      "module" : "Workspace",
                      "name" : "ProvenanceAction"
                    }
                  },
                  "name" : "provenance",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Typedef",
                    "alias_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "int"
                    },
                    "annotations" : {
                      "metadata" : { },
                      "searchable_ws_subset" : { },
                      "unknown_annotations" : { }
                    },
                    "comment" : "A boolean. 0 = false, other = true.",
                    "module" : "Workspace",
                    "name" : "boolean"
                  },
                  "name" : "hidden",
                  "nullable" : "0"
                } ],
                "module" : "Workspace",
                "name" : "ObjectSaveData"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "An object and associated data required for saving.\n\n        Required arguments:\n        type_string type - the type of the object. Omit the version information\n                to use the latest version.\n        UnspecifiedObject data - the object data.\n        \n        Optional arguments:\n        One of an object name or id. If no name or id is provided the name\n                will be set to 'auto' with the object id appended as a string,\n                possibly with -\\d+ appended if that object id already exists as a\n                name.\n        obj_name name - the name of the object.\n        obj_id objid - the id of the object to save over.\n        usermeta meta - arbitrary user-supplied metadata for the object,\n                not to exceed 16kb.\n        list<ProvenanceAction> provenance - provenance data for the object.\n        boolean hidden - true if this object should not be listed when listing\n                workspace objects.",
              "module" : "Workspace",
              "name" : "ObjectSaveData"
            }
          },
          "name" : "objects",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "SaveObjectsParams"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Input parameters for the \"save_objects\" function.\n\n        One, and only one, of the following is required:\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace or the workspace ID in KBase\n                format, e.g. kb|ws.78.\n        \n        Required arguments:\n        list<ObjectSaveData> objects - the objects to save.",
      "module" : "Workspace",
      "name" : "SaveObjectsParams"
    },
    "SetPermissionsParams" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Input parameters for the \"set_permissions\" function.\n\n        One, and only one, of the following is required:\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace or the workspace ID in KBase\n                format, e.g. kb|ws.78.\n        \n        Required arguments:\n        permission new_permission - the permission to assign to the users.\n        list<username> users - the users whose permissions will be altered.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
            "module" : "Workspace",
            "name" : "ws_name"
          },
          "name" : "workspace",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The unique, permanent numerical ID of a workspace.",
            "module" : "Workspace",
            "name" : "ws_id"
          },
          "name" : "id",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Represents the permissions a user or users have to a workspace:\n\n        'a' - administrator. All operations allowed.\n        'w' - read/write.\n        'r' - read.\n        'n' - no permissions.",
            "module" : "Workspace",
            "name" : "permission"
          },
          "name" : "new_permission",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "Login name of a KBase user account.",
              "module" : "Workspace",
              "name" : "username"
            }
          },
          "name" : "users",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "SetPermissionsParams"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Input parameters for the \"set_permissions\" function.\n\n        One, and only one, of the following is required:\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace or the workspace ID in KBase\n                format, e.g. kb|ws.78.\n        \n        Required arguments:\n        permission new_permission - the permission to assign to the users.\n        list<username> users - the users whose permissions will be altered.",
      "module" : "Workspace",
      "name" : "SetPermissionsParams"
    },
    "UnspecifiedObject" : {
      "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
      "annotations" : { }
    },
    "WorkspaceIdentity" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "A workspace identifier.\n\n                Select a workspace by one, and only one, of the numerical id or name,\n                        where the name can also be a KBase ID including the numerical id,\n                        e.g. kb|ws.35.\n                ws_id id - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID in KBase\n                        format, e.g. kb|ws.78.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
            "module" : "Workspace",
            "name" : "ws_name"
          },
          "name" : "workspace",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The unique, permanent numerical ID of a workspace.",
            "module" : "Workspace",
            "name" : "ws_id"
          },
          "name" : "id",
          "nullable" : "0"
        } ],
        "module" : "Workspace",
        "name" : "WorkspaceIdentity"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A workspace identifier.\n\n                Select a workspace by one, and only one, of the numerical id or name,\n                        where the name can also be a KBase ID including the numerical id,\n                        e.g. kb|ws.35.\n                ws_id id - the numerical ID of the workspace.\n                ws_name workspace - name of the workspace or the workspace ID in KBase\n                        format, e.g. kb|ws.78.",
      "module" : "Workspace",
      "name" : "WorkspaceIdentity"
    },
    "boolean" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A boolean. 0 = false, other = true.",
      "module" : "Workspace",
      "name" : "boolean"
    },
    "float" : {
      "!" : "Bio::KBase::KIDL::KBT::Scalar",
      "annotations" : { },
      "scalar_type" : "float"
    },
    "int" : {
      "!" : "Bio::KBase::KIDL::KBT::Scalar",
      "annotations" : { },
      "scalar_type" : "int"
    },
    "jsonschema" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "The JSON Schema for a type.",
      "module" : "Workspace",
      "name" : "jsonschema"
    },
    "modulename" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "The module name of a KIDL typespec.",
      "module" : "Workspace",
      "name" : "modulename"
    },
    "obj_id" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "The unique, permanent numerical ID of an object.",
      "module" : "Workspace",
      "name" : "obj_id"
    },
    "obj_name" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
      "module" : "Workspace",
      "name" : "obj_name"
    },
    "obj_ref" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A string that uniquely identifies an object in the workspace service.\n\n        There are two ways to uniquely identify an object in one string:\n        \"[ws_name or id]/[obj_name or id]/[obj_ver]\" - for example,\n                \"MyFirstWorkspace/MyFirstObject/3\" would identify the third version\n                of an object called MyFirstObject in the workspace called\n                MyFirstWorkspace. 42/Panic/1 would identify the first version of\n                the object name Panic in workspace 42. Towel/1/6 would identify\n                the 6th version of the object with id 1 in the Towel workspace. \n        \"kb|ws.[ws_id].obj.[obj_id].ver.[obj_ver]\" - for example, \n                \"kb|ws.23.obj.567.ver.2\" would identify the second version of an\n                object with id 567 in a workspace with id 23.\n        In all cases, if the version number is omitted, the latest version of\n        the object is assumed.",
      "module" : "Workspace",
      "name" : "obj_ref"
    },
    "obj_ver" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "An object version.\nThe version of the object, starting at 1.",
      "module" : "Workspace",
      "name" : "obj_ver"
    },
    "object_info" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Tuple",
        "annotations" : { },
        "comment" : "Information about an object.\n\n        obj_id objid - the numerical id of the object.\n        obj_name name - the name of the object.\n        type_string type - the type of the object.\n        timestamp save_date - the save date of the object.\n        obj_ver ver - the version of the object.\n        username created_by - the user that created the object.\n        ws_id wsid - the workspace containing the object.\n        string chsum - the md5 checksum of the object.\n        int size - the size of the object in bytes.",
        "element_names" : [ "objid", "name", "type", "save_date", "version", "created_by", "wsid", "chsum", "size" ],
        "element_types" : [ {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "int"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The unique, permanent numerical ID of an object.",
          "module" : "Workspace",
          "name" : "obj_id"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
          "module" : "Workspace",
          "name" : "obj_name"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
          "module" : "Workspace",
          "name" : "type_string"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
          "module" : "Workspace",
          "name" : "timestamp"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Login name of a KBase user account.",
          "module" : "Workspace",
          "name" : "username"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "int"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The unique, permanent numerical ID of a workspace.",
          "module" : "Workspace",
          "name" : "ws_id"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        } ],
        "name" : "object_info"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Information about an object.\n\n        obj_id objid - the numerical id of the object.\n        obj_name name - the name of the object.\n        type_string type - the type of the object.\n        timestamp save_date - the save date of the object.\n        obj_ver ver - the version of the object.\n        username created_by - the user that created the object.\n        ws_id wsid - the workspace containing the object.\n        string chsum - the md5 checksum of the object.\n        int size - the size of the object in bytes.",
      "module" : "Workspace",
      "name" : "object_info"
    },
    "object_info_full" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Tuple",
        "annotations" : { },
        "comment" : "Information about an object, including user provided metadata.\n\n        obj_id objid - the numerical id of the object.\n        obj_name name - the name of the object.\n        type_string type - the type of the object.\n        timestamp save_date - the save date of the object.\n        obj_ver ver - the version of the object.\n        username created_by - the user that created the object.\n        ws_id wsid - the workspace containing the object.\n        string chsum - the md5 checksum of the object.\n        int size - the size of the object in bytes.\n        usermeta meta - arbitrary user-supplied metadata about\n                the object.",
        "element_names" : [ "objid", "name", "type", "save_date", "version", "created_by", "wsid", "chsum", "size", "meta" ],
        "element_types" : [ {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "int"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The unique, permanent numerical ID of an object.",
          "module" : "Workspace",
          "name" : "obj_id"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A string used as a name for an object.\nAny string consisting of alphanumeric characters and the characters\n        |._- that is not an integer is acceptable.",
          "module" : "Workspace",
          "name" : "obj_name"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
          "module" : "Workspace",
          "name" : "type_string"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
          "module" : "Workspace",
          "name" : "timestamp"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Login name of a KBase user account.",
          "module" : "Workspace",
          "name" : "username"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "int"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The unique, permanent numerical ID of a workspace.",
          "module" : "Workspace",
          "name" : "ws_id"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "int"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Mapping",
            "annotations" : { },
            "key_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "value_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            }
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "User provided metadata about an object.\nArbitrary key-value pairs provided by the user.",
          "module" : "Workspace",
          "name" : "usermeta"
        } ],
        "name" : "object_info_full"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Information about an object, including user provided metadata.\n\n        obj_id objid - the numerical id of the object.\n        obj_name name - the name of the object.\n        type_string type - the type of the object.\n        timestamp save_date - the save date of the object.\n        obj_ver ver - the version of the object.\n        username created_by - the user that created the object.\n        ws_id wsid - the workspace containing the object.\n        string chsum - the md5 checksum of the object.\n        int size - the size of the object in bytes.\n        usermeta meta - arbitrary user-supplied metadata about\n                the object.",
      "module" : "Workspace",
      "name" : "object_info_full"
    },
    "permission" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Represents the permissions a user or users have to a workspace:\n\n        'a' - administrator. All operations allowed.\n        'w' - read/write.\n        'r' - read.\n        'n' - no permissions.",
      "module" : "Workspace",
      "name" : "permission"
    },
    "spec_version" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "The version of a typespec.",
      "module" : "Workspace",
      "name" : "spec_version"
    },
    "string" : {
      "!" : "Bio::KBase::KIDL::KBT::Scalar",
      "annotations" : { },
      "scalar_type" : "string"
    },
    "timestamp" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
      "module" : "Workspace",
      "name" : "timestamp"
    },
    "type_string" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A type string.\nSpecifies the type and its version in a single string in the format\n[module].[typename]-[major].[minor]:\n\nmodule - a string. The module name of the typespec containing the type.\ntypename - a string. The name of the type as assigned by the typedef\n        statement.\nmajor - an integer. The major version of the type. A change in the\n        major version implies the type has changed in a non-backwards\n        compatible way.\nminor - an integer. The minor version of the type. A change in the\n        minor version implies that the type has changed in a way that is\n        backwards compatible with previous type definitions.\n\nIn many cases, the major and minor versions are optional, and if not\nprovided the most recent version will be used.\n\nExample: MyModule.MyType-3.1",
      "module" : "Workspace",
      "name" : "type_string"
    },
    "typename" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "The name of a type in a KIDL typespec module.",
      "module" : "Workspace",
      "name" : "typename"
    },
    "typespec" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A KBase Interface Definition Language (KIDL) typespec.",
      "module" : "Workspace",
      "name" : "typespec"
    },
    "usermeta" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Mapping",
        "annotations" : { },
        "key_type" : {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        },
        "value_type" : {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        }
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "User provided metadata about an object.\nArbitrary key-value pairs provided by the user.",
      "module" : "Workspace",
      "name" : "usermeta"
    },
    "username" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Login name of a KBase user account.",
      "module" : "Workspace",
      "name" : "username"
    },
    "workspace_info" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Tuple",
        "annotations" : { },
        "comment" : "Information about a workspace.\n\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace.\n        username owner - name of the user who owns (e.g. created) this workspace.\n        timestamp moddate - date when the workspace was last modified.\n        permission user_permission - permissions for the authenticated user of\n                this workspace.\n        permission globalread - whether this workspace is globally readable.",
        "element_names" : [ "id", "workspace", "owner", "moddate", "user_permission", "globalread" ],
        "element_types" : [ {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "int"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The unique, permanent numerical ID of a workspace.",
          "module" : "Workspace",
          "name" : "ws_id"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
          "module" : "Workspace",
          "name" : "ws_name"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Login name of a KBase user account.",
          "module" : "Workspace",
          "name" : "username"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is the difference\nin time to UTC in the format +/-HHMM, eg:\n        2012-12-17T23:24:06-0500 (EST time)\n        2013-04-03T08:56:32+0000 (UTC time)",
          "module" : "Workspace",
          "name" : "timestamp"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Represents the permissions a user or users have to a workspace:\n\n        'a' - administrator. All operations allowed.\n        'w' - read/write.\n        'r' - read.\n        'n' - no permissions.",
          "module" : "Workspace",
          "name" : "permission"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Represents the permissions a user or users have to a workspace:\n\n        'a' - administrator. All operations allowed.\n        'w' - read/write.\n        'r' - read.\n        'n' - no permissions.",
          "module" : "Workspace",
          "name" : "permission"
        } ],
        "name" : "workspace_info"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Information about a workspace.\n\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace.\n        username owner - name of the user who owns (e.g. created) this workspace.\n        timestamp moddate - date when the workspace was last modified.\n        permission user_permission - permissions for the authenticated user of\n                this workspace.\n        permission globalread - whether this workspace is globally readable.",
      "module" : "Workspace",
      "name" : "workspace_info"
    },
    "ws_id" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "The unique, permanent numerical ID of a workspace.",
      "module" : "Workspace",
      "name" : "ws_id"
    },
    "ws_name" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A string used as a name for a workspace.\nAny string consisting of alphanumeric characters and \"_\" that is not an\ninteger is acceptable.",
      "module" : "Workspace",
      "name" : "ws_name"
    }
  } ] ]
}