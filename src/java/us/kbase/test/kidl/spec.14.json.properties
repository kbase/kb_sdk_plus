{
  "PROM" : [ [ {
    "!" : "Bio::KBase::KIDL::KBT::DefineModule",
    "annotations" : {
      "unknown_annotations" : { }
    },
    "comment" : "PROM (Probabilistic Regulation of Metabolism) Service\n\nThis service enables the creation of FBA model constraints objects that are based on regulatory\nnetworks and expression data, as described in [1].  Constraints are constructed by either automatically\naggregating necessary information from the CDS (if available for a given genome), or by adding user\nexpression and regulatory data.  PROM provides the capability to simulate transcription factor knockout\nphenotypes.  PROM model constraint objects are created in a user's workspace, and can be operated on and\nused in conjunction with an FBA model with the KBase FBA Modeling Service.\n\nNote: for compatibility with the workspace service and legacy reasons, auth tokens are passed in as\nparameters rather than handled automatically by the auto-generated client/server infrastructure.  This\nwill be fixed soon in one of the next builds.\n\n[1] Chandrasekarana S. and Price ND. Probabilistic integrative modeling of genome-scale metabolic and\nregulatory networks in Escherichia coli and Mycobacterium tuberculosis. PNAS (2010) 107:17845-50.\n\nAUTHORS:\nMichael Sneddon (mwsneddon@lbl.gov)\nMatt DeJongh (dejongh@hope.edu)\n\ncreated 11/27/2012 - msneddon",
    "module_components" : [ {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "indicates true or false values, false <= 0, true >=1",
      "module" : "PROM",
      "name" : "bool"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A KBase ID is a string starting with the characters \"kb|\".  KBase IDs are typed. The types are\ndesignated using a short string.  KBase IDs may be hierarchical.  See the standard KBase documentation\nfor more information.",
      "module" : "PROM",
      "name" : "kbase_id"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Typedef",
        "alias_type" : {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        },
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { },
          "unknown_annotations" : { }
        },
        "comment" : "A KBase ID is a string starting with the characters \"kb|\".  KBase IDs are typed. The types are\ndesignated using a short string.  KBase IDs may be hierarchical.  See the standard KBase documentation\nfor more information.",
        "module" : "PROM",
        "name" : "kbase_id"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A KBase ID for a genome feature",
      "module" : "PROM",
      "name" : "feature_id"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Typedef",
        "alias_type" : {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        },
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { },
          "unknown_annotations" : { }
        },
        "comment" : "A KBase ID is a string starting with the characters \"kb|\".  KBase IDs are typed. The types are\ndesignated using a short string.  KBase IDs may be hierarchical.  See the standard KBase documentation\nfor more information.",
        "module" : "PROM",
        "name" : "kbase_id"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A KBase ID for a genome",
      "module" : "PROM",
      "name" : "genome_id"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "The name of a workspace",
      "module" : "PROM",
      "name" : "workspace_name"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A workspace ID for a gene expression data object.",
      "module" : "PROM",
      "name" : "boolean_gene_expression_data_id"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A workspace id for a set of expression data on/off calls",
      "module" : "PROM",
      "name" : "expression_data_collection_id"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A workspace ID for a regulatory network object",
      "module" : "PROM",
      "name" : "regulatory_network_id"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Status message used by this service to provide information on the final status of a step",
      "module" : "PROM",
      "name" : "status"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A workspace ID for the prom constraints object in a user's workpace",
      "module" : "PROM",
      "name" : "prom_constraints_id"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A workspace ID for a genome object in a user's workspace, used to link a prom_constraint Object to a genome",
      "module" : "PROM",
      "name" : "genome_object_id"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Specifies the source of a data object, e.g. KBase or MicrobesOnline",
      "module" : "PROM",
      "name" : "source"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Specifies the ID of the data object in the source",
      "module" : "PROM",
      "name" : "source_id"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "The string representation of the bearer token needed to authenticate on the workspace service, this will eventually\nbe eliminated when this service is updated to use the auto type-compiler auth functionality",
      "module" : "PROM",
      "name" : "auth_token"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Indicates on/off state of a gene, 1=on, -1=off, 0=unknown",
      "module" : "PROM",
      "name" : "on_off_state"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "A simplified representation of gene expression data under a SINGLE condition. Note that the condition\ninformation is not explicitly tracked here. also NOTE: this data object should be migrated to the Expression\nData service, and simply imported here.\n\n    mapping<feature_id,on_off_state> on_off_call - a mapping of genome features to on/off calls under the given\n                                           condition (true=on, false=off).  It is therefore assumed that\n                                           the features are protein coding genes.\n    source expression_data_source        - the source of this collection of expression data\n    source_id expression_data_source_id  - the id of this data object in the workspace",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A workspace ID for a gene expression data object.",
            "module" : "PROM",
            "name" : "boolean_gene_expression_data_id"
          },
          "name" : "id",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Mapping",
            "annotations" : { },
            "key_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A KBase ID is a string starting with the characters \"kb|\".  KBase IDs are typed. The types are\ndesignated using a short string.  KBase IDs may be hierarchical.  See the standard KBase documentation\nfor more information.",
                "module" : "PROM",
                "name" : "kbase_id"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A KBase ID for a genome feature",
              "module" : "PROM",
              "name" : "feature_id"
            },
            "value_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "Indicates on/off state of a gene, 1=on, -1=off, 0=unknown",
              "module" : "PROM",
              "name" : "on_off_state"
            }
          },
          "name" : "on_off_call",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Specifies the source of a data object, e.g. KBase or MicrobesOnline",
            "module" : "PROM",
            "name" : "source"
          },
          "name" : "expression_data_source",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Specifies the source of a data object, e.g. KBase or MicrobesOnline",
            "module" : "PROM",
            "name" : "source"
          },
          "name" : "expression_data_source_id",
          "nullable" : "0"
        } ],
        "module" : "PROM",
        "name" : "boolean_gene_expression_data"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A simplified representation of gene expression data under a SINGLE condition. Note that the condition\ninformation is not explicitly tracked here. also NOTE: this data object should be migrated to the Expression\nData service, and simply imported here.\n\n    mapping<feature_id,on_off_state> on_off_call - a mapping of genome features to on/off calls under the given\n                                           condition (true=on, false=off).  It is therefore assumed that\n                                           the features are protein coding genes.\n    source expression_data_source        - the source of this collection of expression data\n    source_id expression_data_source_id  - the id of this data object in the workspace",
      "module" : "PROM",
      "name" : "boolean_gene_expression_data"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "A collection of gene expression data for a single genome under a range of conditions.  This data is returned\nas a list of IDs for boolean gene expression data objects in the workspace.  This is a simple object for creating\na PROM Model. NOTE: this data object should be migrated to the Expression Data service, and simply imported here.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A workspace id for a set of expression data on/off calls",
            "module" : "PROM",
            "name" : "expression_data_collection_id"
          },
          "name" : "id",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A workspace ID for a gene expression data object.",
              "module" : "PROM",
              "name" : "boolean_gene_expression_data_id"
            }
          },
          "name" : "expression_data_ids",
          "nullable" : "0"
        } ],
        "module" : "PROM",
        "name" : "boolean_gene_expression_data_collection"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A collection of gene expression data for a single genome under a range of conditions.  This data is returned\nas a list of IDs for boolean gene expression data objects in the workspace.  This is a simple object for creating\na PROM Model. NOTE: this data object should be migrated to the Expression Data service, and simply imported here.",
      "module" : "PROM",
      "name" : "boolean_gene_expression_data_collection"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "A simplified representation of a regulatory interaction that also stores the probability of the interaction\n(specificially, as the probability the target is on given that the regulator is off), which is necessary for PROM\nto construct FBA constraints.  NOTE: this data object should be migrated to the Regulation service, and simply\nimported here. NOTE 2: feature_id may actually be a more general ID, as models can potentially be loaded that\nare not in the kbase namespace. In this case everything, including expression data and the fba model must be in\nthe same namespace.\n\n    feature_id TF            - the genome feature that is the regulator\n    feature_id target        - the genome feature that is the target of regulation",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A KBase ID is a string starting with the characters \"kb|\".  KBase IDs are typed. The types are\ndesignated using a short string.  KBase IDs may be hierarchical.  See the standard KBase documentation\nfor more information.",
              "module" : "PROM",
              "name" : "kbase_id"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A KBase ID for a genome feature",
            "module" : "PROM",
            "name" : "feature_id"
          },
          "name" : "TF",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A KBase ID is a string starting with the characters \"kb|\".  KBase IDs are typed. The types are\ndesignated using a short string.  KBase IDs may be hierarchical.  See the standard KBase documentation\nfor more information.",
              "module" : "PROM",
              "name" : "kbase_id"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A KBase ID for a genome feature",
            "module" : "PROM",
            "name" : "feature_id"
          },
          "name" : "target",
          "nullable" : "0"
        } ],
        "module" : "PROM",
        "name" : "regulatory_interaction"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A simplified representation of a regulatory interaction that also stores the probability of the interaction\n(specificially, as the probability the target is on given that the regulator is off), which is necessary for PROM\nto construct FBA constraints.  NOTE: this data object should be migrated to the Regulation service, and simply\nimported here. NOTE 2: feature_id may actually be a more general ID, as models can potentially be loaded that\nare not in the kbase namespace. In this case everything, including expression data and the fba model must be in\nthe same namespace.\n\n    feature_id TF            - the genome feature that is the regulator\n    feature_id target        - the genome feature that is the target of regulation",
      "module" : "PROM",
      "name" : "regulatory_interaction"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::List",
        "annotations" : { },
        "element_type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Struct",
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { }
            },
            "comment" : "A simplified representation of a regulatory interaction that also stores the probability of the interaction\n(specificially, as the probability the target is on given that the regulator is off), which is necessary for PROM\nto construct FBA constraints.  NOTE: this data object should be migrated to the Regulation service, and simply\nimported here. NOTE 2: feature_id may actually be a more general ID, as models can potentially be loaded that\nare not in the kbase namespace. In this case everything, including expression data and the fba model must be in\nthe same namespace.\n\n    feature_id TF            - the genome feature that is the regulator\n    feature_id target        - the genome feature that is the target of regulation",
            "items" : [ {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A KBase ID is a string starting with the characters \"kb|\".  KBase IDs are typed. The types are\ndesignated using a short string.  KBase IDs may be hierarchical.  See the standard KBase documentation\nfor more information.",
                  "module" : "PROM",
                  "name" : "kbase_id"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A KBase ID for a genome feature",
                "module" : "PROM",
                "name" : "feature_id"
              },
              "name" : "TF",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A KBase ID is a string starting with the characters \"kb|\".  KBase IDs are typed. The types are\ndesignated using a short string.  KBase IDs may be hierarchical.  See the standard KBase documentation\nfor more information.",
                  "module" : "PROM",
                  "name" : "kbase_id"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A KBase ID for a genome feature",
                "module" : "PROM",
                "name" : "feature_id"
              },
              "name" : "target",
              "nullable" : "0"
            } ],
            "module" : "PROM",
            "name" : "regulatory_interaction"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A simplified representation of a regulatory interaction that also stores the probability of the interaction\n(specificially, as the probability the target is on given that the regulator is off), which is necessary for PROM\nto construct FBA constraints.  NOTE: this data object should be migrated to the Regulation service, and simply\nimported here. NOTE 2: feature_id may actually be a more general ID, as models can potentially be loaded that\nare not in the kbase namespace. In this case everything, including expression data and the fba model must be in\nthe same namespace.\n\n    feature_id TF            - the genome feature that is the regulator\n    feature_id target        - the genome feature that is the target of regulation",
          "module" : "PROM",
          "name" : "regulatory_interaction"
        }
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A collection of regulatory interactions that together form a regulatory network. This is an extremely\nsimplified data object for use in constructing a PROM model.  NOTE: this data object should be migrated to\nthe Regulation service, and simply imported here.",
      "module" : "PROM",
      "name" : "regulatory_network"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Object required by the prom_constraints object which defines the computed probabilities for a target gene.  The\nTF regulating this target can be deduced based on the tfMap object.\n\n    string target_uuid        - id of the target gene in the annotation object namespace\n    float tfOffProbability    - PROB(target=ON|TF=OFF)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is not expressed, as defined in Candrasekarana &\n                                Price, PNAS 2010 and used to predict cumulative effects of multiple\n                                regulatory interactions with a single target.  Set to null or empty if\n                                this probability has not been calculated yet.\n    float probTTonGivenTFon   - PROB(target=ON|TF=ON)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is expressed.    Set to null or empty if\n                                this probability has not been calculated yet.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "target_uuid",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "float"
          },
          "name" : "tfOnProbability",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "float"
          },
          "name" : "tfOffProbability",
          "nullable" : "0"
        } ],
        "module" : "PROM",
        "name" : "regulatory_target"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Object required by the prom_constraints object which defines the computed probabilities for a target gene.  The\nTF regulating this target can be deduced based on the tfMap object.\n\n    string target_uuid        - id of the target gene in the annotation object namespace\n    float tfOffProbability    - PROB(target=ON|TF=OFF)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is not expressed, as defined in Candrasekarana &\n                                Price, PNAS 2010 and used to predict cumulative effects of multiple\n                                regulatory interactions with a single target.  Set to null or empty if\n                                this probability has not been calculated yet.\n    float probTTonGivenTFon   - PROB(target=ON|TF=ON)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is expressed.    Set to null or empty if\n                                this probability has not been calculated yet.",
      "module" : "PROM",
      "name" : "regulatory_target"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Object required by the prom_constraints object, this maps a transcription factor by its uuid (in some\nannotation namespace) to a group of regulatory target genes.\n\n    string transcriptionFactor_uuid                       - id of the TF in the annotation object namespace\n    list <regulatory_target> transcriptionFactorMapTarget - collection of regulatory target genes for the TF\n                                                            along with associated joint probabilities for each\n                                                            target to be on given that the TF is on or off.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "transcriptionFactor_uuid",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Struct",
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { }
                },
                "comment" : "Object required by the prom_constraints object which defines the computed probabilities for a target gene.  The\nTF regulating this target can be deduced based on the tfMap object.\n\n    string target_uuid        - id of the target gene in the annotation object namespace\n    float tfOffProbability    - PROB(target=ON|TF=OFF)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is not expressed, as defined in Candrasekarana &\n                                Price, PNAS 2010 and used to predict cumulative effects of multiple\n                                regulatory interactions with a single target.  Set to null or empty if\n                                this probability has not been calculated yet.\n    float probTTonGivenTFon   - PROB(target=ON|TF=ON)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is expressed.    Set to null or empty if\n                                this probability has not been calculated yet.",
                "items" : [ {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "target_uuid",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "float"
                  },
                  "name" : "tfOnProbability",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "float"
                  },
                  "name" : "tfOffProbability",
                  "nullable" : "0"
                } ],
                "module" : "PROM",
                "name" : "regulatory_target"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "Object required by the prom_constraints object which defines the computed probabilities for a target gene.  The\nTF regulating this target can be deduced based on the tfMap object.\n\n    string target_uuid        - id of the target gene in the annotation object namespace\n    float tfOffProbability    - PROB(target=ON|TF=OFF)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is not expressed, as defined in Candrasekarana &\n                                Price, PNAS 2010 and used to predict cumulative effects of multiple\n                                regulatory interactions with a single target.  Set to null or empty if\n                                this probability has not been calculated yet.\n    float probTTonGivenTFon   - PROB(target=ON|TF=ON)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is expressed.    Set to null or empty if\n                                this probability has not been calculated yet.",
              "module" : "PROM",
              "name" : "regulatory_target"
            }
          },
          "name" : "transcriptionFactorMapTargets",
          "nullable" : "0"
        } ],
        "module" : "PROM",
        "name" : "tfMap"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Object required by the prom_constraints object, this maps a transcription factor by its uuid (in some\nannotation namespace) to a group of regulatory target genes.\n\n    string transcriptionFactor_uuid                       - id of the TF in the annotation object namespace\n    list <regulatory_target> transcriptionFactorMapTarget - collection of regulatory target genes for the TF\n                                                            along with associated joint probabilities for each\n                                                            target to be on given that the TF is on or off.",
      "module" : "PROM",
      "name" : "tfMap"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "the ID of the genome annotation object kept for reference in the prom_constraints object",
      "module" : "PROM",
      "name" : "annotation_uuid"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "An object that encapsulates the information necessary to apply PROM-based constraints to an FBA model. This\nincludes a regulatory network consisting of a set of regulatory interactions (implied by the set of tfMap\nobjects) and interaction probabilities as defined in each regulatory_target object.  A link the the annotation\nobject is required in order to properly link to an FBA model object.  A reference to the expression_data_collection\nused to compute the interaction probabilities is provided for future reference.\n\n    prom_constraints_id id                                         - the id of this prom_constraints object in a\n                                                                    workspace\n    annotation_uuid annotation_uuid                               - the id of the annotation object in the workspace\n                                                                    which specfies how TFs and targets are named\n    list <tfMap> transcriptionFactorMaps                          - the list of tfMaps which specifies both the\n                                                                    regulatory network and interaction probabilities\n                                                                    between TF and target genes\n    expression_data_collection_id expression_data_collection_id   - the id of the expresion_data_collection object in\n                                                                    the workspace which was used to compute the\n                                                                    regulatory interaction probabilities",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A workspace ID for the prom constraints object in a user's workpace",
            "module" : "PROM",
            "name" : "prom_constraints_id"
          },
          "name" : "id",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "the ID of the genome annotation object kept for reference in the prom_constraints object",
            "module" : "PROM",
            "name" : "annotation_uuid"
          },
          "name" : "annotation_uuid",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Struct",
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { }
                },
                "comment" : "Object required by the prom_constraints object, this maps a transcription factor by its uuid (in some\nannotation namespace) to a group of regulatory target genes.\n\n    string transcriptionFactor_uuid                       - id of the TF in the annotation object namespace\n    list <regulatory_target> transcriptionFactorMapTarget - collection of regulatory target genes for the TF\n                                                            along with associated joint probabilities for each\n                                                            target to be on given that the TF is on or off.",
                "items" : [ {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "transcriptionFactor_uuid",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Typedef",
                      "alias_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Struct",
                        "annotations" : {
                          "metadata" : { },
                          "searchable_ws_subset" : { }
                        },
                        "comment" : "Object required by the prom_constraints object which defines the computed probabilities for a target gene.  The\nTF regulating this target can be deduced based on the tfMap object.\n\n    string target_uuid        - id of the target gene in the annotation object namespace\n    float tfOffProbability    - PROB(target=ON|TF=OFF)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is not expressed, as defined in Candrasekarana &\n                                Price, PNAS 2010 and used to predict cumulative effects of multiple\n                                regulatory interactions with a single target.  Set to null or empty if\n                                this probability has not been calculated yet.\n    float probTTonGivenTFon   - PROB(target=ON|TF=ON)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is expressed.    Set to null or empty if\n                                this probability has not been calculated yet.",
                        "items" : [ {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "string"
                          },
                          "name" : "target_uuid",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "float"
                          },
                          "name" : "tfOnProbability",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "float"
                          },
                          "name" : "tfOffProbability",
                          "nullable" : "0"
                        } ],
                        "module" : "PROM",
                        "name" : "regulatory_target"
                      },
                      "annotations" : {
                        "metadata" : { },
                        "searchable_ws_subset" : { },
                        "unknown_annotations" : { }
                      },
                      "comment" : "Object required by the prom_constraints object which defines the computed probabilities for a target gene.  The\nTF regulating this target can be deduced based on the tfMap object.\n\n    string target_uuid        - id of the target gene in the annotation object namespace\n    float tfOffProbability    - PROB(target=ON|TF=OFF)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is not expressed, as defined in Candrasekarana &\n                                Price, PNAS 2010 and used to predict cumulative effects of multiple\n                                regulatory interactions with a single target.  Set to null or empty if\n                                this probability has not been calculated yet.\n    float probTTonGivenTFon   - PROB(target=ON|TF=ON)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is expressed.    Set to null or empty if\n                                this probability has not been calculated yet.",
                      "module" : "PROM",
                      "name" : "regulatory_target"
                    }
                  },
                  "name" : "transcriptionFactorMapTargets",
                  "nullable" : "0"
                } ],
                "module" : "PROM",
                "name" : "tfMap"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "Object required by the prom_constraints object, this maps a transcription factor by its uuid (in some\nannotation namespace) to a group of regulatory target genes.\n\n    string transcriptionFactor_uuid                       - id of the TF in the annotation object namespace\n    list <regulatory_target> transcriptionFactorMapTarget - collection of regulatory target genes for the TF\n                                                            along with associated joint probabilities for each\n                                                            target to be on given that the TF is on or off.",
              "module" : "PROM",
              "name" : "tfMap"
            }
          },
          "name" : "transcriptionFactorMaps",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A workspace id for a set of expression data on/off calls",
            "module" : "PROM",
            "name" : "expression_data_collection_id"
          },
          "name" : "expression_data_collection_id",
          "nullable" : "0"
        } ],
        "module" : "PROM",
        "name" : "prom_contstraint"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "An object that encapsulates the information necessary to apply PROM-based constraints to an FBA model. This\nincludes a regulatory network consisting of a set of regulatory interactions (implied by the set of tfMap\nobjects) and interaction probabilities as defined in each regulatory_target object.  A link the the annotation\nobject is required in order to properly link to an FBA model object.  A reference to the expression_data_collection\nused to compute the interaction probabilities is provided for future reference.\n\n    prom_constraints_id id                                         - the id of this prom_constraints object in a\n                                                                    workspace\n    annotation_uuid annotation_uuid                               - the id of the annotation object in the workspace\n                                                                    which specfies how TFs and targets are named\n    list <tfMap> transcriptionFactorMaps                          - the list of tfMaps which specifies both the\n                                                                    regulatory network and interaction probabilities\n                                                                    between TF and target genes\n    expression_data_collection_id expression_data_collection_id   - the id of the expresion_data_collection object in\n                                                                    the workspace which was used to compute the\n                                                                    regulatory interaction probabilities",
      "module" : "PROM",
      "name" : "prom_contstraint"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "This method fetches all gene expression data available in the CDS that is associated with the given genome id.  It then\nconstructs an expression_data_collection object in the specified workspace.  The method returns the ID of the expression\ndata collection in the workspace, along with a status message that provides details on what was retrieved and if anything\nfailed.  If the method does fail, or if there is no data for the given genome, then no expression data collection is\ncreated and no ID is returned.\n\nNote 1: this method currently can take a long time to complete if there are many expression data sets in the CDS\nNote 2: the current implementation relies on on/off calls stored in the CDM (correct as of 1/2013).  This will almost\ncertainly change, at which point logic for making on/off calls will be required as input\nNote 3: this method should be migrated to the expression service, which currently does not exist\nNote 4: this method should use the type compiler auth, but for simplicity  we now just pass an auth token directly.",
      "name" : "get_expression_data_by_genome",
      "parameters" : [ {
        "name" : "genome_id",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A KBase ID is a string starting with the characters \"kb|\".  KBase IDs are typed. The types are\ndesignated using a short string.  KBase IDs may be hierarchical.  See the standard KBase documentation\nfor more information.",
            "module" : "PROM",
            "name" : "kbase_id"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A KBase ID for a genome",
          "module" : "PROM",
          "name" : "genome_id"
        }
      }, {
        "name" : "workspace_name",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The name of a workspace",
          "module" : "PROM",
          "name" : "workspace_name"
        }
      }, {
        "name" : "token",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The string representation of the bearer token needed to authenticate on the workspace service, this will eventually\nbe eliminated when this service is updated to use the auto type-compiler auth functionality",
          "module" : "PROM",
          "name" : "auth_token"
        }
      } ],
      "return_type" : [ {
        "name" : "status",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Status message used by this service to provide information on the final status of a step",
          "module" : "PROM",
          "name" : "status"
        }
      }, {
        "name" : "expression_data_collection_id",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A workspace id for a set of expression data on/off calls",
          "module" : "PROM",
          "name" : "expression_data_collection_id"
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "This method creates a new, empty, expression data collection in the specified workspace. If the method was successful,\nthe ID of the expression data set will be returned.  The method also returns a status message providing additional\ndetails of the steps that occured or a message that indicates what failed.  If the method fails, no expression\ndata ID is returned.",
      "name" : "create_expression_data_collection",
      "parameters" : [ {
        "name" : "workspace_name",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The name of a workspace",
          "module" : "PROM",
          "name" : "workspace_name"
        }
      }, {
        "name" : "token",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The string representation of the bearer token needed to authenticate on the workspace service, this will eventually\nbe eliminated when this service is updated to use the auto type-compiler auth functionality",
          "module" : "PROM",
          "name" : "auth_token"
        }
      } ],
      "return_type" : [ {
        "name" : "status",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Status message used by this service to provide information on the final status of a step",
          "module" : "PROM",
          "name" : "status"
        }
      }, {
        "name" : "expression_data_collection_id",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A workspace id for a set of expression data on/off calls",
          "module" : "PROM",
          "name" : "expression_data_collection_id"
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "This method provides a way to attach a set of boolean expression data to an expression data collection object created\nin the current workspace.  Data collections can thus be composed of both CDS data and user data in this way.  The method\nreturns a status message providing additional details of the steps that occured or a message that indicates what failed.\nIf the method fails, then all updates to the expression_data_collection are not made, although some of the boolean gene\nexpression data may have been created in the workspace (see status message for IDs of the new expession data objects).\n\nNote: when defining expression data, the id field must be explicitly defined.  This will be the ID used to save the expression\ndata in the workspace.  If expression data with that ID already exists, this method will overwrite that data and you will\nhave to use the workspace service revert method to undo the change.",
      "name" : "add_expression_data_to_collection",
      "parameters" : [ {
        "name" : "expression_data",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Struct",
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { }
              },
              "comment" : "A simplified representation of gene expression data under a SINGLE condition. Note that the condition\ninformation is not explicitly tracked here. also NOTE: this data object should be migrated to the Expression\nData service, and simply imported here.\n\n    mapping<feature_id,on_off_state> on_off_call - a mapping of genome features to on/off calls under the given\n                                           condition (true=on, false=off).  It is therefore assumed that\n                                           the features are protein coding genes.\n    source expression_data_source        - the source of this collection of expression data\n    source_id expression_data_source_id  - the id of this data object in the workspace",
              "items" : [ {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A workspace ID for a gene expression data object.",
                  "module" : "PROM",
                  "name" : "boolean_gene_expression_data_id"
                },
                "name" : "id",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Mapping",
                  "annotations" : { },
                  "key_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Typedef",
                    "alias_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Typedef",
                      "alias_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Scalar",
                        "annotations" : { },
                        "scalar_type" : "string"
                      },
                      "annotations" : {
                        "metadata" : { },
                        "searchable_ws_subset" : { },
                        "unknown_annotations" : { }
                      },
                      "comment" : "A KBase ID is a string starting with the characters \"kb|\".  KBase IDs are typed. The types are\ndesignated using a short string.  KBase IDs may be hierarchical.  See the standard KBase documentation\nfor more information.",
                      "module" : "PROM",
                      "name" : "kbase_id"
                    },
                    "annotations" : {
                      "metadata" : { },
                      "searchable_ws_subset" : { },
                      "unknown_annotations" : { }
                    },
                    "comment" : "A KBase ID for a genome feature",
                    "module" : "PROM",
                    "name" : "feature_id"
                  },
                  "value_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Typedef",
                    "alias_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Scalar",
                      "annotations" : { },
                      "scalar_type" : "int"
                    },
                    "annotations" : {
                      "metadata" : { },
                      "searchable_ws_subset" : { },
                      "unknown_annotations" : { }
                    },
                    "comment" : "Indicates on/off state of a gene, 1=on, -1=off, 0=unknown",
                    "module" : "PROM",
                    "name" : "on_off_state"
                  }
                },
                "name" : "on_off_call",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "Specifies the source of a data object, e.g. KBase or MicrobesOnline",
                  "module" : "PROM",
                  "name" : "source"
                },
                "name" : "expression_data_source",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "Specifies the source of a data object, e.g. KBase or MicrobesOnline",
                  "module" : "PROM",
                  "name" : "source"
                },
                "name" : "expression_data_source_id",
                "nullable" : "0"
              } ],
              "module" : "PROM",
              "name" : "boolean_gene_expression_data"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A simplified representation of gene expression data under a SINGLE condition. Note that the condition\ninformation is not explicitly tracked here. also NOTE: this data object should be migrated to the Expression\nData service, and simply imported here.\n\n    mapping<feature_id,on_off_state> on_off_call - a mapping of genome features to on/off calls under the given\n                                           condition (true=on, false=off).  It is therefore assumed that\n                                           the features are protein coding genes.\n    source expression_data_source        - the source of this collection of expression data\n    source_id expression_data_source_id  - the id of this data object in the workspace",
            "module" : "PROM",
            "name" : "boolean_gene_expression_data"
          }
        }
      }, {
        "name" : "expression_data_collecion_id",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A workspace id for a set of expression data on/off calls",
          "module" : "PROM",
          "name" : "expression_data_collection_id"
        }
      }, {
        "name" : "workspace_name",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The name of a workspace",
          "module" : "PROM",
          "name" : "workspace_name"
        }
      }, {
        "name" : "token",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The string representation of the bearer token needed to authenticate on the workspace service, this will eventually\nbe eliminated when this service is updated to use the auto type-compiler auth functionality",
          "module" : "PROM",
          "name" : "auth_token"
        }
      } ],
      "return_type" : [ {
        "name" : "status",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Status message used by this service to provide information on the final status of a step",
          "module" : "PROM",
          "name" : "status"
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "Maps the expression data collection stored in a workspace in one genome namespace to an alternate genome namespace.  This is useful,\nfor instance, if expression data is available for one genome, but you intend to use it for a related genome or a genome with different\ngene calls.  If a gene in the original expression data cannot be found in the translation mapping, then it is ignored and left as is\nso that the number of features in the expression data set is not altered.  NOTE!: this is different from the default behavior of\nchange_regulatory_network_namespace, which will drop all genes that are not found in the mapping.  If successful, this method\nreturns the expression collection ID of the newly created expression data colleion.  This method also returns a status message indicating\nwhat happened or what went wrong.\n\nThe mapping<string,string> new_features_names should be defined so that existing IDs are the key and the replacement IDs are the\nvalues stored.",
      "name" : "change_expression_data_namespace",
      "parameters" : [ {
        "name" : "expression_data_collection_id",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A workspace id for a set of expression data on/off calls",
          "module" : "PROM",
          "name" : "expression_data_collection_id"
        }
      }, {
        "name" : "new_feature_names",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Mapping",
          "annotations" : { },
          "key_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "value_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          }
        }
      }, {
        "name" : "workspace_name",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The name of a workspace",
          "module" : "PROM",
          "name" : "workspace_name"
        }
      }, {
        "name" : "token",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The string representation of the bearer token needed to authenticate on the workspace service, this will eventually\nbe eliminated when this service is updated to use the auto type-compiler auth functionality",
          "module" : "PROM",
          "name" : "auth_token"
        }
      } ],
      "return_type" : [ {
        "name" : "status",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Status message used by this service to provide information on the final status of a step",
          "module" : "PROM",
          "name" : "status"
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "This method fetches a regulatory network from the regulation service that is associated with the given genome id.  If there\nare multiple regulome models available for the given genome, then the model with the most regulons is selected.  The method\nthen constructs a regulatory network object in the specified workspace.  The method returns the ID of the regulatory network\nin the workspace, along with a status message that provides details on what was retrieved and if anything failed.  If the\nmethod does fail, or if there is no regulome for the given genome, then no regulatory network ID is returned.\n\nNote 1: this method should be migrated to the regulation service\nNote 2: this method should use the type compiler auth, but for simplicity  we now just pass an auth token directly.",
      "name" : "get_regulatory_network_by_genome",
      "parameters" : [ {
        "name" : "genome_id",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A KBase ID is a string starting with the characters \"kb|\".  KBase IDs are typed. The types are\ndesignated using a short string.  KBase IDs may be hierarchical.  See the standard KBase documentation\nfor more information.",
            "module" : "PROM",
            "name" : "kbase_id"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A KBase ID for a genome",
          "module" : "PROM",
          "name" : "genome_id"
        }
      }, {
        "name" : "workspace_name",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The name of a workspace",
          "module" : "PROM",
          "name" : "workspace_name"
        }
      }, {
        "name" : "token",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The string representation of the bearer token needed to authenticate on the workspace service, this will eventually\nbe eliminated when this service is updated to use the auto type-compiler auth functionality",
          "module" : "PROM",
          "name" : "auth_token"
        }
      } ],
      "return_type" : [ {
        "name" : "status",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Status message used by this service to provide information on the final status of a step",
          "module" : "PROM",
          "name" : "status"
        }
      }, {
        "name" : "regulatory_network_id",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A workspace ID for a regulatory network object",
          "module" : "PROM",
          "name" : "regulatory_network_id"
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "Maps the regulatory network stored in a workspace in one genome namespace to an alternate genome namespace.  This is useful,\nfor instance, if a regulatory network was built and is available for one genome, but you intend to use it for\na related genome or a genome with different gene calls.  If a gene in the original regulatory network cannot be found in\nthe translation mapping, then it is simply removed from the new regulatory network.  Thus, if you are only changing the names\nof some genes, you still must provide an entry in the input mapping for the genes you wish to keep.  If successful, this method\nreturns the regulatory network ID of the newly created regulatory network.  This method also returns a status message indicating\nwhat happened or what went wrong.\n\nThe mapping<string,string> new_features_names should be defined so that existing IDs are the key and the replacement IDs are the\nvalues stored.",
      "name" : "change_regulatory_network_namespace",
      "parameters" : [ {
        "name" : "regulatory_network_id",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A workspace ID for a regulatory network object",
          "module" : "PROM",
          "name" : "regulatory_network_id"
        }
      }, {
        "name" : "new_feature_names",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Mapping",
          "annotations" : { },
          "key_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "value_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          }
        }
      }, {
        "name" : "workspace_name",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The name of a workspace",
          "module" : "PROM",
          "name" : "workspace_name"
        }
      }, {
        "name" : "token",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "The string representation of the bearer token needed to authenticate on the workspace service, this will eventually\nbe eliminated when this service is updated to use the auto type-compiler auth functionality",
          "module" : "PROM",
          "name" : "auth_token"
        }
      } ],
      "return_type" : [ {
        "name" : "status",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Status message used by this service to provide information on the final status of a step",
          "module" : "PROM",
          "name" : "status"
        }
      }, {
        "name" : "new_regulatory_network_id",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A workspace ID for a regulatory network object",
          "module" : "PROM",
          "name" : "regulatory_network_id"
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Named parameters for 'create_prom_constraints' method.  Currently all options are required.\n\n    genome_object_id genome_object_id            - the workspace ID of the genome to link to the prom object\n    expression_data_collection_id\n               expression_data_collection_id     - the workspace ID of the expression data collection needed to\n                                                   build the PROM constraints.\n    regulatory_network_id regulatory_network_id  - the workspace ID of the regulatory network data to use\n    workspace_name workspace_name                - the name of the workspace to use\n    auth_token token                             - the auth token that has permission to write in the specified workspace",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A workspace ID for a genome object in a user's workspace, used to link a prom_constraint Object to a genome",
            "module" : "PROM",
            "name" : "genome_object_id"
          },
          "name" : "genome_object_id",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A workspace id for a set of expression data on/off calls",
            "module" : "PROM",
            "name" : "expression_data_collection_id"
          },
          "name" : "expression_data_collection_id",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A workspace ID for a regulatory network object",
            "module" : "PROM",
            "name" : "regulatory_network_id"
          },
          "name" : "regulatory_network_id",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The name of a workspace",
            "module" : "PROM",
            "name" : "workspace_name"
          },
          "name" : "workspace_name",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The string representation of the bearer token needed to authenticate on the workspace service, this will eventually\nbe eliminated when this service is updated to use the auto type-compiler auth functionality",
            "module" : "PROM",
            "name" : "auth_token"
          },
          "name" : "token",
          "nullable" : "0"
        } ],
        "module" : "PROM",
        "name" : "create_prom_constraints_parameters"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Named parameters for 'create_prom_constraints' method.  Currently all options are required.\n\n    genome_object_id genome_object_id            - the workspace ID of the genome to link to the prom object\n    expression_data_collection_id\n               expression_data_collection_id     - the workspace ID of the expression data collection needed to\n                                                   build the PROM constraints.\n    regulatory_network_id regulatory_network_id  - the workspace ID of the regulatory network data to use\n    workspace_name workspace_name                - the name of the workspace to use\n    auth_token token                             - the auth token that has permission to write in the specified workspace",
      "module" : "PROM",
      "name" : "create_prom_constraints_parameters"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "This method creates a set of Prom constraints for a given genome annotation based on a regulatory network\nand a collection of gene expression data stored on a workspace.  Parameters are specified in the\ncreate_prom_constraints_parameters object.  A status object is returned indicating success or failure along\nwith a message on what went wrong or statistics on the retrieved objects.  If the method was successful, the\nID of the new Prom constraints object is also returned. The Prom constraints can then be used in conjunction\nwith an FBA model using FBA Model Services.",
      "name" : "create_prom_constraints",
      "parameters" : [ {
        "name" : "params",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Struct",
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { }
            },
            "comment" : "Named parameters for 'create_prom_constraints' method.  Currently all options are required.\n\n    genome_object_id genome_object_id            - the workspace ID of the genome to link to the prom object\n    expression_data_collection_id\n               expression_data_collection_id     - the workspace ID of the expression data collection needed to\n                                                   build the PROM constraints.\n    regulatory_network_id regulatory_network_id  - the workspace ID of the regulatory network data to use\n    workspace_name workspace_name                - the name of the workspace to use\n    auth_token token                             - the auth token that has permission to write in the specified workspace",
            "items" : [ {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A workspace ID for a genome object in a user's workspace, used to link a prom_constraint Object to a genome",
                "module" : "PROM",
                "name" : "genome_object_id"
              },
              "name" : "genome_object_id",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A workspace id for a set of expression data on/off calls",
                "module" : "PROM",
                "name" : "expression_data_collection_id"
              },
              "name" : "expression_data_collection_id",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A workspace ID for a regulatory network object",
                "module" : "PROM",
                "name" : "regulatory_network_id"
              },
              "name" : "regulatory_network_id",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The name of a workspace",
                "module" : "PROM",
                "name" : "workspace_name"
              },
              "name" : "workspace_name",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "The string representation of the bearer token needed to authenticate on the workspace service, this will eventually\nbe eliminated when this service is updated to use the auto type-compiler auth functionality",
                "module" : "PROM",
                "name" : "auth_token"
              },
              "name" : "token",
              "nullable" : "0"
            } ],
            "module" : "PROM",
            "name" : "create_prom_constraints_parameters"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Named parameters for 'create_prom_constraints' method.  Currently all options are required.\n\n    genome_object_id genome_object_id            - the workspace ID of the genome to link to the prom object\n    expression_data_collection_id\n               expression_data_collection_id     - the workspace ID of the expression data collection needed to\n                                                   build the PROM constraints.\n    regulatory_network_id regulatory_network_id  - the workspace ID of the regulatory network data to use\n    workspace_name workspace_name                - the name of the workspace to use\n    auth_token token                             - the auth token that has permission to write in the specified workspace",
          "module" : "PROM",
          "name" : "create_prom_constraints_parameters"
        }
      } ],
      "return_type" : [ {
        "name" : "status",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "Status message used by this service to provide information on the final status of a step",
          "module" : "PROM",
          "name" : "status"
        }
      }, {
        "name" : "prom_constraints_id",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A workspace ID for the prom constraints object in a user's workpace",
          "module" : "PROM",
          "name" : "prom_constraints_id"
        }
      } ]
    } ],
    "module_name" : "PROM",
    "options" : [ ],
    "service_name" : "PROM"
  }, [ ], {
    "UnspecifiedObject" : {
      "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
      "annotations" : { }
    },
    "annotation_uuid" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "the ID of the genome annotation object kept for reference in the prom_constraints object",
      "module" : "PROM",
      "name" : "annotation_uuid"
    },
    "auth_token" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "The string representation of the bearer token needed to authenticate on the workspace service, this will eventually\nbe eliminated when this service is updated to use the auto type-compiler auth functionality",
      "module" : "PROM",
      "name" : "auth_token"
    },
    "bool" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "indicates true or false values, false <= 0, true >=1",
      "module" : "PROM",
      "name" : "bool"
    },
    "boolean_gene_expression_data" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "A simplified representation of gene expression data under a SINGLE condition. Note that the condition\ninformation is not explicitly tracked here. also NOTE: this data object should be migrated to the Expression\nData service, and simply imported here.\n\n    mapping<feature_id,on_off_state> on_off_call - a mapping of genome features to on/off calls under the given\n                                           condition (true=on, false=off).  It is therefore assumed that\n                                           the features are protein coding genes.\n    source expression_data_source        - the source of this collection of expression data\n    source_id expression_data_source_id  - the id of this data object in the workspace",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A workspace ID for a gene expression data object.",
            "module" : "PROM",
            "name" : "boolean_gene_expression_data_id"
          },
          "name" : "id",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Mapping",
            "annotations" : { },
            "key_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Scalar",
                  "annotations" : { },
                  "scalar_type" : "string"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A KBase ID is a string starting with the characters \"kb|\".  KBase IDs are typed. The types are\ndesignated using a short string.  KBase IDs may be hierarchical.  See the standard KBase documentation\nfor more information.",
                "module" : "PROM",
                "name" : "kbase_id"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A KBase ID for a genome feature",
              "module" : "PROM",
              "name" : "feature_id"
            },
            "value_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "Indicates on/off state of a gene, 1=on, -1=off, 0=unknown",
              "module" : "PROM",
              "name" : "on_off_state"
            }
          },
          "name" : "on_off_call",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Specifies the source of a data object, e.g. KBase or MicrobesOnline",
            "module" : "PROM",
            "name" : "source"
          },
          "name" : "expression_data_source",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Specifies the source of a data object, e.g. KBase or MicrobesOnline",
            "module" : "PROM",
            "name" : "source"
          },
          "name" : "expression_data_source_id",
          "nullable" : "0"
        } ],
        "module" : "PROM",
        "name" : "boolean_gene_expression_data"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A simplified representation of gene expression data under a SINGLE condition. Note that the condition\ninformation is not explicitly tracked here. also NOTE: this data object should be migrated to the Expression\nData service, and simply imported here.\n\n    mapping<feature_id,on_off_state> on_off_call - a mapping of genome features to on/off calls under the given\n                                           condition (true=on, false=off).  It is therefore assumed that\n                                           the features are protein coding genes.\n    source expression_data_source        - the source of this collection of expression data\n    source_id expression_data_source_id  - the id of this data object in the workspace",
      "module" : "PROM",
      "name" : "boolean_gene_expression_data"
    },
    "boolean_gene_expression_data_collection" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "A collection of gene expression data for a single genome under a range of conditions.  This data is returned\nas a list of IDs for boolean gene expression data objects in the workspace.  This is a simple object for creating\na PROM Model. NOTE: this data object should be migrated to the Expression Data service, and simply imported here.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A workspace id for a set of expression data on/off calls",
            "module" : "PROM",
            "name" : "expression_data_collection_id"
          },
          "name" : "id",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A workspace ID for a gene expression data object.",
              "module" : "PROM",
              "name" : "boolean_gene_expression_data_id"
            }
          },
          "name" : "expression_data_ids",
          "nullable" : "0"
        } ],
        "module" : "PROM",
        "name" : "boolean_gene_expression_data_collection"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A collection of gene expression data for a single genome under a range of conditions.  This data is returned\nas a list of IDs for boolean gene expression data objects in the workspace.  This is a simple object for creating\na PROM Model. NOTE: this data object should be migrated to the Expression Data service, and simply imported here.",
      "module" : "PROM",
      "name" : "boolean_gene_expression_data_collection"
    },
    "boolean_gene_expression_data_id" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A workspace ID for a gene expression data object.",
      "module" : "PROM",
      "name" : "boolean_gene_expression_data_id"
    },
    "create_prom_constraints_parameters" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Named parameters for 'create_prom_constraints' method.  Currently all options are required.\n\n    genome_object_id genome_object_id            - the workspace ID of the genome to link to the prom object\n    expression_data_collection_id\n               expression_data_collection_id     - the workspace ID of the expression data collection needed to\n                                                   build the PROM constraints.\n    regulatory_network_id regulatory_network_id  - the workspace ID of the regulatory network data to use\n    workspace_name workspace_name                - the name of the workspace to use\n    auth_token token                             - the auth token that has permission to write in the specified workspace",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A workspace ID for a genome object in a user's workspace, used to link a prom_constraint Object to a genome",
            "module" : "PROM",
            "name" : "genome_object_id"
          },
          "name" : "genome_object_id",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A workspace id for a set of expression data on/off calls",
            "module" : "PROM",
            "name" : "expression_data_collection_id"
          },
          "name" : "expression_data_collection_id",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A workspace ID for a regulatory network object",
            "module" : "PROM",
            "name" : "regulatory_network_id"
          },
          "name" : "regulatory_network_id",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The name of a workspace",
            "module" : "PROM",
            "name" : "workspace_name"
          },
          "name" : "workspace_name",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "The string representation of the bearer token needed to authenticate on the workspace service, this will eventually\nbe eliminated when this service is updated to use the auto type-compiler auth functionality",
            "module" : "PROM",
            "name" : "auth_token"
          },
          "name" : "token",
          "nullable" : "0"
        } ],
        "module" : "PROM",
        "name" : "create_prom_constraints_parameters"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Named parameters for 'create_prom_constraints' method.  Currently all options are required.\n\n    genome_object_id genome_object_id            - the workspace ID of the genome to link to the prom object\n    expression_data_collection_id\n               expression_data_collection_id     - the workspace ID of the expression data collection needed to\n                                                   build the PROM constraints.\n    regulatory_network_id regulatory_network_id  - the workspace ID of the regulatory network data to use\n    workspace_name workspace_name                - the name of the workspace to use\n    auth_token token                             - the auth token that has permission to write in the specified workspace",
      "module" : "PROM",
      "name" : "create_prom_constraints_parameters"
    },
    "expression_data_collection_id" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A workspace id for a set of expression data on/off calls",
      "module" : "PROM",
      "name" : "expression_data_collection_id"
    },
    "feature_id" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Typedef",
        "alias_type" : {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        },
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { },
          "unknown_annotations" : { }
        },
        "comment" : "A KBase ID is a string starting with the characters \"kb|\".  KBase IDs are typed. The types are\ndesignated using a short string.  KBase IDs may be hierarchical.  See the standard KBase documentation\nfor more information.",
        "module" : "PROM",
        "name" : "kbase_id"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A KBase ID for a genome feature",
      "module" : "PROM",
      "name" : "feature_id"
    },
    "float" : {
      "!" : "Bio::KBase::KIDL::KBT::Scalar",
      "annotations" : { },
      "scalar_type" : "float"
    },
    "genome_id" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Typedef",
        "alias_type" : {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        },
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { },
          "unknown_annotations" : { }
        },
        "comment" : "A KBase ID is a string starting with the characters \"kb|\".  KBase IDs are typed. The types are\ndesignated using a short string.  KBase IDs may be hierarchical.  See the standard KBase documentation\nfor more information.",
        "module" : "PROM",
        "name" : "kbase_id"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A KBase ID for a genome",
      "module" : "PROM",
      "name" : "genome_id"
    },
    "genome_object_id" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A workspace ID for a genome object in a user's workspace, used to link a prom_constraint Object to a genome",
      "module" : "PROM",
      "name" : "genome_object_id"
    },
    "int" : {
      "!" : "Bio::KBase::KIDL::KBT::Scalar",
      "annotations" : { },
      "scalar_type" : "int"
    },
    "kbase_id" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A KBase ID is a string starting with the characters \"kb|\".  KBase IDs are typed. The types are\ndesignated using a short string.  KBase IDs may be hierarchical.  See the standard KBase documentation\nfor more information.",
      "module" : "PROM",
      "name" : "kbase_id"
    },
    "on_off_state" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Indicates on/off state of a gene, 1=on, -1=off, 0=unknown",
      "module" : "PROM",
      "name" : "on_off_state"
    },
    "prom_constraints_id" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A workspace ID for the prom constraints object in a user's workpace",
      "module" : "PROM",
      "name" : "prom_constraints_id"
    },
    "prom_contstraint" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "An object that encapsulates the information necessary to apply PROM-based constraints to an FBA model. This\nincludes a regulatory network consisting of a set of regulatory interactions (implied by the set of tfMap\nobjects) and interaction probabilities as defined in each regulatory_target object.  A link the the annotation\nobject is required in order to properly link to an FBA model object.  A reference to the expression_data_collection\nused to compute the interaction probabilities is provided for future reference.\n\n    prom_constraints_id id                                         - the id of this prom_constraints object in a\n                                                                    workspace\n    annotation_uuid annotation_uuid                               - the id of the annotation object in the workspace\n                                                                    which specfies how TFs and targets are named\n    list <tfMap> transcriptionFactorMaps                          - the list of tfMaps which specifies both the\n                                                                    regulatory network and interaction probabilities\n                                                                    between TF and target genes\n    expression_data_collection_id expression_data_collection_id   - the id of the expresion_data_collection object in\n                                                                    the workspace which was used to compute the\n                                                                    regulatory interaction probabilities",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A workspace ID for the prom constraints object in a user's workpace",
            "module" : "PROM",
            "name" : "prom_constraints_id"
          },
          "name" : "id",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "the ID of the genome annotation object kept for reference in the prom_constraints object",
            "module" : "PROM",
            "name" : "annotation_uuid"
          },
          "name" : "annotation_uuid",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Struct",
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { }
                },
                "comment" : "Object required by the prom_constraints object, this maps a transcription factor by its uuid (in some\nannotation namespace) to a group of regulatory target genes.\n\n    string transcriptionFactor_uuid                       - id of the TF in the annotation object namespace\n    list <regulatory_target> transcriptionFactorMapTarget - collection of regulatory target genes for the TF\n                                                            along with associated joint probabilities for each\n                                                            target to be on given that the TF is on or off.",
                "items" : [ {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "transcriptionFactor_uuid",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::List",
                    "annotations" : { },
                    "element_type" : {
                      "!" : "Bio::KBase::KIDL::KBT::Typedef",
                      "alias_type" : {
                        "!" : "Bio::KBase::KIDL::KBT::Struct",
                        "annotations" : {
                          "metadata" : { },
                          "searchable_ws_subset" : { }
                        },
                        "comment" : "Object required by the prom_constraints object which defines the computed probabilities for a target gene.  The\nTF regulating this target can be deduced based on the tfMap object.\n\n    string target_uuid        - id of the target gene in the annotation object namespace\n    float tfOffProbability    - PROB(target=ON|TF=OFF)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is not expressed, as defined in Candrasekarana &\n                                Price, PNAS 2010 and used to predict cumulative effects of multiple\n                                regulatory interactions with a single target.  Set to null or empty if\n                                this probability has not been calculated yet.\n    float probTTonGivenTFon   - PROB(target=ON|TF=ON)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is expressed.    Set to null or empty if\n                                this probability has not been calculated yet.",
                        "items" : [ {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "string"
                          },
                          "name" : "target_uuid",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "float"
                          },
                          "name" : "tfOnProbability",
                          "nullable" : "0"
                        }, {
                          "!" : "Bio::KBase::KIDL::KBT::StructItem",
                          "item_type" : {
                            "!" : "Bio::KBase::KIDL::KBT::Scalar",
                            "annotations" : { },
                            "scalar_type" : "float"
                          },
                          "name" : "tfOffProbability",
                          "nullable" : "0"
                        } ],
                        "module" : "PROM",
                        "name" : "regulatory_target"
                      },
                      "annotations" : {
                        "metadata" : { },
                        "searchable_ws_subset" : { },
                        "unknown_annotations" : { }
                      },
                      "comment" : "Object required by the prom_constraints object which defines the computed probabilities for a target gene.  The\nTF regulating this target can be deduced based on the tfMap object.\n\n    string target_uuid        - id of the target gene in the annotation object namespace\n    float tfOffProbability    - PROB(target=ON|TF=OFF)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is not expressed, as defined in Candrasekarana &\n                                Price, PNAS 2010 and used to predict cumulative effects of multiple\n                                regulatory interactions with a single target.  Set to null or empty if\n                                this probability has not been calculated yet.\n    float probTTonGivenTFon   - PROB(target=ON|TF=ON)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is expressed.    Set to null or empty if\n                                this probability has not been calculated yet.",
                      "module" : "PROM",
                      "name" : "regulatory_target"
                    }
                  },
                  "name" : "transcriptionFactorMapTargets",
                  "nullable" : "0"
                } ],
                "module" : "PROM",
                "name" : "tfMap"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "Object required by the prom_constraints object, this maps a transcription factor by its uuid (in some\nannotation namespace) to a group of regulatory target genes.\n\n    string transcriptionFactor_uuid                       - id of the TF in the annotation object namespace\n    list <regulatory_target> transcriptionFactorMapTarget - collection of regulatory target genes for the TF\n                                                            along with associated joint probabilities for each\n                                                            target to be on given that the TF is on or off.",
              "module" : "PROM",
              "name" : "tfMap"
            }
          },
          "name" : "transcriptionFactorMaps",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A workspace id for a set of expression data on/off calls",
            "module" : "PROM",
            "name" : "expression_data_collection_id"
          },
          "name" : "expression_data_collection_id",
          "nullable" : "0"
        } ],
        "module" : "PROM",
        "name" : "prom_contstraint"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "An object that encapsulates the information necessary to apply PROM-based constraints to an FBA model. This\nincludes a regulatory network consisting of a set of regulatory interactions (implied by the set of tfMap\nobjects) and interaction probabilities as defined in each regulatory_target object.  A link the the annotation\nobject is required in order to properly link to an FBA model object.  A reference to the expression_data_collection\nused to compute the interaction probabilities is provided for future reference.\n\n    prom_constraints_id id                                         - the id of this prom_constraints object in a\n                                                                    workspace\n    annotation_uuid annotation_uuid                               - the id of the annotation object in the workspace\n                                                                    which specfies how TFs and targets are named\n    list <tfMap> transcriptionFactorMaps                          - the list of tfMaps which specifies both the\n                                                                    regulatory network and interaction probabilities\n                                                                    between TF and target genes\n    expression_data_collection_id expression_data_collection_id   - the id of the expresion_data_collection object in\n                                                                    the workspace which was used to compute the\n                                                                    regulatory interaction probabilities",
      "module" : "PROM",
      "name" : "prom_contstraint"
    },
    "regulatory_interaction" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "A simplified representation of a regulatory interaction that also stores the probability of the interaction\n(specificially, as the probability the target is on given that the regulator is off), which is necessary for PROM\nto construct FBA constraints.  NOTE: this data object should be migrated to the Regulation service, and simply\nimported here. NOTE 2: feature_id may actually be a more general ID, as models can potentially be loaded that\nare not in the kbase namespace. In this case everything, including expression data and the fba model must be in\nthe same namespace.\n\n    feature_id TF            - the genome feature that is the regulator\n    feature_id target        - the genome feature that is the target of regulation",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A KBase ID is a string starting with the characters \"kb|\".  KBase IDs are typed. The types are\ndesignated using a short string.  KBase IDs may be hierarchical.  See the standard KBase documentation\nfor more information.",
              "module" : "PROM",
              "name" : "kbase_id"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A KBase ID for a genome feature",
            "module" : "PROM",
            "name" : "feature_id"
          },
          "name" : "TF",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "A KBase ID is a string starting with the characters \"kb|\".  KBase IDs are typed. The types are\ndesignated using a short string.  KBase IDs may be hierarchical.  See the standard KBase documentation\nfor more information.",
              "module" : "PROM",
              "name" : "kbase_id"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A KBase ID for a genome feature",
            "module" : "PROM",
            "name" : "feature_id"
          },
          "name" : "target",
          "nullable" : "0"
        } ],
        "module" : "PROM",
        "name" : "regulatory_interaction"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A simplified representation of a regulatory interaction that also stores the probability of the interaction\n(specificially, as the probability the target is on given that the regulator is off), which is necessary for PROM\nto construct FBA constraints.  NOTE: this data object should be migrated to the Regulation service, and simply\nimported here. NOTE 2: feature_id may actually be a more general ID, as models can potentially be loaded that\nare not in the kbase namespace. In this case everything, including expression data and the fba model must be in\nthe same namespace.\n\n    feature_id TF            - the genome feature that is the regulator\n    feature_id target        - the genome feature that is the target of regulation",
      "module" : "PROM",
      "name" : "regulatory_interaction"
    },
    "regulatory_network" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::List",
        "annotations" : { },
        "element_type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Struct",
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { }
            },
            "comment" : "A simplified representation of a regulatory interaction that also stores the probability of the interaction\n(specificially, as the probability the target is on given that the regulator is off), which is necessary for PROM\nto construct FBA constraints.  NOTE: this data object should be migrated to the Regulation service, and simply\nimported here. NOTE 2: feature_id may actually be a more general ID, as models can potentially be loaded that\nare not in the kbase namespace. In this case everything, including expression data and the fba model must be in\nthe same namespace.\n\n    feature_id TF            - the genome feature that is the regulator\n    feature_id target        - the genome feature that is the target of regulation",
            "items" : [ {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A KBase ID is a string starting with the characters \"kb|\".  KBase IDs are typed. The types are\ndesignated using a short string.  KBase IDs may be hierarchical.  See the standard KBase documentation\nfor more information.",
                  "module" : "PROM",
                  "name" : "kbase_id"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A KBase ID for a genome feature",
                "module" : "PROM",
                "name" : "feature_id"
              },
              "name" : "TF",
              "nullable" : "0"
            }, {
              "!" : "Bio::KBase::KIDL::KBT::StructItem",
              "item_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Typedef",
                "alias_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A KBase ID is a string starting with the characters \"kb|\".  KBase IDs are typed. The types are\ndesignated using a short string.  KBase IDs may be hierarchical.  See the standard KBase documentation\nfor more information.",
                  "module" : "PROM",
                  "name" : "kbase_id"
                },
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { },
                  "unknown_annotations" : { }
                },
                "comment" : "A KBase ID for a genome feature",
                "module" : "PROM",
                "name" : "feature_id"
              },
              "name" : "target",
              "nullable" : "0"
            } ],
            "module" : "PROM",
            "name" : "regulatory_interaction"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A simplified representation of a regulatory interaction that also stores the probability of the interaction\n(specificially, as the probability the target is on given that the regulator is off), which is necessary for PROM\nto construct FBA constraints.  NOTE: this data object should be migrated to the Regulation service, and simply\nimported here. NOTE 2: feature_id may actually be a more general ID, as models can potentially be loaded that\nare not in the kbase namespace. In this case everything, including expression data and the fba model must be in\nthe same namespace.\n\n    feature_id TF            - the genome feature that is the regulator\n    feature_id target        - the genome feature that is the target of regulation",
          "module" : "PROM",
          "name" : "regulatory_interaction"
        }
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A collection of regulatory interactions that together form a regulatory network. This is an extremely\nsimplified data object for use in constructing a PROM model.  NOTE: this data object should be migrated to\nthe Regulation service, and simply imported here.",
      "module" : "PROM",
      "name" : "regulatory_network"
    },
    "regulatory_network_id" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A workspace ID for a regulatory network object",
      "module" : "PROM",
      "name" : "regulatory_network_id"
    },
    "regulatory_target" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Object required by the prom_constraints object which defines the computed probabilities for a target gene.  The\nTF regulating this target can be deduced based on the tfMap object.\n\n    string target_uuid        - id of the target gene in the annotation object namespace\n    float tfOffProbability    - PROB(target=ON|TF=OFF)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is not expressed, as defined in Candrasekarana &\n                                Price, PNAS 2010 and used to predict cumulative effects of multiple\n                                regulatory interactions with a single target.  Set to null or empty if\n                                this probability has not been calculated yet.\n    float probTTonGivenTFon   - PROB(target=ON|TF=ON)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is expressed.    Set to null or empty if\n                                this probability has not been calculated yet.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "target_uuid",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "float"
          },
          "name" : "tfOnProbability",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "float"
          },
          "name" : "tfOffProbability",
          "nullable" : "0"
        } ],
        "module" : "PROM",
        "name" : "regulatory_target"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Object required by the prom_constraints object which defines the computed probabilities for a target gene.  The\nTF regulating this target can be deduced based on the tfMap object.\n\n    string target_uuid        - id of the target gene in the annotation object namespace\n    float tfOffProbability    - PROB(target=ON|TF=OFF)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is not expressed, as defined in Candrasekarana &\n                                Price, PNAS 2010 and used to predict cumulative effects of multiple\n                                regulatory interactions with a single target.  Set to null or empty if\n                                this probability has not been calculated yet.\n    float probTTonGivenTFon   - PROB(target=ON|TF=ON)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is expressed.    Set to null or empty if\n                                this probability has not been calculated yet.",
      "module" : "PROM",
      "name" : "regulatory_target"
    },
    "source" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Specifies the source of a data object, e.g. KBase or MicrobesOnline",
      "module" : "PROM",
      "name" : "source"
    },
    "source_id" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Specifies the ID of the data object in the source",
      "module" : "PROM",
      "name" : "source_id"
    },
    "status" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Status message used by this service to provide information on the final status of a step",
      "module" : "PROM",
      "name" : "status"
    },
    "string" : {
      "!" : "Bio::KBase::KIDL::KBT::Scalar",
      "annotations" : { },
      "scalar_type" : "string"
    },
    "tfMap" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "Object required by the prom_constraints object, this maps a transcription factor by its uuid (in some\nannotation namespace) to a group of regulatory target genes.\n\n    string transcriptionFactor_uuid                       - id of the TF in the annotation object namespace\n    list <regulatory_target> transcriptionFactorMapTarget - collection of regulatory target genes for the TF\n                                                            along with associated joint probabilities for each\n                                                            target to be on given that the TF is on or off.",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "name" : "transcriptionFactor_uuid",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Struct",
                "annotations" : {
                  "metadata" : { },
                  "searchable_ws_subset" : { }
                },
                "comment" : "Object required by the prom_constraints object which defines the computed probabilities for a target gene.  The\nTF regulating this target can be deduced based on the tfMap object.\n\n    string target_uuid        - id of the target gene in the annotation object namespace\n    float tfOffProbability    - PROB(target=ON|TF=OFF)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is not expressed, as defined in Candrasekarana &\n                                Price, PNAS 2010 and used to predict cumulative effects of multiple\n                                regulatory interactions with a single target.  Set to null or empty if\n                                this probability has not been calculated yet.\n    float probTTonGivenTFon   - PROB(target=ON|TF=ON)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is expressed.    Set to null or empty if\n                                this probability has not been calculated yet.",
                "items" : [ {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "name" : "target_uuid",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "float"
                  },
                  "name" : "tfOnProbability",
                  "nullable" : "0"
                }, {
                  "!" : "Bio::KBase::KIDL::KBT::StructItem",
                  "item_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "float"
                  },
                  "name" : "tfOffProbability",
                  "nullable" : "0"
                } ],
                "module" : "PROM",
                "name" : "regulatory_target"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "Object required by the prom_constraints object which defines the computed probabilities for a target gene.  The\nTF regulating this target can be deduced based on the tfMap object.\n\n    string target_uuid        - id of the target gene in the annotation object namespace\n    float tfOffProbability    - PROB(target=ON|TF=OFF)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is not expressed, as defined in Candrasekarana &\n                                Price, PNAS 2010 and used to predict cumulative effects of multiple\n                                regulatory interactions with a single target.  Set to null or empty if\n                                this probability has not been calculated yet.\n    float probTTonGivenTFon   - PROB(target=ON|TF=ON)\n                                the probability that the transcriptional target is ON, given that the\n                                transcription factor is expressed.    Set to null or empty if\n                                this probability has not been calculated yet.",
              "module" : "PROM",
              "name" : "regulatory_target"
            }
          },
          "name" : "transcriptionFactorMapTargets",
          "nullable" : "0"
        } ],
        "module" : "PROM",
        "name" : "tfMap"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Object required by the prom_constraints object, this maps a transcription factor by its uuid (in some\nannotation namespace) to a group of regulatory target genes.\n\n    string transcriptionFactor_uuid                       - id of the TF in the annotation object namespace\n    list <regulatory_target> transcriptionFactorMapTarget - collection of regulatory target genes for the TF\n                                                            along with associated joint probabilities for each\n                                                            target to be on given that the TF is on or off.",
      "module" : "PROM",
      "name" : "tfMap"
    },
    "workspace_name" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "The name of a workspace",
      "module" : "PROM",
      "name" : "workspace_name"
    }
  } ] ]
}