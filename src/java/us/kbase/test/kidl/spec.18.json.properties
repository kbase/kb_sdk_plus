{
  "MOTranslation" : [ [ {
    "!" : "Bio::KBase::KIDL::KBT::DefineModule",
    "annotations" : {
      "unknown_annotations" : { }
    },
    "comment" : "This module will translate KBase ids to MicrobesOnline ids and\nvice-versa. For features, it will initially use MD5s to perform\nthe translation.\n\nThe MOTranslation module will ultimately be deprecated, once all\nMicrobesOnline data types are natively stored in KBase. In general\nthe module and methods should not be publicized, and are mainly intended\nto be used internally by other KBase services (specifically the protein\ninfo service).",
    "module_components" : [ {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "protein is an MD5 in KBase. It is the primary lookup between\nKBase fids and MicrobesOnline locusIds.",
      "module" : "MOTranslation",
      "name" : "protein"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "kbaseId can represent any object with a KBase identifier. \nIn the future this may be used to translate between other data\ntypes, such as contig or genome.",
      "module" : "MOTranslation",
      "name" : "kbaseId"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Typedef",
        "alias_type" : {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        },
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { },
          "unknown_annotations" : { }
        },
        "comment" : "kbaseId can represent any object with a KBase identifier. \nIn the future this may be used to translate between other data\ntypes, such as contig or genome.",
        "module" : "MOTranslation",
        "name" : "kbaseId"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "genomeId is a kbase id of a genome",
      "module" : "MOTranslation",
      "name" : "genomeId"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "fid is a feature id in KBase.",
      "module" : "MOTranslation",
      "name" : "fid"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "moLocusId is a locusId in MicrobesOnline. It is analogous to a fid\nin KBase.",
      "module" : "MOTranslation",
      "name" : "moLocusId"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "moScaffoldId is a scaffoldId in MicrobesOnline.  It is analogous to\na contig kbId in KBase.",
      "module" : "MOTranslation",
      "name" : "moScaffoldId"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "moTaxonomyId is a taxonomyId in MicrobesOnline.  It is somewhat analogous\nto a genome kbId in KBase.  It generally stores the NCBI taxonomy ID,\nthough sometimes can store an internal identifier instead.",
      "module" : "MOTranslation",
      "name" : "moTaxonomyId"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "fids_to_moLocusIds translates a list of fids into MicrobesOnline\nlocusIds. It uses proteins_to_moLocusIds internally.",
      "name" : "fids_to_moLocusIds",
      "parameters" : [ {
        "name" : "fids",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "fid is a feature id in KBase.",
            "module" : "MOTranslation",
            "name" : "fid"
          }
        }
      } ],
      "return_type" : [ {
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Mapping",
          "annotations" : { },
          "key_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "fid is a feature id in KBase.",
            "module" : "MOTranslation",
            "name" : "fid"
          },
          "value_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "moLocusId is a locusId in MicrobesOnline. It is analogous to a fid\nin KBase.",
              "module" : "MOTranslation",
              "name" : "moLocusId"
            }
          }
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "proteins_to_moLocusIds translates a list of proteins (MD5s) into\nMicrobesOnline locusIds.",
      "name" : "proteins_to_moLocusIds",
      "parameters" : [ {
        "name" : "proteins",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "protein is an MD5 in KBase. It is the primary lookup between\nKBase fids and MicrobesOnline locusIds.",
            "module" : "MOTranslation",
            "name" : "protein"
          }
        }
      } ],
      "return_type" : [ {
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Mapping",
          "annotations" : { },
          "key_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "protein is an MD5 in KBase. It is the primary lookup between\nKBase fids and MicrobesOnline locusIds.",
            "module" : "MOTranslation",
            "name" : "protein"
          },
          "value_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "int"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "moLocusId is a locusId in MicrobesOnline. It is analogous to a fid\nin KBase.",
              "module" : "MOTranslation",
              "name" : "moLocusId"
            }
          }
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "moLocusIds_to_fids translates a list of MicrobesOnline locusIds\ninto KBase fids. It uses moLocusIds_to_proteins internally.",
      "name" : "moLocusIds_to_fids",
      "parameters" : [ {
        "name" : "moLocusIds",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "moLocusId is a locusId in MicrobesOnline. It is analogous to a fid\nin KBase.",
            "module" : "MOTranslation",
            "name" : "moLocusId"
          }
        }
      } ],
      "return_type" : [ {
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Mapping",
          "annotations" : { },
          "key_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "moLocusId is a locusId in MicrobesOnline. It is analogous to a fid\nin KBase.",
            "module" : "MOTranslation",
            "name" : "moLocusId"
          },
          "value_type" : {
            "!" : "Bio::KBase::KIDL::KBT::List",
            "annotations" : { },
            "element_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "fid is a feature id in KBase.",
              "module" : "MOTranslation",
              "name" : "fid"
            }
          }
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "moLocusIds_to_proteins translates a list of MicrobesOnline locusIds\ninto proteins (MD5s).",
      "name" : "moLocusIds_to_proteins",
      "parameters" : [ {
        "name" : "moLocusIds",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "moLocusId is a locusId in MicrobesOnline. It is analogous to a fid\nin KBase.",
            "module" : "MOTranslation",
            "name" : "moLocusId"
          }
        }
      } ],
      "return_type" : [ {
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Mapping",
          "annotations" : { },
          "key_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "moLocusId is a locusId in MicrobesOnline. It is analogous to a fid\nin KBase.",
            "module" : "MOTranslation",
            "name" : "moLocusId"
          },
          "value_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "protein is an MD5 in KBase. It is the primary lookup between\nKBase fids and MicrobesOnline locusIds.",
            "module" : "MOTranslation",
            "name" : "protein"
          }
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "AA sequence of a protein",
      "module" : "MOTranslation",
      "name" : "protein_sequence"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "internally consistant and unique id of a protein (could just be integers 0..n), necessary\nfor returning results",
      "module" : "MOTranslation",
      "name" : "protein_id"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Used to indicate a single nucleotide/residue location in a sequence",
      "module" : "MOTranslation",
      "name" : "position"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A short note used to convey the status or explanaton of a result, or in some cases a log of the\nmethod that was run",
      "module" : "MOTranslation",
      "name" : "status"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "A structure for specifying the input sequence queries for the map_to_fid method.  This structure, for\nnow, assumes you will be making queries with identical genomes, so it requires the start and stop.  In the\nfuture, if this assumption is relaxed, then start and stop will be optional parameters.  We should probably\nalso add an MD5 string which can optionally be provided so that we don't have to compute it on the fly.\n\n        protein_id id         - arbitrary ID that must be unique within the set of query sequences\n        protein_sequence seq  - the one letter code AA sequence of the protein\n        position start        - the start position of the start codon in the genome contig (may be a larger\n                                number than stop if the gene is on the reverse strand)\n        position stop         - the last position of he stop codon in the genome contig",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "internally consistant and unique id of a protein (could just be integers 0..n), necessary\nfor returning results",
            "module" : "MOTranslation",
            "name" : "protein_id"
          },
          "name" : "id",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "AA sequence of a protein",
            "module" : "MOTranslation",
            "name" : "protein_sequence"
          },
          "name" : "seq",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Used to indicate a single nucleotide/residue location in a sequence",
            "module" : "MOTranslation",
            "name" : "position"
          },
          "name" : "start",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Used to indicate a single nucleotide/residue location in a sequence",
            "module" : "MOTranslation",
            "name" : "position"
          },
          "name" : "stop",
          "nullable" : "0"
        } ],
        "module" : "MOTranslation",
        "name" : "query_sequence"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A structure for specifying the input sequence queries for the map_to_fid method.  This structure, for\nnow, assumes you will be making queries with identical genomes, so it requires the start and stop.  In the\nfuture, if this assumption is relaxed, then start and stop will be optional parameters.  We should probably\nalso add an MD5 string which can optionally be provided so that we don't have to compute it on the fly.\n\n        protein_id id         - arbitrary ID that must be unique within the set of query sequences\n        protein_sequence seq  - the one letter code AA sequence of the protein\n        position start        - the start position of the start codon in the genome contig (may be a larger\n                                number than stop if the gene is on the reverse strand)\n        position stop         - the last position of he stop codon in the genome contig",
      "module" : "MOTranslation",
      "name" : "query_sequence"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "A structure for specifying the input md5 queries for the map_to_fid_fast method.  This structure assumes\nyou will be making queries with identical genomes, so it requires the start and stop.\n\n        protein_id id         - arbitrary ID that must be unique within the set of query sequences\n        protein md5           - the computed md5 of the protein sequence\n        position start        - the start position of the start codon in the genome contig (may be a larger\n                                number than stop if the gene is on the reverse strand)\n        position stop         - the last position of he stop codon in the genome contig",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "internally consistant and unique id of a protein (could just be integers 0..n), necessary\nfor returning results",
            "module" : "MOTranslation",
            "name" : "protein_id"
          },
          "name" : "id",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "protein is an MD5 in KBase. It is the primary lookup between\nKBase fids and MicrobesOnline locusIds.",
            "module" : "MOTranslation",
            "name" : "protein"
          },
          "name" : "md5",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Used to indicate a single nucleotide/residue location in a sequence",
            "module" : "MOTranslation",
            "name" : "position"
          },
          "name" : "start",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Used to indicate a single nucleotide/residue location in a sequence",
            "module" : "MOTranslation",
            "name" : "position"
          },
          "name" : "stop",
          "nullable" : "0"
        } ],
        "module" : "MOTranslation",
        "name" : "query_md5"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A structure for specifying the input md5 queries for the map_to_fid_fast method.  This structure assumes\nyou will be making queries with identical genomes, so it requires the start and stop.\n\n        protein_id id         - arbitrary ID that must be unique within the set of query sequences\n        protein md5           - the computed md5 of the protein sequence\n        position start        - the start position of the start codon in the genome contig (may be a larger\n                                number than stop if the gene is on the reverse strand)\n        position stop         - the last position of he stop codon in the genome contig",
      "module" : "MOTranslation",
      "name" : "query_md5"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "A simple structure which returns the best matching FID to a given query (see query_sequence) and attaches\na short status string indicating how the match was made, or which consoles you after a match could not\nbe made.\n\n        fid best_match - the feature ID of a KBase feature that offers the best mapping to your query\n        status status  - a short note explaining how the match was made",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "fid is a feature id in KBase.",
            "module" : "MOTranslation",
            "name" : "fid"
          },
          "name" : "best_match",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A short note used to convey the status or explanaton of a result, or in some cases a log of the\nmethod that was run",
            "module" : "MOTranslation",
            "name" : "status"
          },
          "name" : "status",
          "nullable" : "0"
        } ],
        "module" : "MOTranslation",
        "name" : "result"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A simple structure which returns the best matching FID to a given query (see query_sequence) and attaches\na short status string indicating how the match was made, or which consoles you after a match could not\nbe made.\n\n        fid best_match - the feature ID of a KBase feature that offers the best mapping to your query\n        status status  - a short note explaining how the match was made",
      "module" : "MOTranslation",
      "name" : "result"
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "A general method to lookup the best matching feature id in a specific genome for a given protein sequence.\n\nNOTE: currently the intended use of this method is to map identical genomes with different gene calls, although it still\ncan work for fairly similar genomes.  But be warned!!  It may produce incorrect results for genomes that differ!\n\nThis method operates by first checking the MD5 and position of each sequence and determining if there is an exact match,\n(or an exact MD5 match +- 30bp).  If none are found, then a simple blast search is performed.  Currently the blast search\nis completely overkill as it is used simply to look for 50% overlap of genes. Blast was chosen, however, because it is\nanticipated that this, or a very similar implementation of this method, will be used more generally for mapping features\non roughly similar genomes.  Keep very much in mind that this method is not designed to be a general homology search, which\nshould be done with more advanced methods.  Rather, this method is designed more for bookkeeping purposes when data based on\none genome with a set of gene calls needs to be applied to a genome with a second set of gene calls.\n\nsee also the cooresponds method of the CDMI.",
      "name" : "map_to_fid",
      "parameters" : [ {
        "name" : "query_sequences",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Struct",
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { }
              },
              "comment" : "A structure for specifying the input sequence queries for the map_to_fid method.  This structure, for\nnow, assumes you will be making queries with identical genomes, so it requires the start and stop.  In the\nfuture, if this assumption is relaxed, then start and stop will be optional parameters.  We should probably\nalso add an MD5 string which can optionally be provided so that we don't have to compute it on the fly.\n\n        protein_id id         - arbitrary ID that must be unique within the set of query sequences\n        protein_sequence seq  - the one letter code AA sequence of the protein\n        position start        - the start position of the start codon in the genome contig (may be a larger\n                                number than stop if the gene is on the reverse strand)\n        position stop         - the last position of he stop codon in the genome contig",
              "items" : [ {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "internally consistant and unique id of a protein (could just be integers 0..n), necessary\nfor returning results",
                  "module" : "MOTranslation",
                  "name" : "protein_id"
                },
                "name" : "id",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "AA sequence of a protein",
                  "module" : "MOTranslation",
                  "name" : "protein_sequence"
                },
                "name" : "seq",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "int"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "Used to indicate a single nucleotide/residue location in a sequence",
                  "module" : "MOTranslation",
                  "name" : "position"
                },
                "name" : "start",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "int"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "Used to indicate a single nucleotide/residue location in a sequence",
                  "module" : "MOTranslation",
                  "name" : "position"
                },
                "name" : "stop",
                "nullable" : "0"
              } ],
              "module" : "MOTranslation",
              "name" : "query_sequence"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A structure for specifying the input sequence queries for the map_to_fid method.  This structure, for\nnow, assumes you will be making queries with identical genomes, so it requires the start and stop.  In the\nfuture, if this assumption is relaxed, then start and stop will be optional parameters.  We should probably\nalso add an MD5 string which can optionally be provided so that we don't have to compute it on the fly.\n\n        protein_id id         - arbitrary ID that must be unique within the set of query sequences\n        protein_sequence seq  - the one letter code AA sequence of the protein\n        position start        - the start position of the start codon in the genome contig (may be a larger\n                                number than stop if the gene is on the reverse strand)\n        position stop         - the last position of he stop codon in the genome contig",
            "module" : "MOTranslation",
            "name" : "query_sequence"
          }
        }
      }, {
        "name" : "genomeId",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "kbaseId can represent any object with a KBase identifier. \nIn the future this may be used to translate between other data\ntypes, such as contig or genome.",
            "module" : "MOTranslation",
            "name" : "kbaseId"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "genomeId is a kbase id of a genome",
          "module" : "MOTranslation",
          "name" : "genomeId"
        }
      } ],
      "return_type" : [ {
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Mapping",
          "annotations" : { },
          "key_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "internally consistant and unique id of a protein (could just be integers 0..n), necessary\nfor returning results",
            "module" : "MOTranslation",
            "name" : "protein_id"
          },
          "value_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Struct",
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { }
              },
              "comment" : "A simple structure which returns the best matching FID to a given query (see query_sequence) and attaches\na short status string indicating how the match was made, or which consoles you after a match could not\nbe made.\n\n        fid best_match - the feature ID of a KBase feature that offers the best mapping to your query\n        status status  - a short note explaining how the match was made",
              "items" : [ {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "fid is a feature id in KBase.",
                  "module" : "MOTranslation",
                  "name" : "fid"
                },
                "name" : "best_match",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A short note used to convey the status or explanaton of a result, or in some cases a log of the\nmethod that was run",
                  "module" : "MOTranslation",
                  "name" : "status"
                },
                "name" : "status",
                "nullable" : "0"
              } ],
              "module" : "MOTranslation",
              "name" : "result"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A simple structure which returns the best matching FID to a given query (see query_sequence) and attaches\na short status string indicating how the match was made, or which consoles you after a match could not\nbe made.\n\n        fid best_match - the feature ID of a KBase feature that offers the best mapping to your query\n        status status  - a short note explaining how the match was made",
            "module" : "MOTranslation",
            "name" : "result"
          }
        }
      }, {
        "name" : "log",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A short note used to convey the status or explanaton of a result, or in some cases a log of the\nmethod that was run",
          "module" : "MOTranslation",
          "name" : "status"
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "Performs the same function as map_to_fid, except it does not require protein sequences to be defined. Instead, it assumes\ngenomes are identical and simply looks for genes on the same strand that overlap by at least 50%. Since no sequences are\ncompared, this method is fast.  But, since no sequences are compared, this method only makes sense for identical genomes",
      "name" : "map_to_fid_fast",
      "parameters" : [ {
        "name" : "query_md5s",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Struct",
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { }
              },
              "comment" : "A structure for specifying the input md5 queries for the map_to_fid_fast method.  This structure assumes\nyou will be making queries with identical genomes, so it requires the start and stop.\n\n        protein_id id         - arbitrary ID that must be unique within the set of query sequences\n        protein md5           - the computed md5 of the protein sequence\n        position start        - the start position of the start codon in the genome contig (may be a larger\n                                number than stop if the gene is on the reverse strand)\n        position stop         - the last position of he stop codon in the genome contig",
              "items" : [ {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "internally consistant and unique id of a protein (could just be integers 0..n), necessary\nfor returning results",
                  "module" : "MOTranslation",
                  "name" : "protein_id"
                },
                "name" : "id",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "protein is an MD5 in KBase. It is the primary lookup between\nKBase fids and MicrobesOnline locusIds.",
                  "module" : "MOTranslation",
                  "name" : "protein"
                },
                "name" : "md5",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "int"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "Used to indicate a single nucleotide/residue location in a sequence",
                  "module" : "MOTranslation",
                  "name" : "position"
                },
                "name" : "start",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "int"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "Used to indicate a single nucleotide/residue location in a sequence",
                  "module" : "MOTranslation",
                  "name" : "position"
                },
                "name" : "stop",
                "nullable" : "0"
              } ],
              "module" : "MOTranslation",
              "name" : "query_md5"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A structure for specifying the input md5 queries for the map_to_fid_fast method.  This structure assumes\nyou will be making queries with identical genomes, so it requires the start and stop.\n\n        protein_id id         - arbitrary ID that must be unique within the set of query sequences\n        protein md5           - the computed md5 of the protein sequence\n        position start        - the start position of the start codon in the genome contig (may be a larger\n                                number than stop if the gene is on the reverse strand)\n        position stop         - the last position of he stop codon in the genome contig",
            "module" : "MOTranslation",
            "name" : "query_md5"
          }
        }
      }, {
        "name" : "genomeId",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "kbaseId can represent any object with a KBase identifier. \nIn the future this may be used to translate between other data\ntypes, such as contig or genome.",
            "module" : "MOTranslation",
            "name" : "kbaseId"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "genomeId is a kbase id of a genome",
          "module" : "MOTranslation",
          "name" : "genomeId"
        }
      } ],
      "return_type" : [ {
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Mapping",
          "annotations" : { },
          "key_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "internally consistant and unique id of a protein (could just be integers 0..n), necessary\nfor returning results",
            "module" : "MOTranslation",
            "name" : "protein_id"
          },
          "value_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Struct",
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { }
              },
              "comment" : "A simple structure which returns the best matching FID to a given query (see query_sequence) and attaches\na short status string indicating how the match was made, or which consoles you after a match could not\nbe made.\n\n        fid best_match - the feature ID of a KBase feature that offers the best mapping to your query\n        status status  - a short note explaining how the match was made",
              "items" : [ {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "fid is a feature id in KBase.",
                  "module" : "MOTranslation",
                  "name" : "fid"
                },
                "name" : "best_match",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A short note used to convey the status or explanaton of a result, or in some cases a log of the\nmethod that was run",
                  "module" : "MOTranslation",
                  "name" : "status"
                },
                "name" : "status",
                "nullable" : "0"
              } ],
              "module" : "MOTranslation",
              "name" : "result"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A simple structure which returns the best matching FID to a given query (see query_sequence) and attaches\na short status string indicating how the match was made, or which consoles you after a match could not\nbe made.\n\n        fid best_match - the feature ID of a KBase feature that offers the best mapping to your query\n        status status  - a short note explaining how the match was made",
            "module" : "MOTranslation",
            "name" : "result"
          }
        }
      }, {
        "name" : "log",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A short note used to convey the status or explanaton of a result, or in some cases a log of the\nmethod that was run",
          "module" : "MOTranslation",
          "name" : "status"
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "A method designed to map MicrobesOnline locus ids to the features of a specific target genome in kbase.  Under the hood, this\nmethod simply fetches MicrobesOnline data and calls the 'map_to_fid' method defined in this service.  Therefore, all the caveats\nand disclaimers of the 'map_to_fid' method apply to this function as well, so be sure to read the documenation for the 'map_to_fid'\nmethod as well!",
      "name" : "moLocusIds_to_fid_in_genome",
      "parameters" : [ {
        "name" : "moLocusIds",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "moLocusId is a locusId in MicrobesOnline. It is analogous to a fid\nin KBase.",
            "module" : "MOTranslation",
            "name" : "moLocusId"
          }
        }
      }, {
        "name" : "genomeId",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "kbaseId can represent any object with a KBase identifier. \nIn the future this may be used to translate between other data\ntypes, such as contig or genome.",
            "module" : "MOTranslation",
            "name" : "kbaseId"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "genomeId is a kbase id of a genome",
          "module" : "MOTranslation",
          "name" : "genomeId"
        }
      } ],
      "return_type" : [ {
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Mapping",
          "annotations" : { },
          "key_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "moLocusId is a locusId in MicrobesOnline. It is analogous to a fid\nin KBase.",
            "module" : "MOTranslation",
            "name" : "moLocusId"
          },
          "value_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Struct",
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { }
              },
              "comment" : "A simple structure which returns the best matching FID to a given query (see query_sequence) and attaches\na short status string indicating how the match was made, or which consoles you after a match could not\nbe made.\n\n        fid best_match - the feature ID of a KBase feature that offers the best mapping to your query\n        status status  - a short note explaining how the match was made",
              "items" : [ {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "fid is a feature id in KBase.",
                  "module" : "MOTranslation",
                  "name" : "fid"
                },
                "name" : "best_match",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A short note used to convey the status or explanaton of a result, or in some cases a log of the\nmethod that was run",
                  "module" : "MOTranslation",
                  "name" : "status"
                },
                "name" : "status",
                "nullable" : "0"
              } ],
              "module" : "MOTranslation",
              "name" : "result"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A simple structure which returns the best matching FID to a given query (see query_sequence) and attaches\na short status string indicating how the match was made, or which consoles you after a match could not\nbe made.\n\n        fid best_match - the feature ID of a KBase feature that offers the best mapping to your query\n        status status  - a short note explaining how the match was made",
            "module" : "MOTranslation",
            "name" : "result"
          }
        }
      }, {
        "name" : "log",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A short note used to convey the status or explanaton of a result, or in some cases a log of the\nmethod that was run",
          "module" : "MOTranslation",
          "name" : "status"
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "Performs the same function as moLocusIds_to_fid_in_genome, but does not retrieve protein sequences for the locus Ids - it simply\nuses md5 information and start/stop positions to identify matches.  It is therefore faster, but will not work if genomes are not\nidentical.",
      "name" : "moLocusIds_to_fid_in_genome_fast",
      "parameters" : [ {
        "name" : "moLocusIds",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "moLocusId is a locusId in MicrobesOnline. It is analogous to a fid\nin KBase.",
            "module" : "MOTranslation",
            "name" : "moLocusId"
          }
        }
      }, {
        "name" : "genomeId",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "kbaseId can represent any object with a KBase identifier. \nIn the future this may be used to translate between other data\ntypes, such as contig or genome.",
            "module" : "MOTranslation",
            "name" : "kbaseId"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "genomeId is a kbase id of a genome",
          "module" : "MOTranslation",
          "name" : "genomeId"
        }
      } ],
      "return_type" : [ {
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Mapping",
          "annotations" : { },
          "key_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "moLocusId is a locusId in MicrobesOnline. It is analogous to a fid\nin KBase.",
            "module" : "MOTranslation",
            "name" : "moLocusId"
          },
          "value_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Struct",
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { }
              },
              "comment" : "A simple structure which returns the best matching FID to a given query (see query_sequence) and attaches\na short status string indicating how the match was made, or which consoles you after a match could not\nbe made.\n\n        fid best_match - the feature ID of a KBase feature that offers the best mapping to your query\n        status status  - a short note explaining how the match was made",
              "items" : [ {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "fid is a feature id in KBase.",
                  "module" : "MOTranslation",
                  "name" : "fid"
                },
                "name" : "best_match",
                "nullable" : "0"
              }, {
                "!" : "Bio::KBase::KIDL::KBT::StructItem",
                "item_type" : {
                  "!" : "Bio::KBase::KIDL::KBT::Typedef",
                  "alias_type" : {
                    "!" : "Bio::KBase::KIDL::KBT::Scalar",
                    "annotations" : { },
                    "scalar_type" : "string"
                  },
                  "annotations" : {
                    "metadata" : { },
                    "searchable_ws_subset" : { },
                    "unknown_annotations" : { }
                  },
                  "comment" : "A short note used to convey the status or explanaton of a result, or in some cases a log of the\nmethod that was run",
                  "module" : "MOTranslation",
                  "name" : "status"
                },
                "name" : "status",
                "nullable" : "0"
              } ],
              "module" : "MOTranslation",
              "name" : "result"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A simple structure which returns the best matching FID to a given query (see query_sequence) and attaches\na short status string indicating how the match was made, or which consoles you after a match could not\nbe made.\n\n        fid best_match - the feature ID of a KBase feature that offers the best mapping to your query\n        status status  - a short note explaining how the match was made",
            "module" : "MOTranslation",
            "name" : "result"
          }
        }
      }, {
        "name" : "log",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "string"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "A short note used to convey the status or explanaton of a result, or in some cases a log of the\nmethod that was run",
          "module" : "MOTranslation",
          "name" : "status"
        }
      } ]
    }, {
      "!" : "Bio::KBase::KIDL::KBT::Funcdef",
      "annotations" : {
        "unknown_annotations" : { }
      },
      "async" : "0",
      "authentication" : "none",
      "comment" : "A method to map a MicrobesOnline genome (identified by taxonomy Id) to the set of identical kbase genomes based on an MD5 checksum\nof the contig sequences.  If you already know your MD5 value for your genome (computed in the KBase way), then you should avoid this\nmethod and directly query the CDS using the CDMI API, which includes a method 'md5s_to_genomes'.",
      "name" : "moTaxonomyId_to_genomes",
      "parameters" : [ {
        "name" : "moTaxonomyId",
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::Typedef",
          "alias_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Scalar",
            "annotations" : { },
            "scalar_type" : "int"
          },
          "annotations" : {
            "metadata" : { },
            "searchable_ws_subset" : { },
            "unknown_annotations" : { }
          },
          "comment" : "moTaxonomyId is a taxonomyId in MicrobesOnline.  It is somewhat analogous\nto a genome kbId in KBase.  It generally stores the NCBI taxonomy ID,\nthough sometimes can store an internal identifier instead.",
          "module" : "MOTranslation",
          "name" : "moTaxonomyId"
        }
      } ],
      "return_type" : [ {
        "type" : {
          "!" : "Bio::KBase::KIDL::KBT::List",
          "annotations" : { },
          "element_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Typedef",
              "alias_type" : {
                "!" : "Bio::KBase::KIDL::KBT::Scalar",
                "annotations" : { },
                "scalar_type" : "string"
              },
              "annotations" : {
                "metadata" : { },
                "searchable_ws_subset" : { },
                "unknown_annotations" : { }
              },
              "comment" : "kbaseId can represent any object with a KBase identifier. \nIn the future this may be used to translate between other data\ntypes, such as contig or genome.",
              "module" : "MOTranslation",
              "name" : "kbaseId"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "genomeId is a kbase id of a genome",
            "module" : "MOTranslation",
            "name" : "genomeId"
          }
        }
      } ]
    } ],
    "module_name" : "MOTranslation",
    "options" : [ ],
    "service_name" : "MOTranslation"
  }, [ ], {
    "UnspecifiedObject" : {
      "!" : "Bio::KBase::KIDL::KBT::UnspecifiedObject",
      "annotations" : { }
    },
    "fid" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "fid is a feature id in KBase.",
      "module" : "MOTranslation",
      "name" : "fid"
    },
    "float" : {
      "!" : "Bio::KBase::KIDL::KBT::Scalar",
      "annotations" : { },
      "scalar_type" : "float"
    },
    "genomeId" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Typedef",
        "alias_type" : {
          "!" : "Bio::KBase::KIDL::KBT::Scalar",
          "annotations" : { },
          "scalar_type" : "string"
        },
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { },
          "unknown_annotations" : { }
        },
        "comment" : "kbaseId can represent any object with a KBase identifier. \nIn the future this may be used to translate between other data\ntypes, such as contig or genome.",
        "module" : "MOTranslation",
        "name" : "kbaseId"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "genomeId is a kbase id of a genome",
      "module" : "MOTranslation",
      "name" : "genomeId"
    },
    "int" : {
      "!" : "Bio::KBase::KIDL::KBT::Scalar",
      "annotations" : { },
      "scalar_type" : "int"
    },
    "kbaseId" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "kbaseId can represent any object with a KBase identifier. \nIn the future this may be used to translate between other data\ntypes, such as contig or genome.",
      "module" : "MOTranslation",
      "name" : "kbaseId"
    },
    "moLocusId" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "moLocusId is a locusId in MicrobesOnline. It is analogous to a fid\nin KBase.",
      "module" : "MOTranslation",
      "name" : "moLocusId"
    },
    "moScaffoldId" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "moScaffoldId is a scaffoldId in MicrobesOnline.  It is analogous to\na contig kbId in KBase.",
      "module" : "MOTranslation",
      "name" : "moScaffoldId"
    },
    "moTaxonomyId" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "moTaxonomyId is a taxonomyId in MicrobesOnline.  It is somewhat analogous\nto a genome kbId in KBase.  It generally stores the NCBI taxonomy ID,\nthough sometimes can store an internal identifier instead.",
      "module" : "MOTranslation",
      "name" : "moTaxonomyId"
    },
    "position" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "int"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "Used to indicate a single nucleotide/residue location in a sequence",
      "module" : "MOTranslation",
      "name" : "position"
    },
    "protein" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "protein is an MD5 in KBase. It is the primary lookup between\nKBase fids and MicrobesOnline locusIds.",
      "module" : "MOTranslation",
      "name" : "protein"
    },
    "protein_id" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "internally consistant and unique id of a protein (could just be integers 0..n), necessary\nfor returning results",
      "module" : "MOTranslation",
      "name" : "protein_id"
    },
    "protein_sequence" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "AA sequence of a protein",
      "module" : "MOTranslation",
      "name" : "protein_sequence"
    },
    "query_md5" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "A structure for specifying the input md5 queries for the map_to_fid_fast method.  This structure assumes\nyou will be making queries with identical genomes, so it requires the start and stop.\n\n        protein_id id         - arbitrary ID that must be unique within the set of query sequences\n        protein md5           - the computed md5 of the protein sequence\n        position start        - the start position of the start codon in the genome contig (may be a larger\n                                number than stop if the gene is on the reverse strand)\n        position stop         - the last position of he stop codon in the genome contig",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "internally consistant and unique id of a protein (could just be integers 0..n), necessary\nfor returning results",
            "module" : "MOTranslation",
            "name" : "protein_id"
          },
          "name" : "id",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "protein is an MD5 in KBase. It is the primary lookup between\nKBase fids and MicrobesOnline locusIds.",
            "module" : "MOTranslation",
            "name" : "protein"
          },
          "name" : "md5",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Used to indicate a single nucleotide/residue location in a sequence",
            "module" : "MOTranslation",
            "name" : "position"
          },
          "name" : "start",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Used to indicate a single nucleotide/residue location in a sequence",
            "module" : "MOTranslation",
            "name" : "position"
          },
          "name" : "stop",
          "nullable" : "0"
        } ],
        "module" : "MOTranslation",
        "name" : "query_md5"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A structure for specifying the input md5 queries for the map_to_fid_fast method.  This structure assumes\nyou will be making queries with identical genomes, so it requires the start and stop.\n\n        protein_id id         - arbitrary ID that must be unique within the set of query sequences\n        protein md5           - the computed md5 of the protein sequence\n        position start        - the start position of the start codon in the genome contig (may be a larger\n                                number than stop if the gene is on the reverse strand)\n        position stop         - the last position of he stop codon in the genome contig",
      "module" : "MOTranslation",
      "name" : "query_md5"
    },
    "query_sequence" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "A structure for specifying the input sequence queries for the map_to_fid method.  This structure, for\nnow, assumes you will be making queries with identical genomes, so it requires the start and stop.  In the\nfuture, if this assumption is relaxed, then start and stop will be optional parameters.  We should probably\nalso add an MD5 string which can optionally be provided so that we don't have to compute it on the fly.\n\n        protein_id id         - arbitrary ID that must be unique within the set of query sequences\n        protein_sequence seq  - the one letter code AA sequence of the protein\n        position start        - the start position of the start codon in the genome contig (may be a larger\n                                number than stop if the gene is on the reverse strand)\n        position stop         - the last position of he stop codon in the genome contig",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "internally consistant and unique id of a protein (could just be integers 0..n), necessary\nfor returning results",
            "module" : "MOTranslation",
            "name" : "protein_id"
          },
          "name" : "id",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "AA sequence of a protein",
            "module" : "MOTranslation",
            "name" : "protein_sequence"
          },
          "name" : "seq",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Used to indicate a single nucleotide/residue location in a sequence",
            "module" : "MOTranslation",
            "name" : "position"
          },
          "name" : "start",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "int"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "Used to indicate a single nucleotide/residue location in a sequence",
            "module" : "MOTranslation",
            "name" : "position"
          },
          "name" : "stop",
          "nullable" : "0"
        } ],
        "module" : "MOTranslation",
        "name" : "query_sequence"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A structure for specifying the input sequence queries for the map_to_fid method.  This structure, for\nnow, assumes you will be making queries with identical genomes, so it requires the start and stop.  In the\nfuture, if this assumption is relaxed, then start and stop will be optional parameters.  We should probably\nalso add an MD5 string which can optionally be provided so that we don't have to compute it on the fly.\n\n        protein_id id         - arbitrary ID that must be unique within the set of query sequences\n        protein_sequence seq  - the one letter code AA sequence of the protein\n        position start        - the start position of the start codon in the genome contig (may be a larger\n                                number than stop if the gene is on the reverse strand)\n        position stop         - the last position of he stop codon in the genome contig",
      "module" : "MOTranslation",
      "name" : "query_sequence"
    },
    "result" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Struct",
        "annotations" : {
          "metadata" : { },
          "searchable_ws_subset" : { }
        },
        "comment" : "A simple structure which returns the best matching FID to a given query (see query_sequence) and attaches\na short status string indicating how the match was made, or which consoles you after a match could not\nbe made.\n\n        fid best_match - the feature ID of a KBase feature that offers the best mapping to your query\n        status status  - a short note explaining how the match was made",
        "items" : [ {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "fid is a feature id in KBase.",
            "module" : "MOTranslation",
            "name" : "fid"
          },
          "name" : "best_match",
          "nullable" : "0"
        }, {
          "!" : "Bio::KBase::KIDL::KBT::StructItem",
          "item_type" : {
            "!" : "Bio::KBase::KIDL::KBT::Typedef",
            "alias_type" : {
              "!" : "Bio::KBase::KIDL::KBT::Scalar",
              "annotations" : { },
              "scalar_type" : "string"
            },
            "annotations" : {
              "metadata" : { },
              "searchable_ws_subset" : { },
              "unknown_annotations" : { }
            },
            "comment" : "A short note used to convey the status or explanaton of a result, or in some cases a log of the\nmethod that was run",
            "module" : "MOTranslation",
            "name" : "status"
          },
          "name" : "status",
          "nullable" : "0"
        } ],
        "module" : "MOTranslation",
        "name" : "result"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A simple structure which returns the best matching FID to a given query (see query_sequence) and attaches\na short status string indicating how the match was made, or which consoles you after a match could not\nbe made.\n\n        fid best_match - the feature ID of a KBase feature that offers the best mapping to your query\n        status status  - a short note explaining how the match was made",
      "module" : "MOTranslation",
      "name" : "result"
    },
    "status" : {
      "!" : "Bio::KBase::KIDL::KBT::Typedef",
      "alias_type" : {
        "!" : "Bio::KBase::KIDL::KBT::Scalar",
        "annotations" : { },
        "scalar_type" : "string"
      },
      "annotations" : {
        "metadata" : { },
        "searchable_ws_subset" : { },
        "unknown_annotations" : { }
      },
      "comment" : "A short note used to convey the status or explanaton of a result, or in some cases a log of the\nmethod that was run",
      "module" : "MOTranslation",
      "name" : "status"
    },
    "string" : {
      "!" : "Bio::KBase::KIDL::KBT::Scalar",
      "annotations" : { },
      "scalar_type" : "string"
    }
  } ] ]
}