#if($language == "python")
FROM python:3.12-trixie
#else
FROM eclipse-temurin:17.0.16_8-jdk-noble
#end
LABEL maintainer=#if($username)${username}#{else}"KBase Developer"#{end}

# -----------------------------------------
# Set up SDK requirements

# In this section, we install code required for the SDK to run.

# Don't spam the KBase Catalog logs
ENV PIP_PROGRESS_BAR=off

# Install general binaries
#if($language == "python") 
RUN apt update && apt install -y wget
#else
RUN apt update && apt install -y wget make git ant \
    python3.12 python-is-python3 python3-jinja2=3.1.2-1ubuntu1.3
#end

# Install the SDK binary. This is required for spec compilation and catalog registration.
ENV SDK_VER=0.1.0-alpha5
ENV SDK_SHA=52b73fd3fb1fe1c5fa5d1fa6298587093cf2368d2cac9fae8ebdb2f3765b72db
RUN mkdir -p /sdk/bin \
    && wget -q -O /sdk/bin/kb-sdk https://github.com/kbase/kb_sdk_plus/releases/download/$SDK_VER/kb-sdk-linux-x64 \
    && echo "$SDK_SHA /sdk/bin/kb-sdk" | sha256sum --check \
    && chmod a+x /sdk/bin/kb-sdk
ENV PATH=/sdk/bin:$PATH


#if($language == "python")
# Install python libraries required by the SDK code.
# You may wish to use a dependency manager like pipenv or uv to install
# these as well as your own dependencies.
# Note uwsgi can be removed if this module is not a dynamic service, which is usually the case
RUN pip install \
    requests==2.32.5 \
    jsonrpcbase==0.2.0 \
    jinja2==3.1.6 \
    uwsgi==2.0.30 \
    pytest==8.4.2 \
    pytest-cov==6.2.1
#else
# Install the jars repo.
# docker-java-shaded contains log4j w/ vuln, hence the delete
RUN mkdir -p /opt/jars_temp \
    && cd /opt/jars_temp \
    && git clone https://github.com/kbase/jars.git \
    && rm jars/lib/jars/dockerjava/docker-java-shaded-3.0.14.jar \
    && mv /opt/jars_temp/jars/lib/jars /opt/jars \
    && rm -r /opt/jars_temp
#end

# -----------------------------------------
# In this section, you can install any system dependencies required
# to run your App.  For instance, you could place an apt-get update or
# install line here, a git checkout to download code, or run any other
# installation scripts.

# RUN apt-get update

#if($example)
#if($language == "python")
# Install BioPython for the application
RUN pip install biopython==1.85
#else
# download a fasta reader/writer
RUN cd /opt/jars \
    && wget https://downloads.sourceforge.net/project/jfasta/releases/jfasta-2.2.0/jfasta-2.2.0-jar-with-dependencies.jar
#end
#end

# -----------------------------------------

COPY ./ /kb/module
RUN mkdir -p /kb/module/work
RUN chmod -R a+rw /kb/module

WORKDIR /kb/module

RUN make all

ENTRYPOINT [ "./scripts/entrypoint.sh" ]

CMD [ ]
